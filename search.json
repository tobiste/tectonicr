[{"path":[]},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others’ private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement codeofconduct@rstudio.com. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://tobiste.github.io/tectonicr/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired [Mozilla’s code conduct enforcement ladder][https://github.com/mozilla/inclusion]. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contributing to tectonicr","title":"Contributing to tectonicr","text":"outlines propose change tectonicr. detailed info contributing , tidyverse packages, please see development contributing guide.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"fixing-typos","dir":"","previous_headings":"","what":"Fixing typos","title":"Contributing to tectonicr","text":"can fix typos, spelling mistakes, grammatical errors documentation directly using GitHub web interface, long changes made source file. generally means ’ll need edit roxygen2 comments .R, .Rd file. can find .R file generates .Rd reading comment first line.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"bigger-changes","dir":"","previous_headings":"","what":"Bigger changes","title":"Contributing to tectonicr","text":"want make bigger change, ’s good idea first file issue make sure someone team agrees ’s needed. ’ve found bug, please file issue illustrates bug minimal reprex (also help write unit test, needed).","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"pull-request-process","dir":"","previous_headings":"Bigger changes","what":"Pull request process","title":"Contributing to tectonicr","text":"Fork package clone onto computer. haven’t done , recommend using usethis::create_from_github(\"tobiste/tectonicr\", fork = TRUE). Install development dependencies devtools::install_dev_deps(), make sure package passes R CMD check running devtools::check(). R CMD check doesn’t pass cleanly, ’s good idea ask help continuing. Create Git branch pull request (PR). recommend using usethis::pr_init(\"brief-description--change\"). Make changes, commit git, create PR running usethis::pr_push(), following prompts browser. title PR briefly describe change. body PR contain Fixes #issue-number. user-facing changes, add bullet top NEWS.md (.e. just first header). Follow style described https://style.tidyverse.org/news.html.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"code-style","dir":"","previous_headings":"Bigger changes","what":"Code style","title":"Contributing to tectonicr","text":"New code follow tidyverse style guide. can use styler package apply styles, please don’t restyle code nothing PR. use roxygen2, Markdown syntax, documentation. use testthat unit tests. Contributions test cases included easier accept.","code":""},{"path":"https://tobiste.github.io/tectonicr/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contributing to tectonicr","text":"Please note tectonicr project released Contributor Code Conduct. contributing project agree abide terms.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://tobiste.github.io/tectonicr/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":null,"dir":"","previous_headings":"","what":"Getting help with tectonicr","title":"Getting help with tectonicr","text":"Thanks using tectonicr! filing issue, places explore pieces put together make process smooth possible.","code":""},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":"make-a-reprex","dir":"","previous_headings":"","what":"Make a reprex","title":"Getting help with tectonicr","text":"Start making minimal reproducible example using reprex package. haven’t heard used reprex , ’re treat! Seriously, reprex make R-question-asking endeavors easier (pretty insane ROI five ten minutes ’ll take learn ’s ). additional reprex pointers, check Get help! section tidyverse site.","code":""},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":"where-to-ask","dir":"","previous_headings":"","what":"Where to ask?","title":"Getting help with tectonicr","text":"Armed reprex, next step figure ask. ’s question: start community.rstudio.com, /StackOverflow. people answer questions. ’s bug: ’re right place, file issue. ’re sure: let community help figure ! problem bug feature request, can easily return report . opening new issue, sure search issues pull requests make sure bug hasn’t reported /already fixed development version. default, search pre-populated :issue :open. can edit qualifiers (e.g. :pr, :closed) needed. example, ’d simply remove :open search issues repo, open closed.","code":""},{"path":"https://tobiste.github.io/tectonicr/SUPPORT.html","id":"what-happens-next","dir":"","previous_headings":"","what":"What happens next?","title":"Getting help with tectonicr","text":"efficient possible, development tidyverse packages tends bursty, shouldn’t worry don’t get immediate response. Typically don’t look repo sufficient quantity issues accumulates, ’s burst intense activity focus efforts. makes development efficient avoids expensive context switching problems, cost taking longer get back . process makes good reprex particularly important might multiple months initial report start working . can’t reproduce bug, can’t fix !","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"theoretical-background","dir":"Articles","previous_headings":"","what":"Theoretical background","title":"1. Introduction to tectonicr","text":"theory intraplate tectonics (Wdowinski 1998) allows calculating first-order intraplate deformation induced horizontal displacement deformable plate boundaries (Stephan et al., 2023). based empirical link directions relative plate motion displacement deformation fields within plate interior adjacent three types deformable plate boundaries: inward-, outward-, tangential-displaced boundaries. model predicts direction intraplate displacement, displacement rate, strain, stress fields terms small circles, great circles, 45∘^{\\circ} loxodromes around pole rotation two adjacent plates. According theory, principal axis maximum horizontal stress follows small circles inward-displaced boundaries, great circles outward-displaced boundaries, loxodromes tangential-displaced boundaries. theory assumes first-order intraplate deformation predominantly induced horizontal forces acting plate boundaries buoyancy forces arise lateral density variations mid-ocean ridges plate interiors (ridge push).","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"inward-outward-and-tangential-displaced-boundaries","dir":"Articles","previous_headings":"Theoretical background","what":"Inward, Outward and Tangential Displaced Boundaries","title":"1. Introduction to tectonicr","text":"Inward-moving plate boundaries induce compressional horizontal tractions plate boundary towards plate’s interior along direction relative plate motion. compressional tractions produced forces related subduction, collision, ridge-push. Thus, stresses across convergent plate boundaries characterized dominance thrusting strike-slip faulting (σ1≈σHmax\\sigma_1 \\approx \\sigma_{Hmax}) σHmax\\sigma_{Hmax} (maximum horizontal stress) trending parallel plate convergence, .e. parallel small circles around pole relative plate motion (pole rotation, PoR). Outward moving plate boundaries produce tensional tractions displacements directed away plate interior. Along spreading ridges intracontinental rifting stresses dominated normal faulting (σ1≈σvertical\\sigma_1 \\approx \\sigma_{vertical}, σ2≈σHmax\\sigma_2 \\approx \\sigma_{Hmax}) σHmax\\sigma_{Hmax} trending perpendicular plate motion trajectories (.e. along great circles). case intracontinental setting, stresses displacements may associated slab-retreat, back-arc extension, release excess gravitational potential energy stored thickened crust , e.g., gravitational collapse. Along transform boundaries (tangential displaced boundaries), two neighboring plates exert shear tractions tangential orientation boundary (Forsyth Uyeda, 1975). Faulting displacement adjacent plate boundaries characterized strike-slip parallel plate motion, thus, principal axes maximum minimum stress orientated angle c. 45∘^{\\circ} plate motion trajectory. Geometrically, σHmax\\sigma_{Hmax} direction follows along 45∘^{\\circ}loxodromes (lines constant bearing) diverge —depending sense transform boundary— clockwise counterclockwise relative PoR intersect small great circles angle 45∘^{\\circ}.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"theoretical-direction-of-horizontal-stress-and-deviation-from-the-measured-stress","dir":"Articles","previous_headings":"","what":"Theoretical direction of Horizontal Stress and Deviation From the Measured Stress","title":"1. Introduction to tectonicr","text":"Trajectories theoretical directions can modeled following steps: First, load package: Next, need specify coordinates Pole Rotation (PoR) get directions great circles, small circles, loxodromes around PoR given point (e.g. 45∘^{\\circ}N/20∘^{\\circ}E). example, PoR coordinates: 90∘^{\\circ}N/0∘^{\\circ}E. σHmax\\sigma_{Hmax} following great small circles loxodromes geometries can modeled model_shmax(): observed stress direction point, e.g. azimuth σHmax\\sigma_{Hmax} 90∘^{\\circ}, deviation modeled stress directions can calculated deviation_shmax():","code":"library(tectonicr) library(ggplot2) # load ggplot library # Example: point <- data.frame(lat = 45, lon = 20) por <- data.frame(lat = 90, lon = 0) model <- model_shmax(point, por) print(model) #>   sc ld.ccw gc ld.cw #> 1 90    135  0    45 deviation <- deviation_shmax(model, 90) print(deviation) #>   dev.gc dev.sc dev.ld.cw dev.ld.ccw #> 1    -90      0       -45         45"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"quantitative-comparison-between-predicted-and-observed-maximum-horizontal-stress","dir":"Articles","previous_headings":"","what":"Quantitative Comparison Between Predicted and Observed Maximum Horizontal Stress","title":"1. Introduction to tectonicr","text":"normalized χ2\\chi^2 test quantitatively compares predicted (model_shmax()) observed σHmax\\sigma_{Hmax} azimuth relative reported σ\\sigma standard deviation (Wdowinski 1998). normalized χ2\\chi^2 test yields number range 0-1 indicates quality fit. Low values normalized χ2\\chi^2 test (≤\\leq 0.15 indicate good agreement predicted observed directions. High values (>> 0.7) indicate systematic misfit predicted observed directions 90∘^{\\circ}. Random distribution σHmax\\sigma_{Hmax} directions results Norm χ2=0.33\\chi^2 = 0.33 test can run using norm_chisq(obs, prd, unc). obs numeric vector observed σHmax\\sigma_{Hmax}; prd vector predicted σHmax\\sigma_{Hmax} (vector must length obs); unc uncertainty observed σHmax\\sigma_{Hmax} (either numeric vector length obs number).","code":"data(\"nuvel1\") # import example data set for Euler rotations por <- subset(   nuvel1, nuvel1$plate.rot == \"na\" ) # North America relative to Pacific plate point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, por) norm_chisq(obs = 90, prd$sc, unc = 10) #> [1] 0.2790849"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"models-of-current-plate-motion","dir":"Articles","previous_headings":"","what":"Models of current plate motion","title":"1. Introduction to tectonicr","text":"plate motions relative Pacific plate according NUVEL-1A model (DeMets et al. 1990) implemented package can imported : current plate motion models, particulars NNR-MORVEL-56, GSRM2.1, REVEL, PB2002, HS3-NUVEL1A, implemented available desired relative plate motion can extracted via following:","code":"data(\"nuvel1\") head(nuvel1) data(\"cpm_models\") head(cpm_models) gsrm <- cpm_models[[\"GSRM2.1\"]] equivalent_rotation(gsrm, rot = \"na\", fixed = \"eu\")"},{"path":"https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"1. Introduction to tectonicr","text":"DeMets, C., R. G. Gordon, D. F. Argus, S. Stein. 1990. “Current Plate Motions” Geophysical Journal International 101 (2): 425–78. doi: 10.1111/j.1365-246x.1990.tb06579.x Forsyth, D., S. Uyeda. 1975. “Relative Importance Driving Forces Plate Motion” Geophysical Journal International 43 (1): 163–200. doi: 10.1111/j.1365-246x.1975.tb00631.x Stephan, T., Enkelmann, E., Kroner, U. (2023). “Analyzing horizontal orientation crustal stress adjacent plate boundaries” Scientific Reports (13), 15590. doi:[10.1038/s41598-023-42433-2](https://doi.org/10.1038/s41598-023-42433-2) Wdowinski, Shimon. 1998. “Theory Intraplate Tectonics” Journal Geophysical Research: Solid Earth 103 (B3): 5037–59. doi: 10.1029/97jb03390.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"larger-data-sets","dir":"Articles","previous_headings":"","what":"Larger Data Sets","title":"2. Handling large datasets","text":"tectonicr also handles larger data sets. subset World Stress Map data compilation (Heidbach et al. 2016) included example data set can imported : full individually filtered world stress map dataset can downloaded download_WSM2016() Modeling stress directions (wrt. geographic North pole) using Pole Oration (PoR) motion North America relative Pacific Plate. test dataset right-laterally tangential displacement type. Combine model results coordinates observed data","code":"data(\"san_andreas\") head(san_andreas) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -118.84 ymin: 35.97 xmax: -112.58 ymax: 39.08 #> Geodetic CRS:  WGS 84 #>         id   lat     lon azi unc type depth quality regime #> 1 wsm00892 38.14 -118.84  50  25  FMS     7       C      S #> 2 wsm00893 35.97 -114.71  54  25  FMS     5       C      S #> 3 wsm00894 37.93 -118.17  24  25  FMS     5       C      S #> 4 wsm00896 38.63 -118.21  41  25  FMS    17       C      N #> 5 wsm00897 39.08 -115.62  30  25  FMS     5       C      N #> 6 wsm00903 38.58 -112.58  27  25  FMS     7       C      N #>                geometry #> 1 POINT (-118.84 38.14) #> 2 POINT (-114.71 35.97) #> 3 POINT (-118.17 37.93) #> 4 POINT (-118.21 38.63) #> 5 POINT (-115.62 39.08) #> 6 POINT (-112.58 38.58) data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas.prd <- PoR_shmax(san_andreas, por, type = \"right\") san_andreas.res <- data.frame(   sf::st_drop_geometry(san_andreas),   san_andreas.prd )"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"stress-map","dir":"Articles","previous_headings":"","what":"Stress map","title":"2. Handling large datasets","text":"ggplot2::ggplot() can used visualize results. orientation axis can displayed function geom_spoke(). position argument position = \"center_spoke\" aligns marker symbol center point. deviation can color coded. deviation_norm() yields normalized value deviation, .e. absolute values 0 90∘^{\\circ}. Also included plate boundary geometries Bird (2003): Alternatively, also NUVEL1 plate boundary model DeMets et al.  (1990) stored data(\"nuvel1_plates\"). First create predicted trajectories σHmax\\sigma_{Hmax} (details Article 3.): initialize plot map… …add σHmax\\sigma_{Hmax} trajectories data points:  map shows generally low deviation observed σHmax\\sigma_{Hmax} directions modeled stress direction using counter-clockwise 45∘^{\\circ} loxodromes. normalized χ2\\chi^2 test quantifies fit modeled σHmax\\sigma_{Hmax} direction observed stress direction considering reported uncertainties measurement. value ≤\\leq 0.15, indicating significantly good fit model. Thus, traction transform plate boundary explain stress direction area.","code":"data(\"plates\") # load plate boundary data set trajectories <- eulerpole_loxodromes(por, 40, cw = FALSE) map <- ggplot() +   geom_sf(     data = plates,     color = \"red\",     lwd = 2,     alpha = .5   ) +   scale_color_continuous(     type = \"viridis\",     limits = c(0, 90),     name = \"|Deviation| in (\\u00B0)\",     breaks = seq(0, 90, 22.5)   ) +   scale_alpha_discrete(name = \"Quality rank\", range = c(1, 0.4)) map +   geom_sf(     data = trajectories,     lty = 2   ) +   geom_spoke(     data = san_andreas.res,     aes(       x = lon,       y = lat,       angle = deg2rad(90 - azi),       color = deviation_norm(dev),       alpha = quality     ),     radius = 1,     position = \"center_spoke\",     na.rm = TRUE   ) +   coord_sf(     xlim = range(san_andreas$lon),     ylim = range(san_andreas$lat)   ) norm_chisq(   obs = san_andreas.res$azi.PoR,   prd = 135,   unc = san_andreas.res$unc ) #> [1] 0.0529064"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"variation-of-the-direction-of-the-maximum-horizontal-stress-wrt--to-the-distance-to-the-plate-boundary","dir":"Articles","previous_headings":"","what":"Variation of the Direction of the Maximum Horizontal Stress wrt. to the Distance to the Plate Boundary","title":"2. Handling large datasets","text":"direction maximum horizontal stress correlates plate motion direction plate boundary zone. Towards plate interior, plate boundary forces become weaker stress sources probably dominate. visualize variation σHmax\\sigma_{Hmax} wrt. distance plate boundary, need transfer direction σHmax\\sigma_{Hmax} geographic reference system (.e. azimuth deviation direction geographic North pole) Pole Rotation (PoR) reference system (.e. azimuth deviation PoR). PoR coordinate reference system oblique transformation geographical coordinate system PoR coordinates translation factors. azimuth PoR reference system αPoR\\alpha_{PoR} angular difference azimuth geographic reference system αgeo\\alpha_{geo} (initial) bearing great circle passes data point PoR θ\\theta. calculate distance plate boundary, plate boundary geometries data points (geographical coordinates) transformed PoR reference system. PoR system, distance latitudinal longitudinal difference data points inward/outward tangential moving plate boundaries, respectively. done function distance_from_pb(), returns angular distances. Finally, visualize σHmax\\sigma_{Hmax} direction wrt. distance plate boundary:  Adding rolling statistics (e.g. weighted mean 95% confidence interval) transformed azimuth:  Close dextral plate boundary, majority stress data strike-slip fault regime oriented around 135∘^{\\circ} wrt. PoR. Thus, date parallel predicted stress sourced right-lateral displaced plate boundary. Away plate boundary, data becomes noisy. azimuth (PoR) vs. distance plot also allows identify whether less known plate boundary represents inward, outward, tangential displaced boundary. relationship azimuth distance can better visualized using deviation (normalized data precision) predicted stress direction, .e. normalized χ2\\chi^2:  can see data fact starts scatter notably beyond distance 3.8∘^{\\circ} becomes random 7∘^{\\circ} away plate boundary. Thus, North American-Pacific plate boundary zone San Andreas Fault approx. 4–7∘^{\\circ} (ca. 380–750 km) wide. normalized χ2\\chi^2 vs. distance plot allows specify width plate boundary zone.","code":"plate_boundary <- subset(plates, plates$pair == \"na-pa\") san_andreas.res$distance <-   distance_from_pb(     x = san_andreas,     PoR = por,     pb = plate_boundary,     tangential = TRUE   ) azi_plot <- ggplot(san_andreas.res, aes(x = distance, y = azi.PoR)) +   coord_cartesian(ylim = c(0, 180)) +   labs(x = \"Distance from plate boundary (\\u00B0)\", y = \"Azimuth in PoR (\\u00B0)\") +   geom_hline(yintercept = c(0, 45, 90, 135, 180), lty = 3) +   geom_pointrange(     aes(       ymin = azi.PoR - unc, ymax = azi.PoR + unc,       color = san_andreas$regime, alpha = san_andreas$quality     ),     size = .25   ) +   scale_y_continuous(     breaks = seq(-180, 360, 45),     sec.axis = sec_axis(       ~.,       name = NULL,       breaks = c(0, 45, 90, 135, 180),       labels = c(\"Outward\", \"Tan (L)\", \"Inward\", \"Tan (R)\", \"Outward\")     )   ) +   scale_alpha_discrete(name = \"Quality rank\", range = c(1, 0.1)) +   scale_color_manual(name = \"Tectonic regime\", values = stress_colors(), breaks = names(stress_colors())) print(azi_plot) san_andreas.res_roll <- san_andreas.res[order(san_andreas.res$distance), ]  san_andreas.res_roll$r_mean <- roll_circstats(   san_andreas.res_roll$azi.PoR,   w = 1 / san_andreas.res_roll$unc,   FUN = circular_mean, width = 51 )  san_andreas.res_roll$r_conf95 <- roll_confidence(   san_andreas.res_roll$azi.PoR,   w = 1 / san_andreas.res_roll$unc,   width = 51 )  azi_plot +   geom_step(     data = san_andreas.res_roll,     aes(distance, r_mean - r_conf95),     lty = 2   ) +   geom_step(     data = san_andreas.res_roll,     aes(distance, r_mean + r_conf95),     lty = 2   ) +   geom_step(     data = san_andreas.res_roll,     aes(distance, r_mean)   ) # Rolling norm chisq: san_andreas.res_roll$roll_nchisq <- roll_normchisq(   san_andreas.res_roll$azi.PoR,   san_andreas.res_roll$prd,   san_andreas.res_roll$unc,   width = 51 )  # plotting: ggplot(san_andreas.res, aes(x = distance, y = nchisq)) +   coord_cartesian(ylim = c(0, 1)) +   labs(x = \"Distance from plate boundary (\\u00B0)\", y = expression(Norm ~ chi^2)) +   geom_hline(yintercept = c(0.15, .33, .7), lty = 3) +   geom_point(aes(color = san_andreas$regime)) +   scale_y_continuous(sec.axis = sec_axis(     ~.,     name = NULL,     breaks = c(.15 / 2, .33, .7 + 0.15),     labels = c(\"Good fit\", \"Random\", \"Systematic\\nmisfit\")   )) +   scale_color_manual(name = \"Tectonic regime\", values = stress_colors(), breaks = names(stress_colors())) +   geom_step(     data = san_andreas.res_roll,     aes(distance, roll_nchisq)   )"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"r-base-plots-for-quick-analysis","dir":"Articles","previous_headings":"","what":"R base plots for quick analysis","title":"2. Handling large datasets","text":"data deviation map can also build using base R’s plotting engine:  quick analysis results can obtained stress_analysis() returns list. transformed coordinates azimuths well deviations can viewed : Statistical parameters describing distribution transformed azimuths can displayed Statistical test results shown … associated plots can displayed setting plot = TRUE:","code":"# Setup the colors for the deviation cols <- tectonicr.colors(   deviation_norm(san_andreas.res$dev),   categorical = FALSE )  # Setup the legend col.legend <- data.frame(col = cols, val = names(cols)) |>   dplyr::mutate(val2 = gsub(\"\\\\(\", \"\", val), val2 = gsub(\"\\\\[\", \"\", val2)) |>   unique() |>   dplyr::arrange(val2)  # Initialize the plot plot(   san_andreas$lon, san_andreas$lat,   cex = 0,   xlab = \"PoR longitude\", ylab = \"PoR latitude\",   asp = 1 )  # Plot the axis and colors axes(   san_andreas$lon, san_andreas$lat, san_andreas$azi,   col = cols, add = TRUE )  # Plot the plate boundary plot(sf::st_geometry(plates), col = \"red\", lwd = 2, add = TRUE)  # Plot the trajectories plot(sf::st_geometry(trajectories), add = TRUE, lty = 2)  # Create the legend graphics::legend(   \"bottomleft\",   title = \"|Deviation| in (\\u00B0)\",   inset = .05, cex = .75,   legend = col.legend$val, fill = col.legend$col ) results <- stress_analysis(san_andreas, por, \"right\", plate_boundary, plot = FALSE) head(results$result) #>      azi.PoR prd        dev     nchisq      cdist  lat.PoR   lon.PoR  distance #> 1 173.240166 135   38.24017 0.18053214 0.38311043 59.05548 -85.46364 -2.446542 #> 2   1.058195 135 -133.94180 2.21486507 0.51846479 60.50445 -78.16683 -2.751949 #> 3 147.609558 135   12.60956 0.01962975 0.04765752 59.38025 -84.55317 -2.705483 #> 4 163.607388 135   28.60739 0.10103489 0.22925429 59.73632 -85.74431 -3.162091 #> 5 152.233017 135   17.23302 0.03666381 0.08776909 61.68018 -84.31053 -4.988116 #> 6 150.611386 135   15.61139 0.03008832 0.07242085 63.39714 -80.60932 -6.358818 results$stats #>                      mean #> mean         138.90248502 #> sd            18.57998667 #> var            0.18967312 #> median       138.94509179 #> quasi_median 136.85808363 #> skewness      -0.33779208 #> kurtosis       2.78636137 #> conf95         2.08549562 #> dispersion     0.09858997 #> norm_chisq     0.05290640 results$test #> $C #> [1] 0.8028201 #>  #> $statistic #> [1] 38.09802 #>  #> $p.value #> [1] 4.600542e-314 stress_analysis(san_andreas, por, \"right\", plate_boundary, plot = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/articles/B_datasets.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"2. Handling large datasets","text":"Bird, Peter. 2003. “Updated Digital Model Plate Boundaries” Geochemistry, Geophysics, Geosystems 4 (3). doi: 10.1029/2001gc000252. DeMets, C., R. G. Gordon, D. F. Argus, S. Stein. 1990. “Current Plate Motions” Geophysical Journal International 101 (2): 425–78. doi: 10.1111/j.1365-246x.1990.tb06579.x. Heidbach, Oliver, Mojtaba Rajabi, Karsten Reiter, Moritz Ziegler, WSM Team. 2016. “World Stress Map Database Release 2016. V. 1.1.” GFZ Data Services. doi: 10.5880/WSM.2016.001.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"equivalent-rotations","dir":"Articles","previous_headings":"","what":"Equivalent rotations","title":"3. Plotting trajectories of theoretic stress directions","text":"Relative plate motions set (global) plate motions can retrieved transforming set Euler rotations parameters equivalent rotations. NUVEL1 data set offers global plate motions relative Pacific plate (DeMets et al. 1990). order extract plate motions two plates (e.g. plates relative Eurasia), one transform rotations new, equivalent reference system (.e. rotation respect (wrt.) Eurasia). tectonicr can done equivalent_rotation(): Alternatively, PB2002 model Bird (2003) also provided ready-use example dataset global plate motions.","code":"data(\"nuvel1\") nuvel1.eu <- equivalent_rotation(nuvel1, fixed = \"eu\") head(nuvel1.eu) #>    plate.rot       lat        lon      angle plate.fix #> af        af  21.22431  -20.25390 0.12839397        eu #> an        an  37.85378   77.54263 0.05402503        eu #> ar        ar  24.77897   14.14654 0.51993229        eu #> au        au  15.28437   40.87794 0.71935116        eu #> ca        ca -50.85213  -50.33611 0.12128773        eu #> co        co  19.84642 -115.85295 1.36455727        eu data(\"pb2002\") pb2002.eu <- equivalent_rotation(pb2002, fixed = \"eu\") head(pb2002.eu) #>    plate.rot       lat       lon      angle plate.fix #> af        af  21.21561 -20.26957 0.12277039        eu #> am        am  22.31703 -73.10293 0.09095410        eu #> an        an  37.88026  77.51306 0.05166503        eu #> ap        ap -34.90145 -75.14215 0.42687654        eu #> ar        ar  28.26668  11.83784 0.53270842        eu #> as        as -27.83397  95.48900 0.27101254        eu"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"plotting-pole-of-rotation-grids","dir":"Articles","previous_headings":"","what":"Plotting Pole of Rotation Grids","title":"3. Plotting trajectories of theoretic stress directions","text":"visualize theoretical trajectories direction σHmax\\sigma_{Hmax} (great circles, small circles, loxodomes), need transform locations geographical coordinate system PoR coordinate system. transformations done function functions geographical_to_PoR() PoR_to_geographical(). base functions eulerpole_smallcircles(), eulerpole_greatcircles(), eulerpole_loxodromes() allow draw theoretical trajectories geographical coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"small-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Small Circles","title":"3. Plotting trajectories of theoretic stress directions","text":"Function eulerpole_smallcircles(x, gridsize) returns small circles simple feature(sf) giving data.frame PoR coordinates lat lon (x) number small circles (n). example small circles around pole relative motion Indian plate relative Eurasian plate (transformed NUVEL1 model). returnclass option eulerpole_smallcircles() provides output types \"sf\" (simple feature) \"sp\" (Spatial* object) small circles. eventually plot small circles ggplot, recommend extract sf feature plot geom_sf():","code":"por <-   subset(nuvel1.eu, nuvel1$plate.rot == \"in\") # India relative to Eurasia por.sm <- eulerpole_smallcircles(por) data(\"plates\") # load plate boundary data set # world <- rnaturalearth::ne_countries(scale = \"small\", returnclass = \"sf\")  ggplot() +   # geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(     data = por.sm,     aes(lty = \"small circles\"),     color = \"darkblue\", fill = NA,     alpha = .5   ) +   geom_point(     data = por,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = euler,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"great-circles","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Great Circles","title":"3. Plotting trajectories of theoretic stress directions","text":"Great circles lines cut small circles 90∘^{\\circ} PoR. Function eulerpole_greatcircles(x, n) returns great circles sf object giving data.frame Pole Rotation (PoR) coordinates lat lon (x) number great circles n, great circle angles (360/d).","code":"por.gm <- eulerpole_greatcircles(por)  ggplot() +   # geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   geom_sf(     data = por.sm,     aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = por.gm,     aes(lty = \"great circles\"),     color = \"darkblue\"   ) +   geom_point(     data = por,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = por,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"loxodromes","dir":"Articles","previous_headings":"Plotting Pole of Rotation Grids","what":"Loxodromes","title":"3. Plotting trajectories of theoretic stress directions","text":"Loxodrome (also called Rhumb Line) curve cutting small circles constant angle. Thus, small great circles 0∘^{\\circ} 90∘^{\\circ} loxodromes, respectively. Function eulerpole_loxodromes(x, n) returns loxodromes sf object giving data.frame PoR coordinates lat lon (x) angle loxodromes, direction, sense.","code":"por.ld <- eulerpole_loxodromes(x = por, angle = 45, n = 10, cw = TRUE)  ggplot() +   labs(title = \"India relative to Eurasia\", subtitle = \"source: NUVEL1\") +   # geom_sf(data = world, alpha = .5) +   geom_sf(     data = plates,     color = \"red\",     alpha = .5   ) +   geom_sf(     data = por.sm,     aes(lty = \"small circles\"),     color = \"darkblue\",     alpha = .5   ) +   geom_sf(     data = por.ld,     aes(lty = \"clockwise loxodromes\"),     color = \"darkblue\"   ) +   geom_point(     data = por,     aes(lon, lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   geom_point(     data = por,     aes(lon + 180, -lat),     shape = 21,     colour = \"lightblue\",     size = 2,     fill = \"darkblue\",     stroke = 1   ) +   coord_sf(default_crs = \"WGS84\", crs = sf::st_crs(\"ESRI:54030\"))"},{"path":"https://tobiste.github.io/tectonicr/articles/C_stress_trajectories.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"3. Plotting trajectories of theoretic stress directions","text":"Bird, Peter. 2003. “Updated Digital Model Plate Boundaries” Geochemistry, Geophysics, Geosystems 4 (3). doi: 10.1029/2001gc000252. DeMets, C., R. G. Gordon, D. F. Argus, S. Stein. 1990. “Current Plate Motions” Geophysical Journal International 101 (2): 425–78. doi: 10.1111/j.1365-246x.1990.tb06579.x.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"mean-direction","dir":"Articles","previous_headings":"","what":"Mean direction","title":"4. Circular statistics","text":"Directional data π\\pi-periodical. Thus, calculation mean, average 35 355∘^{\\circ} 15 instead 195∘^{\\circ}. tectonicr provides circular mean (circular_mean()) quasi-median (circular_median()) metrics describe average direction:","code":"data(\"san_andreas\") circular_mean(san_andreas$azi) #> [1] 10.64134 circular_median(san_andreas$azi) #> [1] 35.5"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"quality-weighted-mean-direction","dir":"Articles","previous_headings":"","what":"Quality weighted mean direction","title":"4. Circular statistics","text":"stress data heteroscedastic, data less precise direction less impact final mean direction weighted mean quasi-median uses reported measurements weighted inverse uncertainties: spread directional data can expressed standard deviation (mean) quasi-interquartile range (median):","code":"circular_mean(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9.98401 circular_median(san_andreas$azi, 1 / san_andreas$unc) #> [1] 35.62501 circular_sd(san_andreas$azi, 1 / san_andreas$unc) # standard deviation #> [1] 19.23893 circular_IQR(san_andreas$azi, 1 / san_andreas$unc) # interquartile range #> [1] 35"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"statistics-in-the-pole-of-rotation-por-reference-frame","dir":"Articles","previous_headings":"","what":"Statistics in the Pole of Rotation (PoR) reference frame","title":"4. Circular statistics","text":"NOTE: σSHmax\\sigma_{SHmax} orientations subjected angular distortions geographical coordinate system, recommended express statistical parameters using transformed orientations PoR reference frame. collected summary statistics can quickly obtained circular_summary(): summary statistics additionally include circular quasi-quantiles, variance, skewness, kurtosis, mode, 95% confidence angle, mean resultant length (R).","code":"data(\"cpm_models\") por <- cpm_models[[\"NNR-MORVEL56\"]] |>   equivalent_rotation(\"na\", \"pa\") san_andreas.por <- PoR_shmax(san_andreas, por, type = \"right\") circular_mean(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 137.996 circular_sd(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 18.671  circular_median(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 135.6499 circular_IQR(san_andreas.por$azi.PoR, 1 / san_andreas$unc) #> [1] 25.93367 circular_summary(san_andreas.por$azi.PoR, 1 / san_andreas$unc, kappa = 10) #>            n         mean           sd          var          25% quasi-median  #> 1126.0000000  137.9960403   18.6710044    0.1913452  123.4943787  135.6498736  #>          75%       median         mode        95%CI     skewness     kurtosis  #>  149.4280453  137.4843360   67.8515625    2.0957355   -0.3386996    2.7427489  #>            R  #>    0.8086548"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"rose-diagram","dir":"Articles","previous_headings":"","what":"Rose diagram","title":"4. Circular statistics","text":"tectonicr provides rose diagram, .e. histogram angular data.  diagram shows uncertainty-weighted frequencies (equal area rose fans), von Mises density distribution (blue curve), circular mean (red line) incl. 95% confidence interval (transparent red). Showing distribution transformed data gives better representation angle distribution angle distortion due arbitrarily chosen geographic coordinate system.  green line shows predicted direction.","code":"rose(san_andreas$azi,   weights = 1 / san_andreas$unc, main = \"North pole\",   dots = TRUE, stack = TRUE, dot_cex = 0.5, dot_pch = 21 )  # add the density curve plot_density(san_andreas$azi, kappa = 10, col = \"#51127CFF\", shrink = 1.5) rose(san_andreas.por$azi,   weights = 1 / san_andreas$unc, main = \"PoR\",   dots = TRUE, stack = TRUE, dot_cex = 0.5, dot_pch = 21 ) plot_density(san_andreas.por$azi, kappa = 10, col = \"#51127CFF\", shrink = 1.5)  # show the predicted direction rose_line(135, radius = 1.1, col = \"#FB8861FF\")"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"qq-plot","dir":"Articles","previous_headings":"","what":"QQ Plot","title":"4. Circular statistics","text":"(linearised) circular QQ-Plot (circular_qqplot()) can used visually assess whether stress sample drawn uniform distribution preferred orientation.  data clearly deviates diagonal line, indicating data randomly distributed strong preferred orientation around 50% quantile.","code":"circular_qqplot(san_andreas.por$azi.PoR)"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"test-for-random-distribution","dir":"Articles","previous_headings":"Statistical tests","what":"Test for random distribution","title":"4. Circular statistics","text":"Uniformly distributed orientation can described von Mises distribution (Mardia Jupp, 1999). directions distributed randomly can tested Rayleigh Test: , test rejects Null Hypothesis (statistic > p.value). Thus σSHmax\\sigma_{SHmax} directions preferred orientation. Alternative statistical tests circular uniformity kuiper_test() watson_test(). Read help() details…","code":"rayleigh_test(san_andreas.por$azi.PoR) #> Reject Null Hypothesis #> $R #> [1] 0.7118209 #>  #> $statistic #> [1] 570.5317 #>  #> $p.value #> [1] 1.664245e-248"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"test-for-goodness-of-fit","dir":"Articles","previous_headings":"","what":"Test for goodness-of-fit","title":"4. Circular statistics","text":"Assuming von Mises Distribution (circular normal distribution) orientation data, (1−α%)/100(1-\\alpha \\%)/100confidence interval can calculated (Mardia Jupp, 1999): prediction σSHmax\\sigma_{SHmax} orientation 135∘135^{\\circ}. Since prediction lies within confidence interval, can concluded 95% confidence orientations follow predicted trend σSHmax\\sigma_{SHmax}. (weighted) circular dispersion orientation angles around prediction another way assessing significance normal distribution around specified direction. can measured : value dispersion ranges 0 2. standard error confidence interval calculated circular dispersion can estimated bootstrapping via: statistical test goodness--fit (weighted) Rayleigh Test specified mean direction (predicted direction 135∘135^{\\circ}: , Null Hypothesis rejected, thus, alternative, uniform distribution around predicted direction, excluded.","code":"confidence_interval(san_andreas.por$azi.PoR, conf.level = 0.95, w = 1 / san_andreas$unc) #> $mu #> [1] 137.996 #>  #> $conf.angle #> [1] 3.835084 #>  #> $conf.interval #> [1] 134.1610 141.8311 circular_dispersion(san_andreas.por$azi.PoR, y = 135, w = 1 / san_andreas$unc) #> [1] 0.09788172 circular_dispersion_boot(san_andreas.por$azi.PoR, y = 135, w = 1 / san_andreas$unc, R = 1000) #> $MLE #> [1] 0.190865 #>  #> $sde #> [1] 0.009522364 #>  #> $CI #> [1] 0.1726830 0.2098846 weighted_rayleigh(san_andreas.por$azi.PoR, mu = 135, w = 1 / san_andreas$unc) #> Reject Null Hypothesis #> $C #> [1] 0.8042366 #>  #> $statistic #> [1] 38.16524 #>  #> $p.value #> [1] 3.589557e-315"},{"path":"https://tobiste.github.io/tectonicr/articles/D_statistics.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"4. Circular statistics","text":"Mardia, K. V., Jupp, P. E. (Eds.). (1999). “Directional Statistics” Hoboken, NJ, USA: John Wiley & Sons, Inc.  doi: 10.1002/9780470316979. Ziegler, Moritz O., Oliver Heidbach. 2017. “Manual Matlab Script Stress2Grid” GFZ German Research Centre Geosciences; World Stress Map Technical Report 17-02. doi: 10.5880/wsm.2017.002.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"geographic-coordinate-system","dir":"Articles","previous_headings":"Interpolation","what":"Geographic coordinate system","title":"5. Spatial interpolation","text":"Spatial interpolation stress data based aforementioned metrics: default settings apply quality inverse distance weighting mean, well 25% cut-standard deviation. tectonicr algorithm modified version MATLAB algorithm ‘stress2grid’ Ziegler Heidbach (2017) faster provides additional features. See help(stress2grid) details settings, different statistics calculating orientation average, adjustments weighting power distance, quality method. data can now visualized:","code":"mean_SH <- stress2grid(san_andreas, gridsize = 1, R_range = seq(50, 350, 100)) trajectories <- eulerpole_loxodromes(x = por, n = 40, cw = FALSE)  ggplot(mean_SH) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_viridis_c(     \"Wavelength\\n(R-normalized mean distance)\",     limits = c(0, 1),     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R)"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"por-coordinate-system","dir":"Articles","previous_headings":"Interpolation","what":"PoR coordinate system","title":"5. Spatial interpolation","text":"interpolated direction far apart data points suffer distortions due underlying projection. order prevent effects, interpolation can done PoR reference frame direction stays constant matter distance data points. Assuming stress field sourced plate boundary force, model-based interpolation allows reliable results areas close plate boundaries.","code":"mean_SH_PoR <- PoR_stress2grid(san_andreas, PoR = por, gridsize = 1, R_range = seq(50, 350, 100)) ggplot(mean_SH_PoR) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_viridis_c(     \"Wavelength\\n(R-normalized mean distance)\",     limits = c(0, 1),     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R)"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"rasterize-the-interpolation","dir":"Articles","previous_headings":"","what":"Rasterize the interpolation","title":"5. Spatial interpolation","text":"function compact_grid() selects data minimum search radius interpolated layers different search radii. Since interpolation performed PoR CRS, interpolated azimuths additionally given transformed azimuths. allows easily calculate misfits predicted directions: Using circular_distance() example , can display spatial patterns misfits stress direction predicted direction plate boundary force. Since interpolation performed PoR CRS, grid composed equally spaced grid cells geographic CRS. rasterize grids, can, e.g., use Voronoi cells ggforce package.  map highlights stress anomalies show misfits direction tested plate boundary force.","code":"mean_SH_PoR_reduced <- mean_SH_PoR |>   compact_grid() |>   dplyr::mutate(cdist = circular_distance(azi.PoR, 135)) ggplot(mean_SH_PoR_reduced) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = cdist),     max.radius = .7, normalize = FALSE   ) +   scale_fill_viridis_c(\"Angular distance\", limits = c(0, 1)) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     aes(lon, lat, angle = deg2rad(90 - azi), alpha = sd),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   scale_alpha(\"Standard deviation\", range = c(1, .25)) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/articles/E_interpolation.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"5. Spatial interpolation","text":"Mardia, K. V., Jupp, P. E. (Eds.). (1999). “Directional Statistics” Hoboken, NJ, USA: John Wiley & Sons, Inc.  doi: 10.1002/9780470316979. Ziegler, Moritz O., Oliver Heidbach. 2017. “Manual Matlab Script Stress2Grid” GFZ German Research Centre Geosciences; World Stress Map Technical Report 17-02. doi: 10.5880/wsm.2017.002.","code":""},{"path":"https://tobiste.github.io/tectonicr/articles/F_spatial.html","id":"spatial-analysis","dir":"Articles","previous_headings":"","what":"Spatial analysis","title":"6. Spatial Analysis","text":"Spatial analysis interpolation stress data using stress2grid_stats() PoR_stress2grid_stats() (analysis PoR coordinate system) uses moving window user defined cell-size (im km) calculates summary statistics within cell: One can also specify range cell-sizes wavelength analysis: mean azimuth grid cell:  filter range search windows keep shortest wavelength (R) least variance grid cell, use compact_grid2(). Interpolated median stress field color-coded skewness within search window:  Interpolated mode stress field color-coded absolute kurtosis within search window:","code":"spatial_stats_R <- PoR_stress2grid_stats(san_andreas, PoR = por, gridsize = 1, R_range = 100) head(spatial_stats_R) #> Simple feature collection with 6 features and 25 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -108.3822 ymin: 36.60408 xmax: -106.3458 ymax: 38.89699 #> Geodetic CRS:  WGS 84 #> # A tibble: 6 × 26 #>   lon.PoR lat.PoR mean.PoR    sd   var `25%.PoR` `quasi-median.PoR` `75%.PoR` #>     <dbl>   <dbl>    <dbl> <dbl> <dbl>     <dbl>              <dbl>     <dbl> #> 1    76.8   -62.2       NA    NA    NA        NA                 NA        NA #> 2    77.8   -62.2       NA    NA    NA        NA                 NA        NA #> 3    79.8   -62.2       NA    NA    NA        NA                 NA        NA #> 4    80.8   -62.2       NA    NA    NA        NA                 NA        NA #> 5    81.8   -62.2       NA    NA    NA        NA                 NA        NA #> 6    82.8   -62.2       NA    NA    NA        NA                 NA        NA #> # ℹ 18 more variables: median.PoR <dbl>, mode.PoR <dbl>, `95%CI` <dbl>, #> #   skewness <dbl>, kurtosis <dbl>, meanR <dbl>, R <dbl>, N <int>, mdr <dbl>, #> #   geometry <POINT [°]>, lat <dbl>, lon <dbl>, mean <dbl>, `25%` <dbl>, #> #   `quasi-median` <dbl>, `75%` <dbl>, median <dbl>, mode <dbl> spatial_stats <- PoR_stress2grid_stats(san_andreas, PoR = por, gridsize = 1, R_range = seq(50, 350, 100), kappa = 10) trajectories <- eulerpole_loxodromes(x = por, n = 40, cw = FALSE)  ggplot(spatial_stats) +   geom_sf(data = plate_boundary, color = \"red\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - mean), alpha = sd, color = mdr), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"Standard deviation\", range = c(1, .25)) +   scale_color_viridis_c(     \"Wavelength\\n(R-normalized mean distance)\",     limits = c(0, 1),     breaks = seq(0, 1, .25)   ) +   facet_wrap(~R) spatial_stats_comp <- spatial_stats |>   compact_grid2(var) ggplot(spatial_stats_comp) +   geom_sf(data = plate_boundary, color = \"red\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - median), alpha = `95%CI`, color = skewness), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"95% CI\", range = c(1, .25)) +   scale_color_viridis_c(     \"Skewness\"   ) ggplot(spatial_stats_comp) +   geom_sf(data = plate_boundary, color = \"red\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(data = san_andreas, aes(lon, lat, angle = deg2rad(90 - azi)), radius = .5, color = \"grey30\", position = \"center_spoke\") +   geom_spoke(aes(lon, lat, angle = deg2rad(90 - mode), alpha = `95%CI`, color = abs(kurtosis)), radius = 1, position = \"center_spoke\", lwd = 1) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat)) +   scale_alpha(name = \"95% CI\", range = c(1, .25)) +   scale_color_viridis_c(     \"|Kurtosis|\"   )"},{"path":"https://tobiste.github.io/tectonicr/articles/F_spatial.html","id":"heat-maps-for-the-spatial-statistics","dir":"Articles","previous_headings":"","what":"Heat maps for the spatial statistics","title":"6. Spatial Analysis","text":"PoR_stress2grid_stats() stress2grid_stats() allow create heatmaps showing spatial patterns desired statistical estimate (circular_summary()). examples:","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/articles/F_spatial.html","id":"spatial-variance","dir":"Articles","previous_headings":"Heat maps for the spatial statistics > Spatial central moments","what":"Spatial variance","title":"6. Spatial Analysis","text":"","code":"ggplot(spatial_stats_comp) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = var),     max.radius = .7, normalize = FALSE   ) +   scale_fill_viridis_c(limits = c(0, 1)) +   geom_sf(data = plate_boundary, color = \"red\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     aes(lon, lat, angle = deg2rad(90 - mean)),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/articles/F_spatial.html","id":"skewness","dir":"Articles","previous_headings":"Heat maps for the spatial statistics > Spatial central moments","what":"Skewness:","title":"6. Spatial Analysis","text":"Skewness measure asymmetry probability distribution. can either counterclockwise clockwise skewed, hence values can range negative positive numbers, respectively. can best visualized diverging color-sequence:","code":"ggplot(spatial_stats_comp) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = skewness),     max.radius = .7, normalize = FALSE   ) +   scale_fill_gradient2(\"|Skewness|\", low = \"#001260\", mid = \"#EBE5E0\", high = \"#590007\") +   geom_sf(data = plate_boundary, color = \"red\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     aes(lon, lat, angle = deg2rad(90 - median), alpha = var),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   scale_alpha(\"variance\", range = c(1, 0)) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/articles/F_spatial.html","id":"kurtosis","dir":"Articles","previous_headings":"Heat maps for the spatial statistics > Spatial central moments","what":"Kurtosis","title":"6. Spatial Analysis","text":"Kurtosis measure “tailedness” probability distribution. , colors square-root scale:","code":"ggplot(spatial_stats_comp) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = abs(kurtosis)),     max.radius = .7, normalize = FALSE   ) +   scale_fill_viridis_c(\"|Kurtosis|\", transform = \"sqrt\") +   geom_sf(data = plate_boundary, color = \"red\") +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     aes(lon, lat, angle = deg2rad(90 - mode), alpha = var),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   scale_alpha(\"variance\", range = c(1, 0)) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/articles/F_spatial.html","id":"kernel-dispersion","dir":"Articles","previous_headings":"Heat maps for the spatial statistics","what":"Kernel dispersion","title":"6. Spatial Analysis","text":"Another way analyse spatial misfits kernel dispersion, .e. local dispersion within user-defined window (kernel). kernel´s half width can single number (km) range widths. latter requires compact grid result (x) find smallest kernel size containing least dispersion (compact_grid(x, 'dispersion')). recommended calculate kernel dispersion PoR transformed data avoid angle distortions due projections.","code":"san_andreas_por <- san_andreas san_andreas_por$azi <- PoR_shmax(san_andreas, por, \"right\")$azi.PoR # transform to PoR azimuth san_andreas_por$prd <- 135 # test direction san_andreas_kdisp <- kernel_dispersion(san_andreas_por, gridsize = 1, R_range = seq(50, 350, 100)) san_andreas_kdisp <- compact_grid(san_andreas_kdisp, \"dispersion\")  ggplot(san_andreas_kdisp) +   ggforce::geom_voronoi_tile(     aes(lon, lat, fill = stat),     max.radius = .7, normalize = FALSE   ) +   scale_fill_viridis_c(\"Dispersion\", limits = c(0, 1)) +   geom_sf(data = trajectories, lty = 2) +   geom_spoke(     data = san_andreas,     aes(lon, lat, angle = deg2rad(90 - azi), alpha = unc),     radius = .5, position = \"center_spoke\", lwd = .2, colour = \"white\"   ) +   scale_alpha(\"Standard deviation\", range = c(1, .25)) +   coord_sf(xlim = range(san_andreas$lon), ylim = range(san_andreas$lat))"},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Tobias Stephan. Author, maintainer.","code":""},{"path":"https://tobiste.github.io/tectonicr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Stephan et al. (2023). Analyzing horizontal orientation crustal stress adjacent plate boundaries. Sci Rep, 13(1), 15590. https://doi.org/10.1038/s41598-023-42433-2","code":"@Article{,   title = {Analyzing the horizontal orientation of the crustal stress adjacent to plate boundaries},   author = {Tobias Stephan and Eva Enkelmann and Uwe Kroner},   journal = {Scientific Reports},   year = {2023},   volume = {13},   number = {1},   pages = {15590},   doi = {10.1038/s41598-023-42433-2}, }"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"tectonicr-","dir":"","previous_headings":"","what":"Analyzing the Orientation of Maximum Horizontal Stress","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"tectonicr free open-source R package modeling analyzing direction maximum horizontal stress (SHmax) based empirical link direction intraplate stress direction relative motion neighboring plates (Wdowinski, 1998; Stephan et al., 2023). following methods available: Direction plate boundary forces: PoR_shmax() gives predicted stress field adjacent plate boundary, calculated using relative plate motion neighboring plates using function model_shmax(). goodness--fit can statistically tested e.g. norm_chisq(), circular_dispersion() ,rayleigh_test(), confidence_interval(). Distance plate boundary: distance_from_pb() gives distance stress data point plate boundary measured along stress trajectories. Trajectories theoretical stress field eulerpole_paths() generates sf object containing spatial information suitable plot , instance, ggplot(). Relative rotations given set plate motion parameters: equivalent_rotation() transfers set plate motion parameters relative plate motions among given plates. Average direction variance set SHmax data using (weighted) statistics parameters statistically estimate distribution parameters pi-directional data. Spatial interpolation SHmax: PoR_stress2grid() uses distance, method, quality-weighted mean direction stress data without affected angular distortions. Rose plot rose() shows frequencies orientations polar coordinates Stress anomaly map: spatial distribution dispersion observed stress field directions plate boundary forces Download filter world stress map data using download_WSM2016()","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"prerequisites","dir":"","previous_headings":"","what":"Prerequisites","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"must R installed system (see https://www.r-project.org/). install tectonicr CRAN, type following code R command line prompt:","code":"install.packages(\"tectonicr\")"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"recent development version tectonicr available Github can installed system follows: Using stress measurements San Andreas Fault - Gulf California example, quick analysis test right-lateral transform plate boundary can achieved : code produces underlying results Fig. 7 Stephan et al. (2023)","code":"# install.packages(\"remotes\") # install if needed remotes::install_github('tobiste/tectonicr') library('tectonicr') # load example data data(san_andreas) data(nuvel1) data(plates)  stress_analysis( san_andreas, PoR = equivalent_rotation(nuvel1, \"na\", \"pa\"), type = \"right\", pb = subset(plates, pair == \"na-pa\") )"},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"detailed documentation can found https://tobiste.github.io/tectonicr/articles/A_tectonicr.html","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"gui","dir":"","previous_headings":"","what":"GUI","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"graphical user interface provides (limited) tectonicr functionalities. need install, just click link can run tectonicr browser: https://tobiste.shinyapps.io/tectonicr-app/","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"author","dir":"","previous_headings":"","what":"Author","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"Tobias Stephan (tstephan@lakeheadu.ca)","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"feedback-issues-and-contributions","dir":"","previous_headings":"","what":"Feedback, issues, and contributions","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"welcome feedback, suggestions, issues, contributions! found bug, please file minimal code reproduce issue.","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"how-to-cite-tectonicr","dir":"","previous_headings":"","what":"How to cite tectonicr","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"referencing package, please cite Stephan, T., Enkelmann, E., Kroner, U. (2023). Analyzing horizontal orientation crustal stress adjacent plate boundaries. Scientific Reports, 13(1). DOI: 10.1038/s41598-023-42433-2. package DOI: 10.32614/CRAN.package.tectonicr.","code":""},{"path":"https://tobiste.github.io/tectonicr/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Analyzing the Orientation of Maximum Horizontal Stress","text":"GPL-3.0 License","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"Conversion PoR azimuths geographical azimuths","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"","code":"PoR2Geo_azimuth(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"x data.frame containing PoR equivalent azimuths (azi.PoR), either geographical coordinates point(s) PoR-equivalent coordinates. PoR data.frame containing geographical location Euler pole (lat, lon)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"numeric vector transformed azimuths (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR2Geo_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth conversion from PoR to geographical coordinate reference system — PoR2Geo_azimuth","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") data(\"san_andreas\") san_andreas$azi.PoR <- PoR_shmax(san_andreas, PoR)  # convert back to geo CRS PoR2Geo_azimuth(san_andreas, PoR) #>    [1]  50  54  24  41  30  27  29  58  32  47  34  17  16   0 168   1   1   9 #>   [19]   1   0  57   4  35  10   0  15  18  65   6  18  10  56  27  44  54  51 #>   [37] 148  71 157 145 126 145  84 119 116 167  40 153 126 133  20 128 134 152 #>   [55] 136 124 112 125   9 123 105  71  17 139 145 128 146   8 175  50  13  18 #>   [73]  21  18  75  15 175  50 178  15  50  64 150  74  47  44  62  43  82  59 #>   [91]  49  38  39  28  54  58  49  53  43  42  47  46  30  50  38  35  48  31 #>  [109]  53  44  55  69  64  35  51  44  49  59  57  24  40  39  44  22  19  62 #>  [127]  44  21  63  56  26  38  29  58  12  48  27  42 170  22  44  58  53  20 #>  [145]  52  44  40   4  16  27  20  26 173 178  69  16  44  18  61  49  38  62 #>  [163]  24  16  29  29  56  44   9  25  67  90 178  48  16   9  35 160  13 155 #>  [181]  28  40  72  57  19  21  25 178  22  13  20 145  14 155  10 162 149 130 #>  [199] 105 105 166  43  34  46  35 129 152 103 165  37  18  21   8  47  34   2 #>  [217] 175 167 168 156 157   8 173 174  24  40  17   8 177 178   8  37  18  51 #>  [235]  60  73 160  37  55  15  11  20 177  44 128  38  31   1  85  16 176  48 #>  [253] 175 172 157 175 170 171 172 168 172  33  21 177  18 171 175 161 173  21 #>  [271]  28  18  33  17  30  40  30  28  35  25  19  42  12  35  25 149 115 170 #>  [289]  15 110 179  22  23  35  41  35 178 171 173 168 178 165  42  20  12 155 #>  [307] 178   9   5   3  30  16  19  25  41  47  44  47  12  45  24  36   8   8 #>  [325] 134   0  36  35 125 120 125  32  27 105 163   0  28   2  21  28  10  14 #>  [343] 150   2 139   2   5  26 155 150   1   2 136 157   0 179 144 166 134 155 #>  [361] 136 168 147 171 163 142 160 158 174  64 175  19 169 171 162 105  14   6 #>  [379]  15  10 105 173  26  56  18  19 164 158 177  17   0 118  59 135  65  36 #>  [397]  36  53  41 161   3 168  12  23 174   7  14  21   8  53  54  36  21  16 #>  [415]  40  13  14  22  43  18  16  12 172 171 178 144 179  16   8 171 170   4 #>  [433] 176  20  27   5  37   5   9   9  20  20  12  19  20  13  13   7 172  22 #>  [451]  17  20  20  19 169 169 169 153 168  26  37 164 166 174 175 169 172 174 #>  [469]  40  31   4  31 174 178 177  45  39   6   1   1   6 177  27  32  37  42 #>  [487] 177  47  33 173   3  25  21  27 175   9 167  23  23 178   4  29 171  48 #>  [505]  41   5  22  11  17  23 175   1  11   8   5  37  19   1  15 174  52  35 #>  [523]  39  20  47  55   8 160 178  36  31  42  47  47  44 158 172  18   1   4 #>  [541] 179  34  10   2 167 172   2  12   8   4 155   0 175 171 175  18  10   2 #>  [559] 150  13 176 175   1   5   6   6  20  12  10 176 174   4   1 169   9  37 #>  [577]  30  24 176  16   3   7   2   4 177 163 177 164 178 178  11  26  33   5 #>  [595]  20   1   2 172 173 173 178 160 177   1   2  11   0  25  22  29  16   2 #>  [613] 176   5 173   6  28  18 168 176   0  17 169 178 174   5  13 169   1  22 #>  [631]  16 167 163  14  16  21  31  37 167  30  36  29   3   8   4   9   4  24 #>  [649]  14   0   0   8   3 179   9  10   9 178 179 176  12  13   0   6  15  18 #>  [667]   8  15  11  19   8   6   0 159   5  11   0   7   6  21  24  15   7   7 #>  [685]  13   1   4 170   2  17  20  17   8   9  12  21   8 175   9  13  23  27 #>  [703]  13 176  21  29  51  26  26  29   2   8  14   7  13 177  11   0 177   8 #>  [721]  20   2 174  48  18   7  12   5 174 156 171  12  25  46  10  15 171   1 #>  [739]  11   4   9   8  48  26   9 177  16 177   6   3 179  17  29  23 165 173 #>  [757]   3 177  14  35  10   6 162 165 172  21  24  15  24  28 172 158 170 156 #>  [775] 161  19  20  24  11  19  21  13  20  23  14  12   3   9  13  11  27 141 #>  [793] 171   9 158 177   8 166 162   5  15  57  32   2  36  26  35  24  14  25 #>  [811]  17 174  13   9   6   6   7   6  14  15 164   7 170 173 179  17  29  28 #>  [829] 179  90  13  16   9  18  30 141  37  13  48 139 140 150 149 149 160 161 #>  [847] 161 174 171 172 175 172 169 169 173 174 175 175 174 169 175 177   1   1 #>  [865]   4   7  11   8   8  11  15  16  31 174   9 123  28 102 133  12 176   9 #>  [883]  32  41  21  18  28  44  43  51   0  15  55  21  17  99  26 175  25  10 #>  [901]  25  45  52 141  29  28  23   9 178 168  11 174  18  27 172  44  22   4 #>  [919] 162 169  41 178 167 176 168 175 158 178   1 152 172 167 176 165 168 174 #>  [937] 164 175   6   1  14 178 178 173 153  14  13 178  37 172 172 176  28 175 #>  [955] 172  24   0  14   1 177 176  20 179 170  14 178   6 168   5 171 172  13 #>  [973] 178 172   3  26 171 173 174 171 156 176 174  11   4 176 160 171 174 179 #>  [991] 177   5 175   5 168 165 171  21 163 176  27 177 174 172  12   7 176 171 #> [1009] 175 167 171 171 174 159 179 175   7 163 178 178 169 159 175  12   7   2 #> [1027] 166 178 167 174 168 173   6  17 156  33  25 174 176 168  44  30  14 175 #> [1045] 178 162  15  61  47  30  40  24   3  16  38   2 172 167  23  26  15   7 #> [1063]   8  19 174  30   5   3 125 127 146  58  55  27 172  27 175   7 176  13 #> [1081]  41  25  48  38  33  21  35  38  18  23  22  19  25  24  17  42  30 175 #> [1099]  38  24  28  97  30  13  18 177  12  17  45  14   8  94  85  31  13  26 #> [1117] 179  22 179 178  10   7   9   5  24  21"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinates of the Pole of Rotation Reference System — PoR_coordinates","title":"Coordinates of the Pole of Rotation Reference System — PoR_coordinates","text":"Retrieve PoR equivalent coordinates object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinates of the Pole of Rotation Reference System — PoR_coordinates","text":"","code":"PoR_coordinates(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinates of the Pole of Rotation Reference System — PoR_coordinates","text":"x sf data.frame containing lat lon coordinates (lat, lon) PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinates of the Pole of Rotation Reference System — PoR_coordinates","text":"PoR_coordinates() returns data.frame PoR coordinates (lat.PoR, lon.PoR).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinates of the Pole of Rotation Reference System — PoR_coordinates","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\")  # coordinates from sf object san_andreas.por_sf <- PoR_coordinates(san_andreas, por) head(san_andreas.por_sf) #>    lat.PoR   lon.PoR #> 1 59.05548 -85.46364 #> 2 60.50445 -78.16683 #> 3 59.38025 -84.55317 #> 4 59.73632 -85.74431 #> 5 61.68018 -84.31053 #> 6 63.39714 -80.60932  # coordinates from data.frame san_andreas.por_df <- PoR_coordinates(sf::st_drop_geometry(san_andreas), por) head(san_andreas.por_df) #>    lat.PoR   lon.PoR #> 1 59.05548 -85.46364 #> 2 60.50445 -78.16683 #> 3 59.38025 -84.55317 #> 4 59.73632 -85.74431 #> 5 61.68018 -84.31053 #> 6 63.39714 -80.60932"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":null,"dir":"Reference","previous_headings":"","what":"PoR coordinate reference system — PoR_crs","title":"PoR coordinate reference system — PoR_crs","text":"Create reference system transformed Euler pole coordinate","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"PoR coordinate reference system — PoR_crs","text":"","code":"PoR_crs(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"PoR coordinate reference system — PoR_crs","text":"x \"data.frame\" \"euler.pole\" object containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"PoR coordinate reference system — PoR_crs","text":"Object class crs","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"PoR coordinate reference system — PoR_crs","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_crs.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"PoR coordinate reference system — PoR_crs","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate PoR_crs(por) #> Coordinate Reference System: #>   User input: +proj=ob_tran +o_proj=longlat +datum=WGS84 +o_lat_p=48.709 +o_lon_p=-78.167  #>   wkt: #> GEOGCRS[\"unnamed\", #>     BASEGEOGCRS[\"unknown\", #>         DATUM[\"World Geodetic System 1984\", #>             ELLIPSOID[\"WGS 84\",6378137,298.257223563, #>                 LENGTHUNIT[\"metre\",1]], #>             ID[\"EPSG\",6326]], #>         PRIMEM[\"Greenwich\",0, #>             ANGLEUNIT[\"degree\",0.0174532925199433], #>             ID[\"EPSG\",8901]]], #>     DERIVINGCONVERSION[\"unknown\", #>         METHOD[\"PROJ ob_tran o_proj=longlat\"], #>         PARAMETER[\"o_lat_p\",48.709, #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         PARAMETER[\"o_lon_p\",-78.167, #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]], #>     CS[ellipsoidal,2], #>         AXIS[\"longitude\",east, #>             ORDER[1], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]], #>         AXIS[\"latitude\",north, #>             ORDER[2], #>             ANGLEUNIT[\"degree\",0.0174532925199433, #>                 ID[\"EPSG\",9122]]]]"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance to Pole of Rotation — PoR_distance","title":"Distance to Pole of Rotation — PoR_distance","text":"Retrieve (angular) distance PoR (Euler pole).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance to Pole of Rotation — PoR_distance","text":"","code":"PoR_distance(x, PoR, FUN = orthodrome)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance to Pole of Rotation — PoR_distance","text":"x sf data.frame containing lat lon coordinates (lat, lon) PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole FUN function calculate great-circle distance. orthodrome(), haversine() (default), vincenty().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_distance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance to Pole of Rotation — PoR_distance","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_distance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance to Pole of Rotation — PoR_distance","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\")  # distance form sf object PoR_distance(san_andreas, por) #>    [1] 30.94452 29.49555 30.61975 30.26368 28.31982 26.60286 26.17956 28.86161 #>    [9] 27.61765 28.71087 28.73033 31.16732 30.44254 33.22249 31.36599 31.24675 #>   [17] 32.83970 32.87474 32.74926 32.58776 32.26360 32.23688 32.71712 32.99185 #>   [25] 32.97834 33.12037 32.60749 33.00127 32.60797 32.63911 32.96494 33.03701 #>   [33] 29.76913 32.92573 32.91647 31.83522 31.83522 31.99900 32.64241 32.69516 #>   [41] 32.83925 32.57164 29.29759 32.63121 32.75921 33.05392 33.05392 32.79940 #>   [49] 32.88114 32.75619 32.53490 32.53947 32.56058 33.45402 33.60982 33.51016 #>   [57] 33.08997 33.00059 33.00059 33.01846 33.41943 32.89777 32.83269 32.83751 #>   [65] 32.98142 32.98142 33.24921 32.88850 32.95925 32.94253 32.95707 32.99522 #>   [73] 32.87882 32.65408 32.86571 32.96624 33.04911 32.97389 32.88151 32.95878 #>   [81] 32.61595 32.88480 31.99900 32.33724 32.64241 32.86782 32.69516 32.82703 #>   [89] 32.24622 33.64712 32.69988 32.83925 32.80607 33.15445 32.57164 32.86551 #>   [97] 32.77326 32.63121 33.09013 33.52347 32.75921 32.85044 33.07666 32.79940 #>  [105] 32.80972 32.87783 33.63300 32.75619 32.56058 32.81883 33.45402 33.30515 #>  [113] 32.60888 32.75426 32.62619 33.59074 33.60982 33.45754 33.51016 33.36364 #>  [121] 32.78243 32.79364 33.64330 32.38665 33.89380 32.77869 32.80785 33.05148 #>  [129] 32.99024 32.98245 32.88788 33.09699 33.04999 33.08997 33.05979 32.97017 #>  [137] 32.79963 33.00993 32.56784 33.01963 32.89223 33.01323 33.82620 32.88067 #>  [145] 33.35601 33.78452 33.01846 32.86385 33.41943 32.77573 32.76028 32.78063 #>  [153] 32.88742 32.84704 32.95103 33.06985 33.26843 33.07775 33.31261 33.06128 #>  [161] 32.91174 33.30416 33.28668 33.04635 33.30214 33.71603 33.83491 33.78703 #>  [169] 33.78213 33.09830 33.24921 32.26618 32.59839 32.85145 33.05903 31.87006 #>  [177] 32.99594 32.46793 33.24109 33.05964 33.05964 33.80432 34.16790 34.15202 #>  [185] 33.06595 33.95704 33.78600 33.50950 33.45994 33.42927 32.94881 36.10759 #>  [193] 32.23827 35.20779 29.31869 33.13978 32.28155 35.40403 24.74709 32.36755 #>  [201] 32.17344 29.47102 29.82473 29.82167 29.39801 24.64349 25.53339 24.13014 #>  [209] 31.22193 33.19500 33.09248 33.04783 33.04726 33.46842 31.63305 32.26150 #>  [217] 32.16794 32.20393 32.17703 32.19502 32.18780 32.16538 32.19294 32.20770 #>  [225] 32.36092 32.27058 32.25379 32.22711 32.23436 32.19670 32.90705 32.94074 #>  [233] 33.06617 32.91556 32.77969 32.36528 32.45088 33.00136 33.83257 33.26037 #>  [241] 33.27151 33.24373 32.14479 28.41782 28.94393 28.97000 29.96693 30.67976 #>  [249] 30.13344 33.94040 33.84528 33.70204 32.96045 34.60398 34.67739 33.47523 #>  [257] 33.41990 33.03269 33.07271 33.17151 33.34410 32.28934 32.16044 33.77625 #>  [265] 33.64893 34.00051 33.72566 33.11592 32.17887 30.65825 29.88754 33.89977 #>  [273] 25.42375 33.03622 29.01926 30.51245 29.72501 26.37754 27.04835 25.99569 #>  [281] 26.25231 26.89108 26.38057 26.81745 27.90069 24.64444 23.75781 25.61548 #>  [289] 26.76568 23.19364 32.71340 33.07270 32.91091 32.71712 32.30813 32.10670 #>  [297] 32.52605 32.29992 32.05245 32.24721 32.54065 33.06274 32.90543 32.99175 #>  [305] 31.82376 31.27144 33.40805 31.36291 31.18314 31.44232 30.94495 31.55689 #>  [313] 31.47479 31.60199 31.51294 31.34914 31.65691 31.50290 31.30649 30.77289 #>  [321] 31.53089 32.83613 31.92032 27.37372 28.12898 28.23189 29.47235 27.64606 #>  [329] 26.93828 27.83477 28.28427 29.39473 28.11490 27.46436 29.47838 31.19224 #>  [337] 29.08586 33.48522 33.32362 33.16217 33.35959 33.19784 34.06376 34.06376 #>  [345] 35.19638 35.20779 32.08745 35.23132 33.45645 33.83818 33.83818 33.88655 #>  [353] 35.60624 34.15163 34.15163 34.16738 33.80753 34.29620 33.71048 33.63973 #>  [361] 33.87979 32.86919 35.32193 33.01881 32.91391 33.53736 34.52573 27.88479 #>  [369] 25.60648 27.33375 32.13655 32.25379 32.26211 32.02391 30.06425 30.56761 #>  [377] 25.47356 25.12778 33.05903 33.26425 27.65746 30.01153 26.33508 38.65372 #>  [385] 31.55465 31.74196 34.66626 34.73921 33.61636 33.44870 33.47616 31.24480 #>  [393] 31.29281 31.24415 33.93741 34.22876 34.35642 34.07699 33.59495 33.60725 #>  [401] 33.42100 31.58818 31.50139 34.36646 34.52570 33.34868 33.28290 33.20259 #>  [409] 33.21033 33.08472 33.07236 33.06781 33.16250 33.16445 33.15922 33.19879 #>  [417] 31.37200 31.27289 30.11973 31.45634 34.16957 33.82966 34.47777 34.28767 #>  [425] 33.75775 32.11996 32.08644 32.30653 32.21628 34.82746 34.94909 33.72155 #>  [433] 33.59836 31.83790 33.55781 32.13012 31.12223 31.97288 31.77961 31.98028 #>  [441] 31.91637 31.94900 31.82246 31.85493 31.88809 31.92064 31.79230 31.98798 #>  [449] 32.05329 31.85938 31.89249 31.92499 31.80157 31.86621 31.99662 32.06324 #>  [457] 32.06761 32.10080 32.10519 31.56031 31.68785 31.98015 32.01183 32.07951 #>  [465] 32.33923 32.04883 32.05355 32.08649 31.57800 31.64073 32.15350 31.77124 #>  [473] 32.09123 32.35213 32.48198 31.71305 31.74543 31.77722 32.09605 32.16293 #>  [481] 32.29165 31.65657 31.68819 31.71984 31.75154 31.78264 32.13376 31.69447 #>  [489] 31.78877 32.13868 32.17020 31.60348 31.66579 31.85498 32.10970 32.23770 #>  [497] 32.36568 31.73174 31.82664 32.17642 32.20794 31.36165 32.50004 31.58233 #>  [505] 31.61367 31.64440 31.67581 31.73813 31.77030 31.80124 32.11735 32.15001 #>  [513] 32.18143 32.21353 32.24568 31.49234 31.86731 32.31187 32.37637 32.44104 #>  [521] 31.55846 31.58906 31.65165 31.68237 31.71378 31.74522 31.77671 32.15515 #>  [529] 32.18716 31.25436 31.47266 31.53480 31.56531 31.59648 31.62771 31.87709 #>  [537] 31.90868 32.19295 32.22431 31.81757 32.00584 31.51137 31.54178 31.57285 #>  [545] 31.91502 31.94597 32.26212 32.39232 32.52055 31.54945 31.58050 31.88994 #>  [553] 31.92206 31.95296 31.98390 32.23667 31.76934 32.14446 31.58756 31.83499 #>  [561] 31.89775 31.95939 32.02248 32.05344 32.21078 32.24199 32.27388 31.84171 #>  [569] 31.87301 31.90436 32.02824 32.06042 32.09138 32.21687 32.24866 32.31109 #>  [577] 32.34365 31.47718 32.15749 32.40955 32.47296 32.53653 31.88039 31.91167 #>  [585] 31.94237 31.97311 32.00452 32.06685 32.09838 32.12932 32.25477 32.34896 #>  [593] 32.38087 31.79181 31.52004 31.88782 31.91843 31.94970 31.98039 32.01112 #>  [601] 32.04316 32.10482 32.13571 32.23336 32.29546 32.48461 32.54797 31.49820 #>  [609] 31.52882 31.55887 31.58896 31.92588 31.95647 32.08054 32.14281 32.17369 #>  [617] 31.53706 31.56766 32.11855 32.14997 32.18080 32.21167 31.99892 32.30927 #>  [625] 32.06386 32.21944 32.28183 31.94485 32.56695 32.22665 32.25745 32.07508 #>  [633] 32.13690 32.32274 32.26467 32.29547 32.30271 32.33350 32.27934 32.31004 #>  [641] 32.34140 31.49660 32.46830 32.31742 32.29052 32.35550 32.38680 31.87388 #>  [649] 32.11554 32.33302 32.36361 32.39423 32.42553 31.40872 31.46719 31.52649 #>  [657] 32.49431 32.52503 31.65448 32.62107 31.30837 31.48222 31.51207 31.54136 #>  [665] 32.53240 32.56375 31.37171 31.42984 31.60521 31.78217 32.38323 32.44489 #>  [673] 32.50545 31.31921 31.34814 31.49275 31.38792 31.41623 31.44583 31.47489 #>  [681] 31.50334 31.53308 31.56227 31.59085 31.62072 32.54795 32.57920 32.70510 #>  [689] 32.76673 31.45660 31.48560 31.51400 31.57217 31.63117 31.34664 31.81181 #>  [697] 31.92939 32.40848 32.53007 31.43859 31.46743 31.49638 31.58874 32.84415 #>  [705] 31.50722 31.56509 31.25594 31.55245 31.61025 31.66764 31.76023 31.78942 #>  [713] 31.50713 32.08665 32.56388 32.68470 31.82912 31.85770 32.84055 32.81374 #>  [721] 31.89746 32.87933 31.08208 31.77000 31.82733 32.00026 32.05889 32.95252 #>  [729] 31.66705 32.24465 32.36201 32.71939 32.83942 31.84418 31.87250 31.90147 #>  [737] 31.92988 31.95899 32.04523 32.07512 32.10379 32.13252 31.79253 33.02950 #>  [745] 31.99873 32.02723 32.05701 32.11422 32.14349 32.06761 32.21196 32.89137 #>  [753] 32.92170 32.95145 32.15981 32.27587 32.86633 32.33927 32.93025 32.99096 #>  [761] 32.05584 32.51933 32.75577 32.37896 32.40782 32.93951 32.96978 32.99947 #>  [769] 33.02920 33.05959 32.23932 32.35467 32.47135 32.41805 32.44750 32.94880 #>  [777] 32.97840 33.00805 33.03835 33.06872 33.09849 33.01796 33.04759 33.07727 #>  [785] 33.10760 32.96290 33.05687 33.08649 33.11616 32.67736 32.79510 32.91289 #>  [793] 32.58207 32.82544 32.94200 33.18780 32.90417 32.96296 31.73489 33.13169 #>  [801] 33.36538 32.93713 33.81588 32.33164 33.43756 33.08206 33.11605 33.23723 #>  [809] 33.27085 33.39187 33.42701 33.66750 31.89061 32.17485 33.28346 33.27549 #>  [817] 33.32240 30.91838 30.91181 33.78949 33.19433 34.84361 34.52612 35.70139 #>  [825] 35.77840 34.42469 34.51923 33.82238 33.09818 35.28440 34.36014 34.85177 #>  [833] 33.30639 31.73122 33.23164 32.96390 32.01641 33.29071 33.29461 34.55944 #>  [841] 34.52286 34.42623 34.52842 34.34577 34.39315 34.46048 34.47395 33.79223 #>  [849] 33.76914 34.56614 33.75487 33.76314 34.36847 33.12204 33.67612 34.11624 #>  [857] 33.55431 33.59625 33.22717 34.48194 33.76914 33.79444 33.72675 35.25557 #>  [865] 35.23017 33.76341 32.45688 33.74200 33.17661 33.73804 32.96261 32.81718 #>  [873] 32.10327 33.40887 34.74090 25.87415 25.67977 24.88221 26.19604 25.69470 #>  [881] 32.06492 31.73529 31.83149 31.84648 31.82708 32.42933 33.16910 33.82645 #>  [889] 33.69395 33.48682 33.33591 31.75860 32.91077 32.97189 32.96489 32.55159 #>  [897] 32.61919 31.07621 32.97852 33.33027 31.57510 29.93633 29.44877 25.48766 #>  [905] 34.03646 33.90178 32.99064 33.42476 33.75774 33.78504 33.90127 33.20744 #>  [913] 33.18692 34.13626 33.20076 33.81511 34.66748 33.18753 33.21420 34.87579 #>  [921] 33.39699 33.61604 33.17872 33.62327 33.17848 33.63782 33.81923 33.84929 #>  [929] 33.83442 33.85214 33.88481 33.86269 34.60814 33.65441 33.86926 33.22280 #>  [937] 34.62041 33.18935 33.54185 32.10871 32.12195 32.10842 32.10210 33.15796 #>  [945] 33.83937 32.18128 30.92685 34.27009 32.97530 32.70859 33.64264 33.59462 #>  [953] 31.30776 34.61214 35.18812 31.80680 33.86610 34.03097 34.10407 33.29019 #>  [961] 32.98067 33.11300 33.11091 32.13009 31.29322 31.29322 31.29322 34.66588 #>  [969] 34.69075 33.65823 33.18590 32.02710 32.18319 32.26827 32.28754 32.22697 #>  [977] 32.23605 32.20768 32.28098 32.28098 32.28841 33.85826 32.33121 34.61183 #>  [985] 32.22817 32.25184 33.22308 31.96120 34.22392 34.21191 34.28970 33.95318 #>  [993] 34.12539 34.21600 34.18965 34.22700 35.03747 33.96022 32.23778 33.95165 #> [1001] 26.63094 33.59913 32.23594 33.78489 33.87395 33.94904 33.75684 33.81833 #> [1009] 30.73573 33.14110 33.29907 33.33079 33.25760 34.11576 33.96757 33.35933 #> [1017] 31.23657 34.62891 32.54837 33.36459 34.51558 32.26199 34.00646 31.88048 #> [1025] 32.29432 32.63639 34.59612 34.77732 34.61186 34.52301 34.53376 34.08124 #> [1033] 35.96837 33.24886 34.82892 35.71418 34.53677 33.81639 33.72633 33.61349 #> [1041] 30.49775 33.83053 33.02213 34.41432 33.33138 33.31136 33.20653 35.71487 #> [1049] 31.74381 32.70833 32.73829 32.67623 32.77298 28.12034 34.36402 34.41406 #> [1057] 33.93673 33.19022 33.14181 32.74607 32.75302 32.66724 32.76693 32.69112 #> [1065] 34.48796 28.16394 34.12266 34.05020 33.59571 33.61477 33.71590 33.79598 #> [1073] 33.38499 33.43198 32.80791 30.49365 34.76821 30.16766 30.16766 27.82873 #> [1081] 33.15289 33.16127 33.29944 33.16225 33.16148 33.17481 33.29743 33.19241 #> [1089] 33.17453 33.19933 33.18420 33.15945 33.17851 33.18314 33.20008 33.15447 #> [1097] 33.18451 33.21338 33.29038 33.17873 33.18628 33.17251 33.15352 33.16651 #> [1105] 33.20136 33.18064 33.18645 33.16727 33.14741 33.20372 33.15669 33.17383 #> [1113] 33.17383 33.18879 33.18444 33.15968 31.48447 31.44495 31.46497 31.46882 #> [1121] 31.46882 31.46882 31.46882 31.44495 31.44495 33.19159  # distance form data.frame PoR_distance(sf::st_drop_geometry(san_andreas), por) #>    [1] 30.94452 29.49555 30.61975 30.26368 28.31982 26.60286 26.17956 28.86161 #>    [9] 27.61765 28.71087 28.73033 31.16732 30.44254 33.22249 31.36599 31.24675 #>   [17] 32.83970 32.87474 32.74926 32.58776 32.26360 32.23688 32.71712 32.99185 #>   [25] 32.97834 33.12037 32.60749 33.00127 32.60797 32.63911 32.96494 33.03701 #>   [33] 29.76913 32.92573 32.91647 31.83522 31.83522 31.99900 32.64241 32.69516 #>   [41] 32.83925 32.57164 29.29759 32.63121 32.75921 33.05392 33.05392 32.79940 #>   [49] 32.88114 32.75619 32.53490 32.53947 32.56058 33.45402 33.60982 33.51016 #>   [57] 33.08997 33.00059 33.00059 33.01846 33.41943 32.89777 32.83269 32.83751 #>   [65] 32.98142 32.98142 33.24921 32.88850 32.95925 32.94253 32.95707 32.99522 #>   [73] 32.87882 32.65408 32.86571 32.96624 33.04911 32.97389 32.88151 32.95878 #>   [81] 32.61595 32.88480 31.99900 32.33724 32.64241 32.86782 32.69516 32.82703 #>   [89] 32.24622 33.64712 32.69988 32.83925 32.80607 33.15445 32.57164 32.86551 #>   [97] 32.77326 32.63121 33.09013 33.52347 32.75921 32.85044 33.07666 32.79940 #>  [105] 32.80972 32.87783 33.63300 32.75619 32.56058 32.81883 33.45402 33.30515 #>  [113] 32.60888 32.75426 32.62619 33.59074 33.60982 33.45754 33.51016 33.36364 #>  [121] 32.78243 32.79364 33.64330 32.38665 33.89380 32.77869 32.80785 33.05148 #>  [129] 32.99024 32.98245 32.88788 33.09699 33.04999 33.08997 33.05979 32.97017 #>  [137] 32.79963 33.00993 32.56784 33.01963 32.89223 33.01323 33.82620 32.88067 #>  [145] 33.35601 33.78452 33.01846 32.86385 33.41943 32.77573 32.76028 32.78063 #>  [153] 32.88742 32.84704 32.95103 33.06985 33.26843 33.07775 33.31261 33.06128 #>  [161] 32.91174 33.30416 33.28668 33.04635 33.30214 33.71603 33.83491 33.78703 #>  [169] 33.78213 33.09830 33.24921 32.26618 32.59839 32.85145 33.05903 31.87006 #>  [177] 32.99594 32.46793 33.24109 33.05964 33.05964 33.80432 34.16790 34.15202 #>  [185] 33.06595 33.95704 33.78600 33.50950 33.45994 33.42927 32.94881 36.10759 #>  [193] 32.23827 35.20779 29.31869 33.13978 32.28155 35.40403 24.74709 32.36755 #>  [201] 32.17344 29.47102 29.82473 29.82167 29.39801 24.64349 25.53339 24.13014 #>  [209] 31.22193 33.19500 33.09248 33.04783 33.04726 33.46842 31.63305 32.26150 #>  [217] 32.16794 32.20393 32.17703 32.19502 32.18780 32.16538 32.19294 32.20770 #>  [225] 32.36092 32.27058 32.25379 32.22711 32.23436 32.19670 32.90705 32.94074 #>  [233] 33.06617 32.91556 32.77969 32.36528 32.45088 33.00136 33.83257 33.26037 #>  [241] 33.27151 33.24373 32.14479 28.41782 28.94393 28.97000 29.96693 30.67976 #>  [249] 30.13344 33.94040 33.84528 33.70204 32.96045 34.60398 34.67739 33.47523 #>  [257] 33.41990 33.03269 33.07271 33.17151 33.34410 32.28934 32.16044 33.77625 #>  [265] 33.64893 34.00051 33.72566 33.11592 32.17887 30.65825 29.88754 33.89977 #>  [273] 25.42375 33.03622 29.01926 30.51245 29.72501 26.37754 27.04835 25.99569 #>  [281] 26.25231 26.89108 26.38057 26.81745 27.90069 24.64444 23.75781 25.61548 #>  [289] 26.76568 23.19364 32.71340 33.07270 32.91091 32.71712 32.30813 32.10670 #>  [297] 32.52605 32.29992 32.05245 32.24721 32.54065 33.06274 32.90543 32.99175 #>  [305] 31.82376 31.27144 33.40805 31.36291 31.18314 31.44232 30.94495 31.55689 #>  [313] 31.47479 31.60199 31.51294 31.34914 31.65691 31.50290 31.30649 30.77289 #>  [321] 31.53089 32.83613 31.92032 27.37372 28.12898 28.23189 29.47235 27.64606 #>  [329] 26.93828 27.83477 28.28427 29.39473 28.11490 27.46436 29.47838 31.19224 #>  [337] 29.08586 33.48522 33.32362 33.16217 33.35959 33.19784 34.06376 34.06376 #>  [345] 35.19638 35.20779 32.08745 35.23132 33.45645 33.83818 33.83818 33.88655 #>  [353] 35.60624 34.15163 34.15163 34.16738 33.80753 34.29620 33.71048 33.63973 #>  [361] 33.87979 32.86919 35.32193 33.01881 32.91391 33.53736 34.52573 27.88479 #>  [369] 25.60648 27.33375 32.13655 32.25379 32.26211 32.02391 30.06425 30.56761 #>  [377] 25.47356 25.12778 33.05903 33.26425 27.65746 30.01153 26.33508 38.65372 #>  [385] 31.55465 31.74196 34.66626 34.73921 33.61636 33.44870 33.47616 31.24480 #>  [393] 31.29281 31.24415 33.93741 34.22876 34.35642 34.07699 33.59495 33.60725 #>  [401] 33.42100 31.58818 31.50139 34.36646 34.52570 33.34868 33.28290 33.20259 #>  [409] 33.21033 33.08472 33.07236 33.06781 33.16250 33.16445 33.15922 33.19879 #>  [417] 31.37200 31.27289 30.11973 31.45634 34.16957 33.82966 34.47777 34.28767 #>  [425] 33.75775 32.11996 32.08644 32.30653 32.21628 34.82746 34.94909 33.72155 #>  [433] 33.59836 31.83790 33.55781 32.13012 31.12223 31.97288 31.77961 31.98028 #>  [441] 31.91637 31.94900 31.82246 31.85493 31.88809 31.92064 31.79230 31.98798 #>  [449] 32.05329 31.85938 31.89249 31.92499 31.80157 31.86621 31.99662 32.06324 #>  [457] 32.06761 32.10080 32.10519 31.56031 31.68785 31.98015 32.01183 32.07951 #>  [465] 32.33923 32.04883 32.05355 32.08649 31.57800 31.64073 32.15350 31.77124 #>  [473] 32.09123 32.35213 32.48198 31.71305 31.74543 31.77722 32.09605 32.16293 #>  [481] 32.29165 31.65657 31.68819 31.71984 31.75154 31.78264 32.13376 31.69447 #>  [489] 31.78877 32.13868 32.17020 31.60348 31.66579 31.85498 32.10970 32.23770 #>  [497] 32.36568 31.73174 31.82664 32.17642 32.20794 31.36165 32.50004 31.58233 #>  [505] 31.61367 31.64440 31.67581 31.73813 31.77030 31.80124 32.11735 32.15001 #>  [513] 32.18143 32.21353 32.24568 31.49234 31.86731 32.31187 32.37637 32.44104 #>  [521] 31.55846 31.58906 31.65165 31.68237 31.71378 31.74522 31.77671 32.15515 #>  [529] 32.18716 31.25436 31.47266 31.53480 31.56531 31.59648 31.62771 31.87709 #>  [537] 31.90868 32.19295 32.22431 31.81757 32.00584 31.51137 31.54178 31.57285 #>  [545] 31.91502 31.94597 32.26212 32.39232 32.52055 31.54945 31.58050 31.88994 #>  [553] 31.92206 31.95296 31.98390 32.23667 31.76934 32.14446 31.58756 31.83499 #>  [561] 31.89775 31.95939 32.02248 32.05344 32.21078 32.24199 32.27388 31.84171 #>  [569] 31.87301 31.90436 32.02824 32.06042 32.09138 32.21687 32.24866 32.31109 #>  [577] 32.34365 31.47718 32.15749 32.40955 32.47296 32.53653 31.88039 31.91167 #>  [585] 31.94237 31.97311 32.00452 32.06685 32.09838 32.12932 32.25477 32.34896 #>  [593] 32.38087 31.79181 31.52004 31.88782 31.91843 31.94970 31.98039 32.01112 #>  [601] 32.04316 32.10482 32.13571 32.23336 32.29546 32.48461 32.54797 31.49820 #>  [609] 31.52882 31.55887 31.58896 31.92588 31.95647 32.08054 32.14281 32.17369 #>  [617] 31.53706 31.56766 32.11855 32.14997 32.18080 32.21167 31.99892 32.30927 #>  [625] 32.06386 32.21944 32.28183 31.94485 32.56695 32.22665 32.25745 32.07508 #>  [633] 32.13690 32.32274 32.26467 32.29547 32.30271 32.33350 32.27934 32.31004 #>  [641] 32.34140 31.49660 32.46830 32.31742 32.29052 32.35550 32.38680 31.87388 #>  [649] 32.11554 32.33302 32.36361 32.39423 32.42553 31.40872 31.46719 31.52649 #>  [657] 32.49431 32.52503 31.65448 32.62107 31.30837 31.48222 31.51207 31.54136 #>  [665] 32.53240 32.56375 31.37171 31.42984 31.60521 31.78217 32.38323 32.44489 #>  [673] 32.50545 31.31921 31.34814 31.49275 31.38792 31.41623 31.44583 31.47489 #>  [681] 31.50334 31.53308 31.56227 31.59085 31.62072 32.54795 32.57920 32.70510 #>  [689] 32.76673 31.45660 31.48560 31.51400 31.57217 31.63117 31.34664 31.81181 #>  [697] 31.92939 32.40848 32.53007 31.43859 31.46743 31.49638 31.58874 32.84415 #>  [705] 31.50722 31.56509 31.25594 31.55245 31.61025 31.66764 31.76023 31.78942 #>  [713] 31.50713 32.08665 32.56388 32.68470 31.82912 31.85770 32.84055 32.81374 #>  [721] 31.89746 32.87933 31.08208 31.77000 31.82733 32.00026 32.05889 32.95252 #>  [729] 31.66705 32.24465 32.36201 32.71939 32.83942 31.84418 31.87250 31.90147 #>  [737] 31.92988 31.95899 32.04523 32.07512 32.10379 32.13252 31.79253 33.02950 #>  [745] 31.99873 32.02723 32.05701 32.11422 32.14349 32.06761 32.21196 32.89137 #>  [753] 32.92170 32.95145 32.15981 32.27587 32.86633 32.33927 32.93025 32.99096 #>  [761] 32.05584 32.51933 32.75577 32.37896 32.40782 32.93951 32.96978 32.99947 #>  [769] 33.02920 33.05959 32.23932 32.35467 32.47135 32.41805 32.44750 32.94880 #>  [777] 32.97840 33.00805 33.03835 33.06872 33.09849 33.01796 33.04759 33.07727 #>  [785] 33.10760 32.96290 33.05687 33.08649 33.11616 32.67736 32.79510 32.91289 #>  [793] 32.58207 32.82544 32.94200 33.18780 32.90417 32.96296 31.73489 33.13169 #>  [801] 33.36538 32.93713 33.81588 32.33164 33.43756 33.08206 33.11605 33.23723 #>  [809] 33.27085 33.39187 33.42701 33.66750 31.89061 32.17485 33.28346 33.27549 #>  [817] 33.32240 30.91838 30.91181 33.78949 33.19433 34.84361 34.52612 35.70139 #>  [825] 35.77840 34.42469 34.51923 33.82238 33.09818 35.28440 34.36014 34.85177 #>  [833] 33.30639 31.73122 33.23164 32.96390 32.01641 33.29071 33.29461 34.55944 #>  [841] 34.52286 34.42623 34.52842 34.34577 34.39315 34.46048 34.47395 33.79223 #>  [849] 33.76914 34.56614 33.75487 33.76314 34.36847 33.12204 33.67612 34.11624 #>  [857] 33.55431 33.59625 33.22717 34.48194 33.76914 33.79444 33.72675 35.25557 #>  [865] 35.23017 33.76341 32.45688 33.74200 33.17661 33.73804 32.96261 32.81718 #>  [873] 32.10327 33.40887 34.74090 25.87415 25.67977 24.88221 26.19604 25.69470 #>  [881] 32.06492 31.73529 31.83149 31.84648 31.82708 32.42933 33.16910 33.82645 #>  [889] 33.69395 33.48682 33.33591 31.75860 32.91077 32.97189 32.96489 32.55159 #>  [897] 32.61919 31.07621 32.97852 33.33027 31.57510 29.93633 29.44877 25.48766 #>  [905] 34.03646 33.90178 32.99064 33.42476 33.75774 33.78504 33.90127 33.20744 #>  [913] 33.18692 34.13626 33.20076 33.81511 34.66748 33.18753 33.21420 34.87579 #>  [921] 33.39699 33.61604 33.17872 33.62327 33.17848 33.63782 33.81923 33.84929 #>  [929] 33.83442 33.85214 33.88481 33.86269 34.60814 33.65441 33.86926 33.22280 #>  [937] 34.62041 33.18935 33.54185 32.10871 32.12195 32.10842 32.10210 33.15796 #>  [945] 33.83937 32.18128 30.92685 34.27009 32.97530 32.70859 33.64264 33.59462 #>  [953] 31.30776 34.61214 35.18812 31.80680 33.86610 34.03097 34.10407 33.29019 #>  [961] 32.98067 33.11300 33.11091 32.13009 31.29322 31.29322 31.29322 34.66588 #>  [969] 34.69075 33.65823 33.18590 32.02710 32.18319 32.26827 32.28754 32.22697 #>  [977] 32.23605 32.20768 32.28098 32.28098 32.28841 33.85826 32.33121 34.61183 #>  [985] 32.22817 32.25184 33.22308 31.96120 34.22392 34.21191 34.28970 33.95318 #>  [993] 34.12539 34.21600 34.18965 34.22700 35.03747 33.96022 32.23778 33.95165 #> [1001] 26.63094 33.59913 32.23594 33.78489 33.87395 33.94904 33.75684 33.81833 #> [1009] 30.73573 33.14110 33.29907 33.33079 33.25760 34.11576 33.96757 33.35933 #> [1017] 31.23657 34.62891 32.54837 33.36459 34.51558 32.26199 34.00646 31.88048 #> [1025] 32.29432 32.63639 34.59612 34.77732 34.61186 34.52301 34.53376 34.08124 #> [1033] 35.96837 33.24886 34.82892 35.71418 34.53677 33.81639 33.72633 33.61349 #> [1041] 30.49775 33.83053 33.02213 34.41432 33.33138 33.31136 33.20653 35.71487 #> [1049] 31.74381 32.70833 32.73829 32.67623 32.77298 28.12034 34.36402 34.41406 #> [1057] 33.93673 33.19022 33.14181 32.74607 32.75302 32.66724 32.76693 32.69112 #> [1065] 34.48796 28.16394 34.12266 34.05020 33.59571 33.61477 33.71590 33.79598 #> [1073] 33.38499 33.43198 32.80791 30.49365 34.76821 30.16766 30.16766 27.82873 #> [1081] 33.15289 33.16127 33.29944 33.16225 33.16148 33.17481 33.29743 33.19241 #> [1089] 33.17453 33.19933 33.18420 33.15945 33.17851 33.18314 33.20008 33.15447 #> [1097] 33.18451 33.21338 33.29038 33.17873 33.18628 33.17251 33.15352 33.16651 #> [1105] 33.20136 33.18064 33.18645 33.16727 33.14741 33.20372 33.15669 33.17383 #> [1113] 33.17383 33.18879 33.18444 33.15968 31.48447 31.44495 31.46497 31.46882 #> [1121] 31.46882 31.46882 31.46882 31.44495 31.44495 33.19159 PoR_distance(sf::st_drop_geometry(san_andreas), por, FUN = orthodrome) #>    [1] 30.94452 29.49555 30.61975 30.26368 28.31982 26.60286 26.17956 28.86161 #>    [9] 27.61765 28.71087 28.73033 31.16732 30.44254 33.22249 31.36599 31.24675 #>   [17] 32.83970 32.87474 32.74926 32.58776 32.26360 32.23688 32.71712 32.99185 #>   [25] 32.97834 33.12037 32.60749 33.00127 32.60797 32.63911 32.96494 33.03701 #>   [33] 29.76913 32.92573 32.91647 31.83522 31.83522 31.99900 32.64241 32.69516 #>   [41] 32.83925 32.57164 29.29759 32.63121 32.75921 33.05392 33.05392 32.79940 #>   [49] 32.88114 32.75619 32.53490 32.53947 32.56058 33.45402 33.60982 33.51016 #>   [57] 33.08997 33.00059 33.00059 33.01846 33.41943 32.89777 32.83269 32.83751 #>   [65] 32.98142 32.98142 33.24921 32.88850 32.95925 32.94253 32.95707 32.99522 #>   [73] 32.87882 32.65408 32.86571 32.96624 33.04911 32.97389 32.88151 32.95878 #>   [81] 32.61595 32.88480 31.99900 32.33724 32.64241 32.86782 32.69516 32.82703 #>   [89] 32.24622 33.64712 32.69988 32.83925 32.80607 33.15445 32.57164 32.86551 #>   [97] 32.77326 32.63121 33.09013 33.52347 32.75921 32.85044 33.07666 32.79940 #>  [105] 32.80972 32.87783 33.63300 32.75619 32.56058 32.81883 33.45402 33.30515 #>  [113] 32.60888 32.75426 32.62619 33.59074 33.60982 33.45754 33.51016 33.36364 #>  [121] 32.78243 32.79364 33.64330 32.38665 33.89380 32.77869 32.80785 33.05148 #>  [129] 32.99024 32.98245 32.88788 33.09699 33.04999 33.08997 33.05979 32.97017 #>  [137] 32.79963 33.00993 32.56784 33.01963 32.89223 33.01323 33.82620 32.88067 #>  [145] 33.35601 33.78452 33.01846 32.86385 33.41943 32.77573 32.76028 32.78063 #>  [153] 32.88742 32.84704 32.95103 33.06985 33.26843 33.07775 33.31261 33.06128 #>  [161] 32.91174 33.30416 33.28668 33.04635 33.30214 33.71603 33.83491 33.78703 #>  [169] 33.78213 33.09830 33.24921 32.26618 32.59839 32.85145 33.05903 31.87006 #>  [177] 32.99594 32.46793 33.24109 33.05964 33.05964 33.80432 34.16790 34.15202 #>  [185] 33.06595 33.95704 33.78600 33.50950 33.45994 33.42927 32.94881 36.10759 #>  [193] 32.23827 35.20779 29.31869 33.13978 32.28155 35.40403 24.74709 32.36755 #>  [201] 32.17344 29.47102 29.82473 29.82167 29.39801 24.64349 25.53339 24.13014 #>  [209] 31.22193 33.19500 33.09248 33.04783 33.04726 33.46842 31.63305 32.26150 #>  [217] 32.16794 32.20393 32.17703 32.19502 32.18780 32.16538 32.19294 32.20770 #>  [225] 32.36092 32.27058 32.25379 32.22711 32.23436 32.19670 32.90705 32.94074 #>  [233] 33.06617 32.91556 32.77969 32.36528 32.45088 33.00136 33.83257 33.26037 #>  [241] 33.27151 33.24373 32.14479 28.41782 28.94393 28.97000 29.96693 30.67976 #>  [249] 30.13344 33.94040 33.84528 33.70204 32.96045 34.60398 34.67739 33.47523 #>  [257] 33.41990 33.03269 33.07271 33.17151 33.34410 32.28934 32.16044 33.77625 #>  [265] 33.64893 34.00051 33.72566 33.11592 32.17887 30.65825 29.88754 33.89977 #>  [273] 25.42375 33.03622 29.01926 30.51245 29.72501 26.37754 27.04835 25.99569 #>  [281] 26.25231 26.89108 26.38057 26.81745 27.90069 24.64444 23.75781 25.61548 #>  [289] 26.76568 23.19364 32.71340 33.07270 32.91091 32.71712 32.30813 32.10670 #>  [297] 32.52605 32.29992 32.05245 32.24721 32.54065 33.06274 32.90543 32.99175 #>  [305] 31.82376 31.27144 33.40805 31.36291 31.18314 31.44232 30.94495 31.55689 #>  [313] 31.47479 31.60199 31.51294 31.34914 31.65691 31.50290 31.30649 30.77289 #>  [321] 31.53089 32.83613 31.92032 27.37372 28.12898 28.23189 29.47235 27.64606 #>  [329] 26.93828 27.83477 28.28427 29.39473 28.11490 27.46436 29.47838 31.19224 #>  [337] 29.08586 33.48522 33.32362 33.16217 33.35959 33.19784 34.06376 34.06376 #>  [345] 35.19638 35.20779 32.08745 35.23132 33.45645 33.83818 33.83818 33.88655 #>  [353] 35.60624 34.15163 34.15163 34.16738 33.80753 34.29620 33.71048 33.63973 #>  [361] 33.87979 32.86919 35.32193 33.01881 32.91391 33.53736 34.52573 27.88479 #>  [369] 25.60648 27.33375 32.13655 32.25379 32.26211 32.02391 30.06425 30.56761 #>  [377] 25.47356 25.12778 33.05903 33.26425 27.65746 30.01153 26.33508 38.65372 #>  [385] 31.55465 31.74196 34.66626 34.73921 33.61636 33.44870 33.47616 31.24480 #>  [393] 31.29281 31.24415 33.93741 34.22876 34.35642 34.07699 33.59495 33.60725 #>  [401] 33.42100 31.58818 31.50139 34.36646 34.52570 33.34868 33.28290 33.20259 #>  [409] 33.21033 33.08472 33.07236 33.06781 33.16250 33.16445 33.15922 33.19879 #>  [417] 31.37200 31.27289 30.11973 31.45634 34.16957 33.82966 34.47777 34.28767 #>  [425] 33.75775 32.11996 32.08644 32.30653 32.21628 34.82746 34.94909 33.72155 #>  [433] 33.59836 31.83790 33.55781 32.13012 31.12223 31.97288 31.77961 31.98028 #>  [441] 31.91637 31.94900 31.82246 31.85493 31.88809 31.92064 31.79230 31.98798 #>  [449] 32.05329 31.85938 31.89249 31.92499 31.80157 31.86621 31.99662 32.06324 #>  [457] 32.06761 32.10080 32.10519 31.56031 31.68785 31.98015 32.01183 32.07951 #>  [465] 32.33923 32.04883 32.05355 32.08649 31.57800 31.64073 32.15350 31.77124 #>  [473] 32.09123 32.35213 32.48198 31.71305 31.74543 31.77722 32.09605 32.16293 #>  [481] 32.29165 31.65657 31.68819 31.71984 31.75154 31.78264 32.13376 31.69447 #>  [489] 31.78877 32.13868 32.17020 31.60348 31.66579 31.85498 32.10970 32.23770 #>  [497] 32.36568 31.73174 31.82664 32.17642 32.20794 31.36165 32.50004 31.58233 #>  [505] 31.61367 31.64440 31.67581 31.73813 31.77030 31.80124 32.11735 32.15001 #>  [513] 32.18143 32.21353 32.24568 31.49234 31.86731 32.31187 32.37637 32.44104 #>  [521] 31.55846 31.58906 31.65165 31.68237 31.71378 31.74522 31.77671 32.15515 #>  [529] 32.18716 31.25436 31.47266 31.53480 31.56531 31.59648 31.62771 31.87709 #>  [537] 31.90868 32.19295 32.22431 31.81757 32.00584 31.51137 31.54178 31.57285 #>  [545] 31.91502 31.94597 32.26212 32.39232 32.52055 31.54945 31.58050 31.88994 #>  [553] 31.92206 31.95296 31.98390 32.23667 31.76934 32.14446 31.58756 31.83499 #>  [561] 31.89775 31.95939 32.02248 32.05344 32.21078 32.24199 32.27388 31.84171 #>  [569] 31.87301 31.90436 32.02824 32.06042 32.09138 32.21687 32.24866 32.31109 #>  [577] 32.34365 31.47718 32.15749 32.40955 32.47296 32.53653 31.88039 31.91167 #>  [585] 31.94237 31.97311 32.00452 32.06685 32.09838 32.12932 32.25477 32.34896 #>  [593] 32.38087 31.79181 31.52004 31.88782 31.91843 31.94970 31.98039 32.01112 #>  [601] 32.04316 32.10482 32.13571 32.23336 32.29546 32.48461 32.54797 31.49820 #>  [609] 31.52882 31.55887 31.58896 31.92588 31.95647 32.08054 32.14281 32.17369 #>  [617] 31.53706 31.56766 32.11855 32.14997 32.18080 32.21167 31.99892 32.30927 #>  [625] 32.06386 32.21944 32.28183 31.94485 32.56695 32.22665 32.25745 32.07508 #>  [633] 32.13690 32.32274 32.26467 32.29547 32.30271 32.33350 32.27934 32.31004 #>  [641] 32.34140 31.49660 32.46830 32.31742 32.29052 32.35550 32.38680 31.87388 #>  [649] 32.11554 32.33302 32.36361 32.39423 32.42553 31.40872 31.46719 31.52649 #>  [657] 32.49431 32.52503 31.65448 32.62107 31.30837 31.48222 31.51207 31.54136 #>  [665] 32.53240 32.56375 31.37171 31.42984 31.60521 31.78217 32.38323 32.44489 #>  [673] 32.50545 31.31921 31.34814 31.49275 31.38792 31.41623 31.44583 31.47489 #>  [681] 31.50334 31.53308 31.56227 31.59085 31.62072 32.54795 32.57920 32.70510 #>  [689] 32.76673 31.45660 31.48560 31.51400 31.57217 31.63117 31.34664 31.81181 #>  [697] 31.92939 32.40848 32.53007 31.43859 31.46743 31.49638 31.58874 32.84415 #>  [705] 31.50722 31.56509 31.25594 31.55245 31.61025 31.66764 31.76023 31.78942 #>  [713] 31.50713 32.08665 32.56388 32.68470 31.82912 31.85770 32.84055 32.81374 #>  [721] 31.89746 32.87933 31.08208 31.77000 31.82733 32.00026 32.05889 32.95252 #>  [729] 31.66705 32.24465 32.36201 32.71939 32.83942 31.84418 31.87250 31.90147 #>  [737] 31.92988 31.95899 32.04523 32.07512 32.10379 32.13252 31.79253 33.02950 #>  [745] 31.99873 32.02723 32.05701 32.11422 32.14349 32.06761 32.21196 32.89137 #>  [753] 32.92170 32.95145 32.15981 32.27587 32.86633 32.33927 32.93025 32.99096 #>  [761] 32.05584 32.51933 32.75577 32.37896 32.40782 32.93951 32.96978 32.99947 #>  [769] 33.02920 33.05959 32.23932 32.35467 32.47135 32.41805 32.44750 32.94880 #>  [777] 32.97840 33.00805 33.03835 33.06872 33.09849 33.01796 33.04759 33.07727 #>  [785] 33.10760 32.96290 33.05687 33.08649 33.11616 32.67736 32.79510 32.91289 #>  [793] 32.58207 32.82544 32.94200 33.18780 32.90417 32.96296 31.73489 33.13169 #>  [801] 33.36538 32.93713 33.81588 32.33164 33.43756 33.08206 33.11605 33.23723 #>  [809] 33.27085 33.39187 33.42701 33.66750 31.89061 32.17485 33.28346 33.27549 #>  [817] 33.32240 30.91838 30.91181 33.78949 33.19433 34.84361 34.52612 35.70139 #>  [825] 35.77840 34.42469 34.51923 33.82238 33.09818 35.28440 34.36014 34.85177 #>  [833] 33.30639 31.73122 33.23164 32.96390 32.01641 33.29071 33.29461 34.55944 #>  [841] 34.52286 34.42623 34.52842 34.34577 34.39315 34.46048 34.47395 33.79223 #>  [849] 33.76914 34.56614 33.75487 33.76314 34.36847 33.12204 33.67612 34.11624 #>  [857] 33.55431 33.59625 33.22717 34.48194 33.76914 33.79444 33.72675 35.25557 #>  [865] 35.23017 33.76341 32.45688 33.74200 33.17661 33.73804 32.96261 32.81718 #>  [873] 32.10327 33.40887 34.74090 25.87415 25.67977 24.88221 26.19604 25.69470 #>  [881] 32.06492 31.73529 31.83149 31.84648 31.82708 32.42933 33.16910 33.82645 #>  [889] 33.69395 33.48682 33.33591 31.75860 32.91077 32.97189 32.96489 32.55159 #>  [897] 32.61919 31.07621 32.97852 33.33027 31.57510 29.93633 29.44877 25.48766 #>  [905] 34.03646 33.90178 32.99064 33.42476 33.75774 33.78504 33.90127 33.20744 #>  [913] 33.18692 34.13626 33.20076 33.81511 34.66748 33.18753 33.21420 34.87579 #>  [921] 33.39699 33.61604 33.17872 33.62327 33.17848 33.63782 33.81923 33.84929 #>  [929] 33.83442 33.85214 33.88481 33.86269 34.60814 33.65441 33.86926 33.22280 #>  [937] 34.62041 33.18935 33.54185 32.10871 32.12195 32.10842 32.10210 33.15796 #>  [945] 33.83937 32.18128 30.92685 34.27009 32.97530 32.70859 33.64264 33.59462 #>  [953] 31.30776 34.61214 35.18812 31.80680 33.86610 34.03097 34.10407 33.29019 #>  [961] 32.98067 33.11300 33.11091 32.13009 31.29322 31.29322 31.29322 34.66588 #>  [969] 34.69075 33.65823 33.18590 32.02710 32.18319 32.26827 32.28754 32.22697 #>  [977] 32.23605 32.20768 32.28098 32.28098 32.28841 33.85826 32.33121 34.61183 #>  [985] 32.22817 32.25184 33.22308 31.96120 34.22392 34.21191 34.28970 33.95318 #>  [993] 34.12539 34.21600 34.18965 34.22700 35.03747 33.96022 32.23778 33.95165 #> [1001] 26.63094 33.59913 32.23594 33.78489 33.87395 33.94904 33.75684 33.81833 #> [1009] 30.73573 33.14110 33.29907 33.33079 33.25760 34.11576 33.96757 33.35933 #> [1017] 31.23657 34.62891 32.54837 33.36459 34.51558 32.26199 34.00646 31.88048 #> [1025] 32.29432 32.63639 34.59612 34.77732 34.61186 34.52301 34.53376 34.08124 #> [1033] 35.96837 33.24886 34.82892 35.71418 34.53677 33.81639 33.72633 33.61349 #> [1041] 30.49775 33.83053 33.02213 34.41432 33.33138 33.31136 33.20653 35.71487 #> [1049] 31.74381 32.70833 32.73829 32.67623 32.77298 28.12034 34.36402 34.41406 #> [1057] 33.93673 33.19022 33.14181 32.74607 32.75302 32.66724 32.76693 32.69112 #> [1065] 34.48796 28.16394 34.12266 34.05020 33.59571 33.61477 33.71590 33.79598 #> [1073] 33.38499 33.43198 32.80791 30.49365 34.76821 30.16766 30.16766 27.82873 #> [1081] 33.15289 33.16127 33.29944 33.16225 33.16148 33.17481 33.29743 33.19241 #> [1089] 33.17453 33.19933 33.18420 33.15945 33.17851 33.18314 33.20008 33.15447 #> [1097] 33.18451 33.21338 33.29038 33.17873 33.18628 33.17251 33.15352 33.16651 #> [1105] 33.20136 33.18064 33.18645 33.16727 33.14741 33.20372 33.15669 33.17383 #> [1113] 33.17383 33.18879 33.18444 33.15968 31.48447 31.44495 31.46497 31.46882 #> [1121] 31.46882 31.46882 31.46882 31.44495 31.44495 33.19159 PoR_distance(sf::st_drop_geometry(san_andreas), por, FUN = vincenty) #>    [1] 30.94452 29.49555 30.61975 30.26368 28.31982 26.60286 26.17956 28.86161 #>    [9] 27.61765 28.71087 28.73033 31.16732 30.44254 33.22249 31.36599 31.24675 #>   [17] 32.83970 32.87474 32.74926 32.58776 32.26360 32.23688 32.71712 32.99185 #>   [25] 32.97834 33.12037 32.60749 33.00127 32.60797 32.63911 32.96494 33.03701 #>   [33] 29.76913 32.92573 32.91647 31.83522 31.83522 31.99900 32.64241 32.69516 #>   [41] 32.83925 32.57164 29.29759 32.63121 32.75921 33.05392 33.05392 32.79940 #>   [49] 32.88114 32.75619 32.53490 32.53947 32.56058 33.45402 33.60982 33.51016 #>   [57] 33.08997 33.00059 33.00059 33.01846 33.41943 32.89777 32.83269 32.83751 #>   [65] 32.98142 32.98142 33.24921 32.88850 32.95925 32.94253 32.95707 32.99522 #>   [73] 32.87882 32.65408 32.86571 32.96624 33.04911 32.97389 32.88151 32.95878 #>   [81] 32.61595 32.88480 31.99900 32.33724 32.64241 32.86782 32.69516 32.82703 #>   [89] 32.24622 33.64712 32.69988 32.83925 32.80607 33.15445 32.57164 32.86551 #>   [97] 32.77326 32.63121 33.09013 33.52347 32.75921 32.85044 33.07666 32.79940 #>  [105] 32.80972 32.87783 33.63300 32.75619 32.56058 32.81883 33.45402 33.30515 #>  [113] 32.60888 32.75426 32.62619 33.59074 33.60982 33.45754 33.51016 33.36364 #>  [121] 32.78243 32.79364 33.64330 32.38665 33.89380 32.77869 32.80785 33.05148 #>  [129] 32.99024 32.98245 32.88788 33.09699 33.04999 33.08997 33.05979 32.97017 #>  [137] 32.79963 33.00993 32.56784 33.01963 32.89223 33.01323 33.82620 32.88067 #>  [145] 33.35601 33.78452 33.01846 32.86385 33.41943 32.77573 32.76028 32.78063 #>  [153] 32.88742 32.84704 32.95103 33.06985 33.26843 33.07775 33.31261 33.06128 #>  [161] 32.91174 33.30416 33.28668 33.04635 33.30214 33.71603 33.83491 33.78703 #>  [169] 33.78213 33.09830 33.24921 32.26618 32.59839 32.85145 33.05903 31.87006 #>  [177] 32.99594 32.46793 33.24109 33.05964 33.05964 33.80432 34.16790 34.15202 #>  [185] 33.06595 33.95704 33.78600 33.50950 33.45994 33.42927 32.94881 36.10759 #>  [193] 32.23827 35.20779 29.31869 33.13978 32.28155 35.40403 24.74709 32.36755 #>  [201] 32.17344 29.47102 29.82473 29.82167 29.39801 24.64349 25.53339 24.13014 #>  [209] 31.22193 33.19500 33.09248 33.04783 33.04726 33.46842 31.63305 32.26150 #>  [217] 32.16794 32.20393 32.17703 32.19502 32.18780 32.16538 32.19294 32.20770 #>  [225] 32.36092 32.27058 32.25379 32.22711 32.23436 32.19670 32.90705 32.94074 #>  [233] 33.06617 32.91556 32.77969 32.36528 32.45088 33.00136 33.83257 33.26037 #>  [241] 33.27151 33.24373 32.14479 28.41782 28.94393 28.97000 29.96693 30.67976 #>  [249] 30.13344 33.94040 33.84528 33.70204 32.96045 34.60398 34.67739 33.47523 #>  [257] 33.41990 33.03269 33.07271 33.17151 33.34410 32.28934 32.16044 33.77625 #>  [265] 33.64893 34.00051 33.72566 33.11592 32.17887 30.65825 29.88754 33.89977 #>  [273] 25.42375 33.03622 29.01926 30.51245 29.72501 26.37754 27.04835 25.99569 #>  [281] 26.25231 26.89108 26.38057 26.81745 27.90069 24.64444 23.75781 25.61548 #>  [289] 26.76568 23.19364 32.71340 33.07270 32.91091 32.71712 32.30813 32.10670 #>  [297] 32.52605 32.29992 32.05245 32.24721 32.54065 33.06274 32.90543 32.99175 #>  [305] 31.82376 31.27144 33.40805 31.36291 31.18314 31.44232 30.94495 31.55689 #>  [313] 31.47479 31.60199 31.51294 31.34914 31.65691 31.50290 31.30649 30.77289 #>  [321] 31.53089 32.83613 31.92032 27.37372 28.12898 28.23189 29.47235 27.64606 #>  [329] 26.93828 27.83477 28.28427 29.39473 28.11490 27.46436 29.47838 31.19224 #>  [337] 29.08586 33.48522 33.32362 33.16217 33.35959 33.19784 34.06376 34.06376 #>  [345] 35.19638 35.20779 32.08745 35.23132 33.45645 33.83818 33.83818 33.88655 #>  [353] 35.60624 34.15163 34.15163 34.16738 33.80753 34.29620 33.71048 33.63973 #>  [361] 33.87979 32.86919 35.32193 33.01881 32.91391 33.53736 34.52573 27.88479 #>  [369] 25.60648 27.33375 32.13655 32.25379 32.26211 32.02391 30.06425 30.56761 #>  [377] 25.47356 25.12778 33.05903 33.26425 27.65746 30.01153 26.33508 38.65372 #>  [385] 31.55465 31.74196 34.66626 34.73921 33.61636 33.44870 33.47616 31.24480 #>  [393] 31.29281 31.24415 33.93741 34.22876 34.35642 34.07699 33.59495 33.60725 #>  [401] 33.42100 31.58818 31.50139 34.36646 34.52570 33.34868 33.28290 33.20259 #>  [409] 33.21033 33.08472 33.07236 33.06781 33.16250 33.16445 33.15922 33.19879 #>  [417] 31.37200 31.27289 30.11973 31.45634 34.16957 33.82966 34.47777 34.28767 #>  [425] 33.75775 32.11996 32.08644 32.30653 32.21628 34.82746 34.94909 33.72155 #>  [433] 33.59836 31.83790 33.55781 32.13012 31.12223 31.97288 31.77961 31.98028 #>  [441] 31.91637 31.94900 31.82246 31.85493 31.88809 31.92064 31.79230 31.98798 #>  [449] 32.05329 31.85938 31.89249 31.92499 31.80157 31.86621 31.99662 32.06324 #>  [457] 32.06761 32.10080 32.10519 31.56031 31.68785 31.98015 32.01183 32.07951 #>  [465] 32.33923 32.04883 32.05355 32.08649 31.57800 31.64073 32.15350 31.77124 #>  [473] 32.09123 32.35213 32.48198 31.71305 31.74543 31.77722 32.09605 32.16293 #>  [481] 32.29165 31.65657 31.68819 31.71984 31.75154 31.78264 32.13376 31.69447 #>  [489] 31.78877 32.13868 32.17020 31.60348 31.66579 31.85498 32.10970 32.23770 #>  [497] 32.36568 31.73174 31.82664 32.17642 32.20794 31.36165 32.50004 31.58233 #>  [505] 31.61367 31.64440 31.67581 31.73813 31.77030 31.80124 32.11735 32.15001 #>  [513] 32.18143 32.21353 32.24568 31.49234 31.86731 32.31187 32.37637 32.44104 #>  [521] 31.55846 31.58906 31.65165 31.68237 31.71378 31.74522 31.77671 32.15515 #>  [529] 32.18716 31.25436 31.47266 31.53480 31.56531 31.59648 31.62771 31.87709 #>  [537] 31.90868 32.19295 32.22431 31.81757 32.00584 31.51137 31.54178 31.57285 #>  [545] 31.91502 31.94597 32.26212 32.39232 32.52055 31.54945 31.58050 31.88994 #>  [553] 31.92206 31.95296 31.98390 32.23667 31.76934 32.14446 31.58756 31.83499 #>  [561] 31.89775 31.95939 32.02248 32.05344 32.21078 32.24199 32.27388 31.84171 #>  [569] 31.87301 31.90436 32.02824 32.06042 32.09138 32.21687 32.24866 32.31109 #>  [577] 32.34365 31.47718 32.15749 32.40955 32.47296 32.53653 31.88039 31.91167 #>  [585] 31.94237 31.97311 32.00452 32.06685 32.09838 32.12932 32.25477 32.34896 #>  [593] 32.38087 31.79181 31.52004 31.88782 31.91843 31.94970 31.98039 32.01112 #>  [601] 32.04316 32.10482 32.13571 32.23336 32.29546 32.48461 32.54797 31.49820 #>  [609] 31.52882 31.55887 31.58896 31.92588 31.95647 32.08054 32.14281 32.17369 #>  [617] 31.53706 31.56766 32.11855 32.14997 32.18080 32.21167 31.99892 32.30927 #>  [625] 32.06386 32.21944 32.28183 31.94485 32.56695 32.22665 32.25745 32.07508 #>  [633] 32.13690 32.32274 32.26467 32.29547 32.30271 32.33350 32.27934 32.31004 #>  [641] 32.34140 31.49660 32.46830 32.31742 32.29052 32.35550 32.38680 31.87388 #>  [649] 32.11554 32.33302 32.36361 32.39423 32.42553 31.40872 31.46719 31.52649 #>  [657] 32.49431 32.52503 31.65448 32.62107 31.30837 31.48222 31.51207 31.54136 #>  [665] 32.53240 32.56375 31.37171 31.42984 31.60521 31.78217 32.38323 32.44489 #>  [673] 32.50545 31.31921 31.34814 31.49275 31.38792 31.41623 31.44583 31.47489 #>  [681] 31.50334 31.53308 31.56227 31.59085 31.62072 32.54795 32.57920 32.70510 #>  [689] 32.76673 31.45660 31.48560 31.51400 31.57217 31.63117 31.34664 31.81181 #>  [697] 31.92939 32.40848 32.53007 31.43859 31.46743 31.49638 31.58874 32.84415 #>  [705] 31.50722 31.56509 31.25594 31.55245 31.61025 31.66764 31.76023 31.78942 #>  [713] 31.50713 32.08665 32.56388 32.68470 31.82912 31.85770 32.84055 32.81374 #>  [721] 31.89746 32.87933 31.08208 31.77000 31.82733 32.00026 32.05889 32.95252 #>  [729] 31.66705 32.24465 32.36201 32.71939 32.83942 31.84418 31.87250 31.90147 #>  [737] 31.92988 31.95899 32.04523 32.07512 32.10379 32.13252 31.79253 33.02950 #>  [745] 31.99873 32.02723 32.05701 32.11422 32.14349 32.06761 32.21196 32.89137 #>  [753] 32.92170 32.95145 32.15981 32.27587 32.86633 32.33927 32.93025 32.99096 #>  [761] 32.05584 32.51933 32.75577 32.37896 32.40782 32.93951 32.96978 32.99947 #>  [769] 33.02920 33.05959 32.23932 32.35467 32.47135 32.41805 32.44750 32.94880 #>  [777] 32.97840 33.00805 33.03835 33.06872 33.09849 33.01796 33.04759 33.07727 #>  [785] 33.10760 32.96290 33.05687 33.08649 33.11616 32.67736 32.79510 32.91289 #>  [793] 32.58207 32.82544 32.94200 33.18780 32.90417 32.96296 31.73489 33.13169 #>  [801] 33.36538 32.93713 33.81588 32.33164 33.43756 33.08206 33.11605 33.23723 #>  [809] 33.27085 33.39187 33.42701 33.66750 31.89061 32.17485 33.28346 33.27549 #>  [817] 33.32240 30.91838 30.91181 33.78949 33.19433 34.84361 34.52612 35.70139 #>  [825] 35.77840 34.42469 34.51923 33.82238 33.09818 35.28440 34.36014 34.85177 #>  [833] 33.30639 31.73122 33.23164 32.96390 32.01641 33.29071 33.29461 34.55944 #>  [841] 34.52286 34.42623 34.52842 34.34577 34.39315 34.46048 34.47395 33.79223 #>  [849] 33.76914 34.56614 33.75487 33.76314 34.36847 33.12204 33.67612 34.11624 #>  [857] 33.55431 33.59625 33.22717 34.48194 33.76914 33.79444 33.72675 35.25557 #>  [865] 35.23017 33.76341 32.45688 33.74200 33.17661 33.73804 32.96261 32.81718 #>  [873] 32.10327 33.40887 34.74090 25.87415 25.67977 24.88221 26.19604 25.69470 #>  [881] 32.06492 31.73529 31.83149 31.84648 31.82708 32.42933 33.16910 33.82645 #>  [889] 33.69395 33.48682 33.33591 31.75860 32.91077 32.97189 32.96489 32.55159 #>  [897] 32.61919 31.07621 32.97852 33.33027 31.57510 29.93633 29.44877 25.48766 #>  [905] 34.03646 33.90178 32.99064 33.42476 33.75774 33.78504 33.90127 33.20744 #>  [913] 33.18692 34.13626 33.20076 33.81511 34.66748 33.18753 33.21420 34.87579 #>  [921] 33.39699 33.61604 33.17872 33.62327 33.17848 33.63782 33.81923 33.84929 #>  [929] 33.83442 33.85214 33.88481 33.86269 34.60814 33.65441 33.86926 33.22280 #>  [937] 34.62041 33.18935 33.54185 32.10871 32.12195 32.10842 32.10210 33.15796 #>  [945] 33.83937 32.18128 30.92685 34.27009 32.97530 32.70859 33.64264 33.59462 #>  [953] 31.30776 34.61214 35.18812 31.80680 33.86610 34.03097 34.10407 33.29019 #>  [961] 32.98067 33.11300 33.11091 32.13009 31.29322 31.29322 31.29322 34.66588 #>  [969] 34.69075 33.65823 33.18590 32.02710 32.18319 32.26827 32.28754 32.22697 #>  [977] 32.23605 32.20768 32.28098 32.28098 32.28841 33.85826 32.33121 34.61183 #>  [985] 32.22817 32.25184 33.22308 31.96120 34.22392 34.21191 34.28970 33.95318 #>  [993] 34.12539 34.21600 34.18965 34.22700 35.03747 33.96022 32.23778 33.95165 #> [1001] 26.63094 33.59913 32.23594 33.78489 33.87395 33.94904 33.75684 33.81833 #> [1009] 30.73573 33.14110 33.29907 33.33079 33.25760 34.11576 33.96757 33.35933 #> [1017] 31.23657 34.62891 32.54837 33.36459 34.51558 32.26199 34.00646 31.88048 #> [1025] 32.29432 32.63639 34.59612 34.77732 34.61186 34.52301 34.53376 34.08124 #> [1033] 35.96837 33.24886 34.82892 35.71418 34.53677 33.81639 33.72633 33.61349 #> [1041] 30.49775 33.83053 33.02213 34.41432 33.33138 33.31136 33.20653 35.71487 #> [1049] 31.74381 32.70833 32.73829 32.67623 32.77298 28.12034 34.36402 34.41406 #> [1057] 33.93673 33.19022 33.14181 32.74607 32.75302 32.66724 32.76693 32.69112 #> [1065] 34.48796 28.16394 34.12266 34.05020 33.59571 33.61477 33.71590 33.79598 #> [1073] 33.38499 33.43198 32.80791 30.49365 34.76821 30.16766 30.16766 27.82873 #> [1081] 33.15289 33.16127 33.29944 33.16225 33.16148 33.17481 33.29743 33.19241 #> [1089] 33.17453 33.19933 33.18420 33.15945 33.17851 33.18314 33.20008 33.15447 #> [1097] 33.18451 33.21338 33.29038 33.17873 33.18628 33.17251 33.15352 33.16651 #> [1105] 33.20136 33.18064 33.18645 33.16727 33.14741 33.20372 33.15669 33.17383 #> [1113] 33.17383 33.18879 33.18444 33.15968 31.48447 31.44495 31.46497 31.46882 #> [1121] 31.46882 31.46882 31.46882 31.44495 31.44495 33.19159"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Data in PoR Map — PoR_map","title":"Plot Data in PoR Map — PoR_map","text":"Plot Data PoR Map","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Data in PoR Map — PoR_map","text":"","code":"PoR_map(   x,   PoR,   pb = NULL,   type = c(\"none\", \"in\", \"out\", \"right\", \"left\"),   show.deviation = FALSE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Data in PoR Map — PoR_map","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Pole Rotation type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned. show.deviation logical. Whether data color-coded according deviation prediction, according stress regime? ignored type=='none'. ... optional arguments passed tectonicr.colors()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Data in PoR Map — PoR_map","text":"plot","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_map.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Data in PoR Map — PoR_map","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") PoR_map(san_andreas, PoR = na_pa, pb = plate_boundary, type = \"right\", show.deviation = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{Hmax}\\) Euler pole (Pole Rotation) coordinate reference system. type plate boundary given, also gives deviation theoretically predicted azimuth \\(\\sigma_{Hmax}\\), deviation, normalized \\(\\chi^2\\) statistics.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"","code":"PoR_shmax(df, PoR, type = c(\"none\", \"in\", \"out\", \"right\", \"left\"))"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"df data.frame containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi standard deviation unc (optional) PoR \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler  pole type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Either numeric vector azimuths transformed coordinate system (degrees), \"data.frame\" azi.PoR transformed azimuths (degrees), prd predicted azimuths (degrees), dev deviation transformed predicted azimuth (degrees), nchisq Norm \\(\\chi^2\\) test statistic, cdist angular distance transformed predicted azimuth.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"azimuth \\(\\sigma_{Hmax}\\) pole rotation reference system approximate 0 (180), 45, 90, 135 degrees stress sourced outward, sinistral, inward, dextral moving plate boundary, respectively. directions \\(\\sigma_{Hmax}\\) respect four plate boundary types.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Direction of Maximum Horizontal Stress in PoR reference system — PoR_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"san_andreas\") res <- PoR_shmax(san_andreas, PoR, type = \"right\") head(res) #>      azi.PoR prd        dev     nchisq      cdist #> 1 173.240166 135   38.24017 0.18053214 0.38311043 #> 2   1.058195 135 -133.94180 2.21486507 0.51846479 #> 3 147.609558 135   12.60956 0.01962975 0.04765752 #> 4 163.607388 135   28.60739 0.10103489 0.22925429 #> 5 152.233017 135   17.23302 0.03666381 0.08776909 #> 6 150.611386 135   15.61139 0.03008832 0.07242085"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"data transformed PoR system interpolation. interpolation grid returned geographical coordinates azimuths.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"","code":"PoR_stress2grid(   x,   PoR,   grid = NULL,   PoR_grid = TRUE,   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   ... )  PoR_stress2grid_stats(   x,   PoR,   grid = NULL,   PoR_grid = TRUE,   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"x sf object containing azi SHmax degree unc Uncertainties SHmax degree type Methods used determination orientation SHmax PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole grid (optional) Point object class sf. PoR_grid logical. Whether grid generated based coordinate range PoR (TRUE, default) CRS geographical CRS (FALSE). ignored grid specified. lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes (ignored \"grid\" specified). gridsize Numeric. Target spacing regular grid decimal degree. Default 2.5 (ignored grid specified) ... Arguments passed stress2grid()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"sf object containing lon,lat longitude latitude geographical CRS (degrees) lon.PoR,lat.PoR longitude latitude PoR CRS (degrees) azi geographical mean SHmax degree azi.PoR PoR mean SHmax degree sd Standard deviation SHmax degrees R Search radius km mdr Mean distance datapoints per search radius N Number data points search radius","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"Stress field wavelength analysis PoR system back-transformed","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/PoR_stress2grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial interpolation of SHmax in PoR coordinate reference system — PoR_stress2grid","text":"","code":"data(\"san_andreas\") data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") PoR_stress2grid(san_andreas, PoR) #> Simple feature collection with 979 features and 10 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.0802 ymin: 21.44743 xmax: -106.3859 ymax: 41.36318 #> Geodetic CRS:  WGS 84 #> # A tibble: 979 × 11 #>    lon.PoR lat.PoR azi.PoR    sd     R     N   mdr             geometry #>  *   <dbl>   <dbl>   <dbl> <dbl> <dbl> <int> <dbl>          <POINT [°]> #>  1   -84.8    52.6    160.  24.6   450    46 0.922 (-125.0802 34.07892) #>  2   -84.8    52.6    156.  22.8   500    85 0.887 (-125.0802 34.07892) #>  3   -84.8    52.6    157.  21.1   550   187 0.891 (-125.0802 34.07892) #>  4   -84.8    52.6    150.  21.1   600   298 0.867 (-125.0802 34.07892) #>  5   -84.8    52.6    143.  21.4   650   385 0.837 (-125.0802 34.07892) #>  6   -84.8    52.6    142.  19.7   700   483 0.817 (-125.0802 34.07892) #>  7   -84.8    52.6    141.  18.7   750   566 0.791 (-125.0802 34.07892) #>  8   -84.8    52.6    139.  18.4   800   703 0.786 (-125.0802 34.07892) #>  9   -84.8    52.6    139.  18.3   850   772 0.760 (-125.0802 34.07892) #> 10   -84.8    52.6    139.  18.1   900   818 0.732 (-125.0802 34.07892) #> # ℹ 969 more rows #> # ℹ 3 more variables: lat <dbl>, lon <dbl>, azi <dbl>  if (FALSE) { # \\dontrun{ PoR_stress2grid_stats(san_andreas, PoR) } # }"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":null,"dir":"Reference","previous_headings":"","what":"Centrically aligned geom_spoke marker — PositionCenterSpoke","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"\"position\" subclass \"center_spoke\" center ggplot::geom_spoke() marker origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"","code":"PositionCenterSpoke"},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"object class PositionCenterSpoke (inherits Position, ggproto, gg) length 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/PositionCenterSpoke.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Centrically aligned geom_spoke marker — PositionCenterSpoke","text":"https://stackoverflow.com/questions/55474143/--center-geom-spoke-around--origin","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler angle/axis from quaternion — Q4_to_euler","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"Euler angle/axis quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"","code":"Q4_to_euler(q)"},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"q object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/Q4_to_euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler angle/axis from quaternion — Q4_to_euler","text":"\"euler.pole\" object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":null,"dir":"Reference","previous_headings":"","what":"Absolute Plate Velocity — abs_vel","title":"Absolute Plate Velocity — abs_vel","text":"Calculates absolute angular velocity plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(w, alpha, r = earth_radius())"},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Absolute Plate Velocity — abs_vel","text":"w Angular velocity rate angle rotation alpha Angular distance Euler pole small circle around Euler pole r Radius. Default WGS84 Earth's radius (6371.009 km)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Absolute Plate Velocity — abs_vel","text":"numeric (unit velocity: km/Myr)","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/abs_vel.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Absolute Plate Velocity — abs_vel","text":"","code":"abs_vel(0.21, 0) #> [1] 0 abs_vel(0.21, 45) #> [1] 16.51163 abs_vel(0.21, 90) #> [1] 23.35097"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":null,"dir":"Reference","previous_headings":"","what":"Degrees to Radians — angle-conversion","title":"Degrees to Radians — angle-conversion","text":"Helper functions transform angles degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Degrees to Radians — angle-conversion","text":"","code":"rad2deg(rad)  deg2rad(deg)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Degrees to Radians — angle-conversion","text":"rad (array ) angles radians. deg (array ) angles degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Degrees to Radians — angle-conversion","text":"numeric. angle degrees radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle-conversion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Degrees to Radians — angle-conversion","text":"","code":"deg2rad(seq(-90, 90, 15)) #>  [1] -1.5707963 -1.3089969 -1.0471976 -0.7853982 -0.5235988 -0.2617994 #>  [7]  0.0000000  0.2617994  0.5235988  0.7853982  1.0471976  1.3089969 #> [13]  1.5707963 rad2deg(seq(-pi / 2, pi / 2, length = 13)) #>  [1] -90 -75 -60 -45 -30 -15   0  15  30  45  60  75  90"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle Between Two Vectors — angle_vectors","title":"Angle Between Two Vectors — angle_vectors","text":"Calculates angle two vectors","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"angle_vectors(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle Between Two Vectors — angle_vectors","text":"x, y Vectors Cartesian coordinates. Can vectors three numbers matrix 3 columns (x, y, z)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle Between Two Vectors — angle_vectors","text":"numeric. angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/angle_vectors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle Between Two Vectors — angle_vectors","text":"","code":"u <- c(1, -2, 3) v <- c(-2, 1, 1) angle_vectors(u, v) #> [1] 96.26395"},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot axes — axes","title":"Plot axes — axes","text":"Plot axes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot axes — axes","text":"","code":"axes(   x,   y,   angle,   radius = 0.5,   arrow.code = 1,   arrow.length = 0,   add = FALSE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot axes — axes","text":"x, y coordinates points angle Azimuth degrees radius length axis arrow.code integer. Kind arrow head. default 1, .e. arrow head. See graphics::arrows() details arrow.length numeric Length edges arrow head (inches). (Ignored arrow.code = 1) add logical. add existing plot? ... optional arguments passed graphics::arrows()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot axes — axes","text":"return value, called side effects","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/axes.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot axes — axes","text":"","code":"data(\"san_andreas\") axes(san_andreas$lon, san_andreas$lat, san_andreas$azi, add = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_mean_diff.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Mean Difference — circle_mean_diff","title":"Circular Mean Difference — circle_mean_diff","text":"Circular Mean Difference","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_mean_diff.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Mean Difference — circle_mean_diff","text":"","code":"circular_mean_difference(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_mean_difference_alt(x, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_mean_diff.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Mean Difference — circle_mean_diff","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_mean_diff.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Mean Difference — circle_mean_diff","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_mean_diff.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular Mean Difference — circle_mean_diff","text":"Mardia, K.V., Jupp, P.E (1999). Directional Statistics, Wiley Series Probability Statistics. John Wiley & Sons, Inc., Hoboken, NJ, USA. doi:10.1002/9780470316979","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_mean_diff.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Mean Difference — circle_mean_diff","text":"","code":"data(\"san_andreas\") circular_mean_difference(san_andreas$azi) #> [1] 0.6951742 circular_mean_difference(san_andreas$azi, 1 / san_andreas$unc) #> [1] 0.5354372  circular_mean_difference_alt(san_andreas$azi) #> [1] 27.92053 circular_mean_difference_alt(san_andreas$azi, 1 / san_andreas$unc) #> [1] 21.52921"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Summary Statistics of Circular Data — circle_stats","title":"Summary Statistics of Circular Data — circle_stats","text":"Calculate (weighted median) standard deviation orientation data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Summary Statistics of Circular Data — circle_stats","text":"","code":"circular_mean(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_var(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_sd(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_median(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_quantiles(x, w = NULL, axial = TRUE, na.rm = TRUE)  circular_IQR(x, w = NULL, axial = TRUE, na.rm = TRUE)  sample_circular_dispersion(x, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Summary Statistics of Circular Data — circle_stats","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Summary Statistics of Circular Data — circle_stats","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Summary Statistics of Circular Data — circle_stats","text":"Weighting may reciprocal data uncertainties. Weightings effect quasi-median quasi-quantiles length(x) %% 2 != 1 length(x) %% 4 == 0, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Summary Statistics of Circular Data — circle_stats","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press. Mardia, K.V., Jupp, P.E (1999). Directional Statistics, Wiley Series Probability Statistics. John Wiley & Sons, Inc., Hoboken, NJ, USA. doi:10.1002/9780470316979 Ziegler, M. O.; Heidbach O. (2019). Manual Matlab Script Stress2Grid v1.1. WSM Technical Report 19-02, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2019.002 Heidbach, O., Tingay, M., Barth, ., Reinecker, J., Kurfess, D., & Mueller, B. (2010). Global crustal stress pattern based World Stress Map database release 2008. Tectonophysics 482, 3<U+2013>15, doi:10.1016/j.tecto.2009.07.023","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circle_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Summary Statistics of Circular Data — circle_stats","text":"","code":"x <- rvm(10, 0, 100) %% 180 unc <- stats::runif(100, 0, 10) circular_mean(x, 1 / unc) #> [1] 0.6221128 circular_var(x, 1 / unc) #> [1] 0.01727118 sample_circular_dispersion(x, 1 / unc) #> [1] 0.03467445 circular_sd(x, 1 / unc) #> [1] 5.347582 circular_median(x, 1 / unc) #> [1] 172.0181 circular_quantiles(x, 1 / unc) #>        25%        50%        75%  #>   5.704103 172.018116 178.181497  circular_IQR(x, 1 / unc) #> [1] 7.522606  data(\"san_andreas\") circular_mean(san_andreas$azi) #> [1] 10.64134 circular_mean(san_andreas$azi, 1 / san_andreas$unc) #> [1] 9.98401 circular_median(san_andreas$azi) #> [1] 35.5 circular_median(san_andreas$azi, 1 / san_andreas$unc) #> [1] 35.62501 circular_quantiles(san_andreas$azi) #>   25%   50%   75%  #>  15.0  35.5 160.0  circular_quantiles(san_andreas$azi, 1 / san_andreas$unc) #>       25%       50%       75%  #>  15.00000  35.62501 160.00000  circular_var(san_andreas$azi) #> [1] 0.3177094 circular_var(san_andreas$azi, 1 / san_andreas$unc) #> [1] 0.201883 sample_circular_dispersion(san_andreas$azi, 1 / san_andreas$unc) #> [1] 0.4202865  data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_mean(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 138.9025 circular_median(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 136.8581 circular_var(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 0.1896731 sample_circular_dispersion(sa.por$azi.PoR, 1 / san_andreas$unc) #> [1] 0.3881716 circular_quantiles(sa.por$azi.PoR, 1 / san_andreas$unc) #>      25%      50%      75%  #> 124.8436 136.8581 150.2225"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":null,"dir":"Reference","previous_headings":"","what":"Bootstrapped Estimates for Circular Dispersion — circular_dispersion_boot","title":"Bootstrapped Estimates for Circular Dispersion — circular_dispersion_boot","text":"Calculates bootstrapped estimates circular dispersion, standard error confidence interval.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bootstrapped Estimates for Circular Dispersion — circular_dispersion_boot","text":"","code":"circular_dispersion_boot(   x,   y = NULL,   w = NULL,   w.y = NULL,   R = 1000,   conf.level = 0.95,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bootstrapped Estimates for Circular Dispersion — circular_dispersion_boot","text":"x numeric values degrees. y numeric. angle(s) angles x disperse (degrees). w, w.y (optional) Weights x y, respectively. vector positive numbers length x. R number bootstrap replicates. positive integer (1000 default). conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). ... optional arguments passed boot::boot()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bootstrapped Estimates for Circular Dispersion — circular_dispersion_boot","text":"list containing: MLE maximum likelihood estimate circular dispersion sde standard error MLE CI lower upper limit confidence interval MLE","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/circular_dispersion_boot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bootstrapped Estimates for Circular Dispersion — circular_dispersion_boot","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_dispersion(sa.por$azi.PoR, y = 135, w = 1 / san_andreas$unc) #> [1] 0.09858997 circular_dispersion_boot(sa.por$azi.PoR, y = 135, w = 1 / san_andreas$unc, R = 1000) #> $MLE #> [1] 0.18919 #>  #> $sde #> [1] 0.009470636 #>  #> $CI #> [1] 0.1709367 0.2079950 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_mode.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Mode — circular_mode","title":"Circular Mode — circular_mode","text":"Angle maximum density specified von Mises distribution","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_mode.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Mode — circular_mode","text":"","code":"circular_mode(x, kappa, axial = TRUE, n = 512)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_mode.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Mode — circular_mode","text":"x numeric vector. Values degrees. kappa von Mises distribution concentration parameter axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE).#' @param kappa n number equally spaced points density estimated.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_mode.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Mode — circular_mode","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_mode.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Mode — circular_mode","text":"","code":"x <- rvm(10, 0, 100) %% 180 circular_mode(x, kappa = 2) #> [1] 90.35156"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular plot — circular_plot","title":"Circular plot — circular_plot","text":"Circular plot","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular plot — circular_plot","text":"","code":"circular_plot(   main = NULL,   labels = TRUE,   at = seq(0, 360 - 45, 45),   cborder = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular plot — circular_plot","text":"main Character string specifying title plot. labels Either logical value indicating whether plot labels next tick marks, vector labels tick marks. Optional vector angles tick marks plotted. Set =numeric(0) suppress tick marks. cborder logical. Border rose plot. ... optional arguments passed plot.default()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular plot — circular_plot","text":"none","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_plot.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Circular plot — circular_plot","text":"Polar diagram angles increase clockwise.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_qqplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","title":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","text":"Uniformly distributed orientations yield straight line origin. Systematic departures linearity indicate preferred orientation.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_qqplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","text":"","code":"circular_qqplot(   x,   axial = TRUE,   xlab = paste(\"i/(n+1)\"),   ylab = NULL,   main = \"Circular Quantile-Quantile Plot\",   add_line = TRUE,   col = \"#B63679FF\",   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_qqplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","text":"x numeric. Angles degrees axial Logical. Whether data uniaxial (axial=FALSE) xlab, ylab, main plot labels. add_line logical. Whether connect points straight lines? col color dots. ... graphical parameters","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_qqplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","text":"plot","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_qqplot.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","text":"Borradaile, G. J. (2003). Statistics earth science data: distribution time, space, orientation (Vol. 351, p. 329). Berlin: Springer.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_qqplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quantile-Quantile Linearised Plot for Circular Distributions — circular_qqplot","text":"","code":"# von Mises distribution x_vm <- rvm(100, mean = 0, kappa = 2) circular_qqplot(x_vm, pch = 20)   x_norm <- rnorm(100, mean = 0, sd = 25) circular_qqplot(x_norm, pch = 20)   # uniform (random) data x_unif <- runif(100, 0, 360) circular_qqplot(x_unif, pch = 20)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_range.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Range — circular_range","title":"Circular Range — circular_range","text":"Length smallest arc contains observations.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_range.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Range — circular_range","text":"","code":"circular_range(x, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_range.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Range — circular_range","text":"x numeric vector. Values degrees. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_range.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Range — circular_range","text":"numeric. angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_range.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular Range — circular_range","text":"Mardia, K.V., Jupp, P.E (1999). Directional Statistics, Wiley Series Probability Statistics. John Wiley & Sons, Inc., Hoboken, NJ, USA. doi:10.1002/9780470316979","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_range.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Range — circular_range","text":"","code":"roulette <- c(43, 45, 52, 61, 75, 88, 88, 279, 357) circular_range(roulette, axial = FALSE) #> [1] 169  data(\"san_andreas\") circular_range(san_andreas$azi) #> [1] 173"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":null,"dir":"Reference","previous_headings":"","what":"Standard Error of Mean Direction of Circular Data — circular_sd_error","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"Measure chance variation expected sample sample estimates mean direction. parametric estimate circular standard error mean direction particular form standard error von Mises distribution. approximated standard error mean direction computed mean resultant length MLE concentration parameter \\(\\kappa\\).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"","code":"circular_sd_error(x, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"N.. Fisher (1993) Statistical Analysis Circular Data, Cambridge University Press. Davis (1986) Statistics data analysis geology. 2nd ed., John Wiley & Sons.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/circular_sd_error.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Standard Error of Mean Direction of Circular Data — circular_sd_error","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) circular_sd_error(finland_stria, axial = FALSE) #> [1] 0.09244732  data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_sd_error(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> [1] 0.01717426"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_summary.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Summary Statistics — circular_summary","title":"Circular Summary Statistics — circular_summary","text":"Circular mean, standard deviation, variance, quasi-quantiles, mode, 95% confidence angle, standardized skewness kurtosis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_summary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Summary Statistics — circular_summary","text":"","code":"circular_summary(x, w = NULL, kappa = 2, axial = TRUE, na.rm = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/circular_summary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Summary Statistics — circular_summary","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. kappa numeric. von Mises distribution concentration parameter used circular mode. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/circular_summary.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Summary Statistics — circular_summary","text":"named vector","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/circular_summary.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Summary Statistics — circular_summary","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_summary(sa.por$azi.PoR) #>            n         mean           sd          var          25% quasi-median  #> 1126.0000000  140.8777709   23.4183183    0.2840287  124.8495460  136.8274701  #>          75%       median         mode        95%CI     skewness     kurtosis  #>  150.2163335  138.9450918   69.9609375    2.6012976   -0.1758456    1.4538046  #>            R  #>    0.7159713  circular_summary(sa.por$azi.PoR, w = 1 / san_andreas$unc) #>            n         mean           sd          var          25% quasi-median  #> 1126.0000000  138.9024850   18.5799867    0.1896731  124.8436061  136.8580836  #>          75%       median         mode        95%CI     skewness     kurtosis  #>  150.2225367  138.9450918   69.9609375    2.0854956   -0.3377921    2.7863614  #>            R  #>    0.8103269"},{"path":"https://tobiste.github.io/tectonicr/reference/compact-grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Compact smoothed stress field — compact-grid","title":"Compact smoothed stress field — compact-grid","text":"Filter smoothed stress field containing range search radii kernel half widths find shortest wavelength (R) least circular sd. dispersion (statistic) coordinate, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact-grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compact smoothed stress field — compact-grid","text":"","code":"compact_grid(x, type = c(\"stress\", \"dispersion\"))  compact_grid2(x, ..., FUN = min)"},{"path":"https://tobiste.github.io/tectonicr/reference/compact-grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compact smoothed stress field — compact-grid","text":"x output stress2grid(), PoR_stress2grid(), stress2grid_stats(), kernel_dispersion() type character. Type grid x. Either \"stress\" (input stress2grid() PoR_stress2grid()) \"dispersion\" (input kernel_dispersion()). ... <tidy-select> One unquoted expression separated commas. Variable names can used positions data frame. Variable must column x. FUN function used aggregate data using search radius R. Default min().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/compact-grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compact smoothed stress field — compact-grid","text":"sf object","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/compact-grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compact smoothed stress field — compact-grid","text":"","code":"data(\"san_andreas\") res <- stress2grid(san_andreas) compact_grid(res) #> Simple feature collection with 60 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.82 ymin: 24.08 xmax: -108.82 ymax: 40.08 #> Geodetic CRS:  WGS 84 #> First 10 features: #>      R     lon   lat        azi        sd   N       mdr              geometry #> 1   50 -108.82 24.08 179.958278 13.812793  22 0.4806675 POINT (-108.82 24.08) #> 2  150 -108.82 26.08   0.197365 11.988758  37 0.8177757 POINT (-108.82 26.08) #> 3  200 -108.82 30.08  26.287607  7.653565   3 0.6026966 POINT (-108.82 30.08) #> 4  150 -108.82 32.08  24.081554  8.001669   4 0.6892362 POINT (-108.82 32.08) #> 5  650 -108.82 34.08  12.153342 21.593028 117 0.8120050 POINT (-108.82 34.08) #> 6  750 -108.82 36.08  12.986820 21.043816 232 0.8404008 POINT (-108.82 36.08) #> 7  200 -108.82 38.08 113.388414 17.129106   6 0.7496858 POINT (-108.82 38.08) #> 8  150 -108.82 40.08 115.231540 12.822209   5 0.7005066 POINT (-108.82 40.08) #> 9  100 -110.82 24.08 158.848279 10.634489   5 0.7525512 POINT (-110.82 24.08) #> 10  50 -110.82 26.08 179.644560  7.063926   9 0.5451022 POINT (-110.82 26.08)  if (FALSE) { # \\dontrun{ res2 <- stress2grid_stats(san_andreas) compact_grid2(res2, var, FUN = min) } # }"},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval around the Mean Direction of Circular Data — confidence","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"Probabilistic limit location true population mean direction, assuming estimation errors normally distributed.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"","code":"confidence_angle(x, conf.level = 0.95, w = NULL, axial = TRUE, na.rm = TRUE)  confidence_interval(x, conf.level = 0.95, w = NULL, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"x numeric vector. Values degrees. conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"Angle degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"confidence angle gives interval, .e. plus minus confidence angle, around mean direction particular sample, contains true mean direction given level confidence.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"Davis (1986) Statistics data analysis geology. 2nd ed., John Wiley & Sons. Jammalamadaka, S. Rao Sengupta, . (2001). Topics Circular Statistics, Sections 3.3.3 3.4.1, World Scientific Press, Singapore.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/confidence.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval around the Mean Direction of Circular Data — confidence","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) confidence_angle(finland_stria, axial = FALSE) #> [1] 10.43928 confidence_interval(finland_stria, axial = FALSE) #> $mu #> [1] 129.1903 #>  #> $conf.angle #> [1] 10.43928 #>  #> $conf.interval #> [1] 118.7510 139.6296 #>   data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") confidence_angle(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> [1] 3.857987 confidence_interval(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> $mu #> [1] 138.9025 #>  #> $conf.angle #> [1] 3.857987 #>  #> $conf.interval #> [1] 135.0445 142.7605 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/confidence_interval_fisher.html","id":null,"dir":"Reference","previous_headings":"","what":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","title":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","text":"large samples (n >=25) performs parametric estimate based sample_circular_dispersion(). smaller size samples, returns bootstrap estimate.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence_interval_fisher.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","text":"","code":"confidence_interval_fisher(   x,   conf.level = 0.95,   w = NULL,   axial = TRUE,   na.rm = TRUE,   boot = FALSE,   R = 1000L,   quiet = FALSE )"},{"path":"https://tobiste.github.io/tectonicr/reference/confidence_interval_fisher.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","text":"x numeric vector. Values degrees. conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds. boot logical. Force bootstrap estimation R integer. number bootstrap replicates quiet logical. Prints used estimation (parametric bootstrap).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence_interval_fisher.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","text":"list","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence_interval_fisher.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","text":"N.. Fisher (1993) Statistical Analysis Circular Data, Cambridge University Press.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/confidence_interval_fisher.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Confidence Interval around the Mean Direction of Circular Data after Fisher (1993) — confidence_interval_fisher","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) confidence_interval_fisher(finland_stria, axial = FALSE) #> Parametric estimate #> $mu #> [1] 129.1903 #>  #> $conf.angle #> [1] 10.20306 #>  #> $conf.interval #> [1] 118.9872 139.3933 #>  confidence_interval_fisher(finland_stria, axial = FALSE, boot = TRUE) #> Bootstrap estimate based on 1000 replicates #> $mu #> [1] 129.2051 #>  #> $conf.angle #> [1] 5.916165 #>  #> $conf.interval #> [1] 123.1004 135.4118 #>   data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") confidence_interval_fisher(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> Parametric estimate #> $mu #> [1] 138.9025 #>  #> $conf.angle #> [1] 2.085496 #>  #> $conf.interval #> [1] 136.817 140.988 #>  confidence_interval_fisher(sa.por$azi.PoR, w = 1 / san_andreas$unc, boot = TRUE) #> Bootstrap estimate based on 1000 replicates #> $mu #> [1] 140.8648 #>  #> $conf.angle #> [1] 0.483657 #>  #> $conf.interval #> [1] 140.3642 141.3747 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Conjugation of a Quaternion — conjugate_Q4","title":"Conjugation of a Quaternion — conjugate_Q4","text":"Inverse rotation given conjugated quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conjugation of a Quaternion — conjugate_Q4","text":"","code":"conjugate_Q4(q, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conjugation of a Quaternion — conjugate_Q4","text":"q object class \"quaternion\" normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/conjugate_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conjugation of a Quaternion — conjugate_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Correction — coordinate_mod","title":"Coordinate Correction — coordinate_mod","text":"Corrects longitudes latitudes value -180.0 180.0 -90 90 degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(x)  latitude_modulo(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Correction — coordinate_mod","text":"x Longitude(s) latitude(s) degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Correction — coordinate_mod","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinate_mod.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Correction — coordinate_mod","text":"","code":"longitude_modulo(-361 + 5 * 360) #> [1] -1 latitude_modulo(-91 + 5 * 180) #> [1] 89"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates","title":"Coordinate Transformations — coordinates","text":"Converts vector Cartesian geographical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates","text":"","code":"cartesian_to_geographical(n)  geographical_to_cartesian(p)  geographical_to_spherical(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates","text":"n Cartesian coordinates (x, y, z) vector p Geographical coordinates (latitude, longitude) vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates","text":"","code":"n <- c(1, -2, 3) cartesian_to_geographical(n) #> [1]  53.30077 -63.43495 p <- c(50, 10) geographical_to_cartesian(p) #> [1] 0.6330222 0.1116189 0.7660444"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":null,"dir":"Reference","previous_headings":"","what":"Coordinate Transformations — coordinates2","title":"Coordinate Transformations — coordinates2","text":"Converts vector Cartesian spherical coordinate systems","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Coordinate Transformations — coordinates2","text":"","code":"cartesian_to_spherical(n)  spherical_to_cartesian(p)  spherical_to_geographical(p)"},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Coordinate Transformations — coordinates2","text":"n Cartesian coordinates (x, y, z) three-column vector p Spherical coordinates (colatitude, azimuth) two-column vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Coordinate Transformations — coordinates2","text":"Functions return (2- 3-dimensional) vector representing point requested coordinate system.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/coordinates2.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Coordinate Transformations — coordinates2","text":"","code":"n <- c(1, -2, 3) cartesian_to_spherical(n) #> [1]  36.69923 -63.43495 p <- c(50, 10) spherical_to_cartesian(p) #> [1] 0.7544065 0.1330222 0.6427876"},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — cpm_models","title":"Global model of current plate motions — cpm_models","text":"Compilation global models current plate motions, including NUVEL1 (DeMets et al. 1990), NNR-NUVEL1A (DeMets et al., 1990), NNR-MORVEL56 (Argus et al., 2011), REVEL (Sella et al., 2002), GSRM2.1 (Kreemer et al., 2014), HS2-NUVEL1 (Gripp Gordon, 1990), HS3-NUVEL1A (Gripp Gordon, 2002), P073 (Chase 1978), AM1-2 (Minster Jordan, 1978), ITRF2020-PPM (Altamimi et al. 2023), PB2002 (Bird, 2003)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — cpm_models","text":"","code":"data('cpm_models')"},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — cpm_models","text":"list containing objects class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Pole Rotation angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative  plate.fix model Model current global plate motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — cpm_models","text":"Altamimi, Z., Métivier, L., Rebischung, P., Collilieux, X., Chanard, K., Barnéoud, J., 2023. ITRF2020 Plate Motion Model. Geophys. Res. Lett. 50, 1–7. doi:10.1029/2023GL106373 Argus, D.F., Gordon, R.G., 1991. -net-rotation model current plate velocities incorporating plate motion model NUVEL-1. Geophys. Res. Lett. 18, 2039–2042. doi: 10.1029/91GL01532 Argus, D. F., Gordon, R. G., & DeMets, C. (2011). Geologically current motion 56 plates relative -net-rotation reference frame. Geochemistry, Geophysics, Geosystems, 12(11). 10.1029/2011GC003751. Chase, C.G. (1978). Plate kinematics: Americas, East Africa, rest world. Earth Planet. Sci. Lett. 37, 355–368. doi: doi:10.1016/0012-821X(78)90051-1 Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3. DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x . Gripp, . E., & Gordon, R. G. (2002). Young tracks hotspots current plate velocities. Geophysical Journal International, 150(2), 321<U+2013>361. doi:10.1046/j.1365-246X.2002.01627.x . Kreemer, C., Blewitt, G., & Klein, E. C. (2014). geodetic plate motion Global Strain Rate Model. Geochemistry, Geophysics, Geosystems, 15(10), 3849<U+2013>3889. doi: 10.1002/2014GC005407. Minster, J. Jorda, T. (1978). Present-day plate motions. Journal Geophysical Research, 83, doi:10.1029/jb083ib11p05331 . Sella, G. F., Dixon, T. H., & Mao, . (2002). REVEL: model Recent plate velocities space geodesy. Journal Geophysical Research: Solid Earth, 107(B4). doi: 10.1029/2000jb000033.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/cpm_models.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — cpm_models","text":"","code":"data(\"cpm_models\") head(cpm_models[[1]]) #> # A tibble: 6 × 7 #>   plate.name plate.rot     lon   lat angle plate.fix model #>   <chr>      <chr>       <dbl> <dbl> <dbl> <chr>     <chr> #> 1 Africa     af         -21.8   18.8 0.139 hs        AM1-2 #> 2 Antarctica an          75.6   21.8 0.054 hs        AM1-2 #> 3 Arabia     ar          -3.94  27.3 0.388 hs        AM1-2 #> 4 Carribbean cb          66.8  -42.8 0.129 hs        AM1-2 #> 5 Cocos      co        -116.    21.9 1.42  hs        AM1-2 #> 6 Eurasia    eu         -23.2    0.7 0.038 hs        AM1-2"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Angle Between Two Directions — deviation_norm","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Normalizes angle two directions acute angle , .e. angles 0 90\\(^\\circ\\)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(x, y = NULL)"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Angle Between Two Directions — deviation_norm","text":"x, y Minuend subtrahend. numeric vectors angles degrees. y missing, treats x difference. , length subtrahend y either 1 equal length(x).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize Angle Between Two Directions — deviation_norm","text":"numeric vector, acute angles two directions, .e. values 0 90\\(^\\circ\\)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Normalize Angle Between Two Directions — deviation_norm","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_norm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalize Angle Between Two Directions — deviation_norm","text":"","code":"deviation_norm(175, 5) #> [1] 10 deviation_norm(c(175, 95, 0), c(5, 85, NA)) #> [1] 10 10 NA deviation_norm(c(-5, 85, 95, 175, 185, 265, 275, 355, 365)) #> [1]  5 85 85  5  5 85 85  5  5"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"Calculate angular difference observed modeled direction maximum horizontal stresses (\\(\\sigma_{Hmax}\\)) along great circles, small circles, loxodromes relative plate motion's Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"","code":"deviation_shmax(prd, obs)"},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"prd data.frame containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"object class data.frame dev.gc Deviation observed stress modeled \\(\\sigma_{Hmax}\\) following great circles dev.sc Small circles dev.ld.cw Clockwise loxodromes dev.ld.ccw Counter-clockwise loxodromes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/deviation_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deviation of Observed and Predicted Directions of Maximum Horizontal Stress — deviation_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we want to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  prd <- model_shmax(point, PoR) deviation_shmax(prd, obs = 90) #>     dev.gc    dev.sc dev.ld.cw dev.ld.ccw #> 1 42.45436 -47.54564  87.45436  -2.545636"},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Distance and Dispersion — dispersion","title":"Circular Distance and Dispersion — dispersion","text":"Circular distance two angles circular dispersion angles specified angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Distance and Dispersion — dispersion","text":"","code":"circular_distance(x, y, axial = TRUE, na.rm = TRUE)  circular_dispersion(   x,   y = NULL,   w = NULL,   w.y = NULL,   norm = FALSE,   axial = TRUE,   na.rm = TRUE )  circular_distance_alt(x, y, axial = TRUE, na.rm = TRUE)  circular_dispersion_alt(   x,   y = NULL,   w = NULL,   w.y = NULL,   norm = FALSE,   axial = TRUE,   na.rm = TRUE )"},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Distance and Dispersion — dispersion","text":"x, y vectors numeric values degrees. length(y) either 1 length(x) axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical. Whether NA values x stripped computation proceeds. w, w.y (optional) Weights. vector positive numbers length x. w.y (optional) weight y. norm logical. Whether dispersion normalized maximum possible angular difference.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Distance and Dispersion — dispersion","text":"circular_distancereturns numeric vector positive numbers, circular_dispersionreturns positive number.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Circular Distance and Dispersion — dispersion","text":"circular_distance_alt() circular_dispersion_alt() alternative versions Mardia Jupp (2000), pp. 19-20. alternative dispersion minimum sample median.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Circular Distance and Dispersion — dispersion","text":"y NULL, circular variance returned.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular Distance and Dispersion — dispersion","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press. Mardia, K.V., Jupp, P.E (1999). Directional Statistics, Wiley Series Probability Statistics. John Wiley & Sons, Inc., Hoboken, NJ, USA. doi:10.1002/9780470316979","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Distance and Dispersion — dispersion","text":"","code":"a <- c(0, 2, 359, 6, 354) circular_distance(a, 10) # distance to single value #> [1] 0.030153690 0.019369152 0.036408073 0.004865966 0.075975952  b <- a + 90 circular_distance(a, b) # distance to multiple values #> [1] 1 1 1 1 1  data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") circular_dispersion(sa.por$azi.PoR, y = 135) #> [1] 0.1495228 circular_dispersion(sa.por$azi.PoR, y = 135, w = 1 / san_andreas$unc) #> [1] 0.09858997"},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance between points — dist_greatcircle","title":"Distance between points — dist_greatcircle","text":"Returns great circle distance location grid point km","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance between points — dist_greatcircle","text":"","code":"dist_greatcircle(   lat1,   lon1,   lat2,   lon2,   r = earth_radius(),   method = c(\"haversine\", \"orthodrome\", \"vincenty\", \"euclidean\") )"},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance between points — dist_greatcircle","text":"lat1, lon1 numeric vector. coordinate point(s) 1 (degrees). lat2, lon2 numeric vector. coordinates point(s) 2 (degrees). r numeric. radius sphere (default = 6371.0087714 km, .e. radius Earth) method Character. Formula calculating great circle distance, one : \"haversine\" great circle distance based haversine formula optimized 64-bit floating-point numbers (default) \"orthodrome\" great circle distance based spherical law cosines \"vincenty\" distance based Vincenty formula ellipsoid equal major minor axes \"euclidean\" Euclidean distance (great circle distance!)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance between points — dist_greatcircle","text":"numeric vector length equal length(lat1)","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/dist_greatcircle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance between points — dist_greatcircle","text":"","code":"dist_greatcircle(lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32)) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"orthodrome\" ) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"vincenty\" ) #> [1] 4149.157 2296.583 dist_greatcircle(   lat1 = 20, lon1 = 12, lat2 = c(50, 30), lon2 = c(40, 32),   method = \"euclidean\" ) #> [1] 4076.220 2284.169"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":null,"dir":"Reference","previous_headings":"","what":"Distance from plate boundary — distance_from_pb","title":"Distance from plate boundary — distance_from_pb","text":"Absolute distance data points nearest plate boundary degree","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Distance from plate boundary — distance_from_pb","text":"","code":"distance_from_pb(x, PoR, pb, tangential = FALSE, km = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Distance from plate boundary — distance_from_pb","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Pole Rotation tangential Logical. Whether plate boundary tangential boundary (TRUE) inward outward boundary (FALSE, default). km Logical. Whether distance expressed kilometers (TRUE) degrees (FALSE, default). ... optional arguments passed smoothr::densify()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Distance from plate boundary — distance_from_pb","text":"Numeric vector great circle distances","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Distance from plate boundary — distance_from_pb","text":"distance plate boundary longitudinal latitudinal difference data point plate boundary (along closest latitude longitude) inward/outward tangential plate boundaries, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Distance from plate boundary — distance_from_pb","text":"Wdowinski, S. (1998). theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103(3), 5037<U+2013>5059. http://dx.doi.org/10.1029/97JB03390","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_from_pb.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Distance from plate boundary — distance_from_pb","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- distance_from_pb(   x = san_andreas, PoR = na_pa, pb = plate_boundary, tangential = TRUE ) head(res) #> [1] -2.446542 -2.751949 -2.705483 -3.162091 -4.988116 -6.358818  res.km <- distance_from_pb(   x = san_andreas, PoR = na_pa, pb = plate_boundary, tangential = TRUE, km = TRUE ) range(res.km) #> [1] -1025.9419   597.3071"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize angular distance on a sphere distance — distance_mod","title":"Normalize angular distance on a sphere distance — distance_mod","text":"Helper function express angular distance sphere range 0 180 degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize angular distance on a sphere distance — distance_mod","text":"","code":"distance_mod(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize angular distance on a sphere distance — distance_mod","text":"x numeric, angular distance (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/distance_mod.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalize angular distance on a sphere distance — distance_mod","text":"numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Stress Dummy Grid — dummy","title":"Plate Stress Dummy Grid — dummy","text":"Helper functions create dummy grid small circles, great circles, loxodromes Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Stress Dummy Grid — dummy","text":"","code":"smallcircle_dummy(n)  greatcircle_dummy(n)  loxodrome_dummy(n, angle, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plate Stress Dummy Grid — dummy","text":"n Number curves angle Direction loxodromes (degree) cw logical. Sense loxodromes: TRUE clockwise loxodromes (right-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (left-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/dummy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plate Stress Dummy Grid — dummy","text":"data.frame","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":null,"dir":"Reference","previous_headings":"","what":"Earth's radius in km — earth_radius","title":"Earth's radius in km — earth_radius","text":"IERS mean radius Earth km (based WGS 84)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Earth's radius in km — earth_radius","text":"","code":"earth_radius()"},{"path":"https://tobiste.github.io/tectonicr/reference/earth_radius.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Earth's radius in km — earth_radius","text":"numeric value","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Equivalent rotation — equivalent_rotation","title":"Equivalent rotation — equivalent_rotation","text":"Transforms sequence rotations new reference system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Equivalent rotation — equivalent_rotation","text":"","code":"equivalent_rotation(x, fixed, rot)"},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Equivalent rotation — equivalent_rotation","text":"x Object class \"data.frame\" containing Euler poles plate rotations: plate.rot Moving plate lat, lon coordinates Euler pole angle Angle rotation plate.fix Fixed plate fixed plate regarded fixed. one x$plate.fix rot (optional) plate regarded rotating. one x$plate.rot.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Equivalent rotation — equivalent_rotation","text":"sequence plate rotations new reference system. object class x","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/equivalent_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Equivalent rotation — equivalent_rotation","text":"","code":"data(nuvel1) # load the NUVEL1 rotation parameters  # all nuvel1 rotation equivalent to fixed Africa: equivalent_rotation(nuvel1, fixed = \"af\") #>    plate.rot        lat        lon     angle plate.fix #> af        af  90.000000    0.00000 0.0000000        af #> an        an  -5.729623  141.14853 0.1330674        af #> ar        ar  24.358850   24.41733 0.4163188        af #> au        au  12.575099   50.25300 0.6604014        af #> ca        ca -64.951860 -164.64172 0.1551761        af #> co        co  17.709052 -121.08039 1.3658002        af #> eu        eu -21.224307  159.74610 0.1283940        af #> in        in  23.801567   28.95037 0.4299189        af #> nz        nz  43.352648 -113.62807 0.4948982        af #> na        na -79.039887 -140.84695 0.2489005        af #> sa        sa -62.620310  140.61897 0.3237372        af #> jf        jf -36.503136   69.97118 0.8851710        af #> ph        ph -54.222891  -24.76214 1.0236334        af #> pa        pa -59.160000  106.82600 0.9695000        af # relative plate motion between Eurasia and India: equivalent_rotation(nuvel1, \"eu\", \"in\") #>    plate.rot      lat      lon     angle plate.fix #> in        in 24.57682 18.07207 0.5281698        eu"},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":null,"dir":"Reference","previous_headings":"","what":"Concentration parameter of von Mises distribution — est.kappa","title":"Concentration parameter of von Mises distribution — est.kappa","text":"Computes maximum likelihood estimate \\(\\kappa\\), concentration parameter von Mises distribution, given set angular measurements.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Concentration parameter of von Mises distribution — est.kappa","text":"","code":"est.kappa(x, w = NULL, bias = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Concentration parameter of von Mises distribution — est.kappa","text":"x numeric. angles degrees w numeric. weightings bias logical parameter determining whether bias correction used computation MLE. Default bias FALSE bias correction. ... optional parameters passed circular_mean()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Concentration parameter of von Mises distribution — est.kappa","text":"numeric.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/est.kappa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Concentration parameter of von Mises distribution — est.kappa","text":"","code":"est.kappa(rvm(100, 90, 10), w = 1 / runif(100, 0, 10)) #> [1] 8.848859"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":null,"dir":"Reference","previous_headings":"","what":"Euler pole object — euler_pole","title":"Euler pole object — euler_pole","text":"Creates object orientation Euler pole axis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(x, y, z = NA, geo = TRUE, angle = NA)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Euler pole object — euler_pole","text":"x latitude x coordinate Euler pole axis y longitude y z z coordinate geo logical, TRUE (default) Euler pole axis given geographical coordinates (latitude, longitude). FALSE given Cartesian coordinates (x, y, z) angle (optional) Angle rotation degrees (CCW rotation angle positive)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Euler pole object — euler_pole","text":"object class \"euler.pole\" containing Euler pole axis geographical Cartesian coordinates angle rotation radians.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_pole.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Euler pole object — euler_pole","text":"","code":"euler_pole(90, 0, angle = 45) #>   lat lon x y z     angle #> 1  90   0 0 0 1 0.7853982 euler_pole(0, 0, 1, geo = FALSE) #>   lat lon x y z angle #> 1  90   0 0 0 1    NA"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"Quaternion Euler angle-axis representation rotations","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"","code":"euler_to_Q4(x, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"x \"euler.pole\" object normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/euler_to_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quaternion from Euler angle-axis representation for rotations — euler_to_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Azimuth Between two Points — get_azimuth","title":"Azimuth Between two Points — get_azimuth","text":"Calculate initial bearing (forward azimuth/direction) go point point b following great circle arc sphere.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Azimuth Between two Points — get_azimuth","text":"","code":"get_azimuth(lat_a, lon_a, lat_b, lon_b)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Azimuth Between two Points — get_azimuth","text":"lat_a, lat_b Numeric. Latitudes b (degrees). lon_a, lon_b Numeric. Longitudes b (degrees).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Azimuth Between two Points — get_azimuth","text":"numeric. Azimuth degrees","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Azimuth Between two Points — get_azimuth","text":"get_azimuth() based spherical law tangents. formula initial bearing (sometimes referred forward azimuth) followed straight line along great circle arc lead start point end point b. $$\\theta = \\arctan2 (\\sin \\Delta\\lambda \\cos\\psi_2, \\cos\\psi_1 \\sin\\psi_1-\\sin\\psi_1 \\cos\\psi_2 \\cos\\Delta\\lambda)$$  \\(\\psi_1, \\lambda_1\\) start point, \\(\\psi_2\\), \\(\\lambda_2\\) end point (\\(\\Delta\\lambda\\) difference longitude).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Azimuth Between two Points — get_azimuth","text":"http://www.movable-type.co.uk/scripts/latlong.html","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Azimuth Between two Points — get_azimuth","text":"","code":"berlin <- c(52.517, 13.4) # Berlin tokyo <- c(35.7, 139.767) # Tokyo get_azimuth(berlin[1], berlin[2], tokyo[1], tokyo[2]) #> [1] 41.57361"},{"path":"https://tobiste.github.io/tectonicr/reference/get_distance.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to Distance from plate boundary — get_distance","title":"Helper function to Distance from plate boundary — get_distance","text":"Helper function Distance plate boundary","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_distance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to Distance from plate boundary — get_distance","text":"","code":"get_distance(lon, lat, pb.coords, tangential, km)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_distance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to Distance from plate boundary — get_distance","text":"lon, lat numeric vectors pb.coords matrix tangential, km logical","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/get_projected_pb_strike.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to get Distance from plate boundary — get_projected_pb_strike","title":"Helper function to get Distance from plate boundary — get_projected_pb_strike","text":"Helper function get Distance plate boundary","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_projected_pb_strike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to get Distance from plate boundary — get_projected_pb_strike","text":"","code":"get_projected_pb_strike(lon, lat, pb.coords, pb.bearing, tangential)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_projected_pb_strike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to get Distance from plate boundary — get_projected_pb_strike","text":"lon, lat, pb.bearing numeric vectors pb.coords matrix tangential logical","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/get_relrot.html","id":null,"dir":"Reference","previous_headings":"","what":"Helper function to Equivalent rotation — get_relrot","title":"Helper function to Equivalent rotation — get_relrot","text":"Helper function Equivalent rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/get_relrot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Helper function to Equivalent rotation — get_relrot","text":"","code":"get_relrot(plate.rot, lat, lon, angle, fixed, fixed.ep)"},{"path":"https://tobiste.github.io/tectonicr/reference/get_relrot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Helper function to Equivalent rotation — get_relrot","text":"plate.rot, fixed character numeric lat, lon, angle numeric fixed.ep data.frame","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":null,"dir":"Reference","previous_headings":"","what":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"Download WSM2016 database GFZ sever applies optional filters. destdir specified, data can reloaded later R session using load_WSM2016() using arguments.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"","code":"download_WSM2016(destdir = tempdir(), load = TRUE, ...)  load_WSM2016(   file,   quality = c(\"A\", \"B\", \"C\", \"D\", \"E\"),   lat_range = c(-90, 90),   lon_range = c(-180, 180),   depth_range = c(-Inf, Inf),   method = c(\"BO\", \"BOC\", \"BOT\", \"BS\", \"DIF\", \"FMA\", \"FMF\", \"FMS\", \"GFI\", \"GFM\", \"GFS\",     \"GVA\", \"HF\", \"HFG\", \"HFM\", \"HFP\", \"OC\", \"PC\", \"SWB\", \"SWL\", \"SWS\"),   regime = c(\"N\", \"NS\", \"T\", \"TS\", \"S\", NA) )"},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"https://datapub.gfz-potsdam.de/download/10.5880.WSM.2016.001/wsm2016.csv","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"destdir save files, defaults base::tempdir(), base::getwd() also possible. load TRUE load dataset R, FALSE return file name downloaded object. ... (optional) arguments passed load_WSM2016() file name file data read . quality character vectors containing quality levels included. Includes quality ranks (-E) default. lat_range, lon_range two-element numeric vectors giving range latitudes longitudes (degrees). depth_range two-element numeric vectors giving depth interval (km) method character vectors containing methods stress inversion included. Includes methods default. See WSM2016 manual used acronyms. regime character vectors containing stress regimes included. Acronyms: \"N\" - normal, \"T\" - thrust, \"S\" - strike-slip, \"NS\" - oblique normal, \"TS\" - oblique thrust, NA - unknown faulting","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"sf object parsed numeric uncertainty (unc) based reported standard deviation quality rank. load=FALSE, path downloaded file returned.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"R-compatibility easy readability reasons, downloaded dataset modified version original, WSM server version: column names changed uppercase (original dataset) lowercase characters. Unknown azimuth values represented NA values instead 999 original. Unknown regimes represented NA instead \"U\" original.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. M<U+00FC>ller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484-498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/import_WSM2016.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"World Stress Map Database (WSM) Release 2016 — import_WSM2016","text":"","code":"if (FALSE) { # \\dontrun{ download_WSM2016(   quality = c(\"A\", \"B\", \"C\"), lat_range = c(51, 72),   lon_range = c(-180, -130), depth_range = c(0, 10), method = \"FMS\" ) } # }"},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is quaternion — is.Q4","title":"Check if object is quaternion — is.Q4","text":"Check object quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is quaternion — is.Q4","text":"","code":"is.Q4(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is quaternion — is.Q4","text":"x object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is quaternion — is.Q4","text":"logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if object is euler.pole — is.euler","title":"Check if object is euler.pole — is.euler","text":"Check object euler.pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if object is euler.pole — is.euler","text":"","code":"is.euler(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if object is euler.pole — is.euler","text":"x object class \"euler.pole\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/is.euler.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if object is euler.pole — is.euler","text":"logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":null,"dir":"Reference","previous_headings":"","what":"Adaptive Kernel Dispersion — kernel_dispersion","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"Stress field wavelength analysis using circular dispersion (statistical estimators dispersion)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"","code":"kernel_dispersion(   x,   stat = c(\"dispersion\", \"nchisq\", \"rayleigh\"),   grid = NULL,   lon_range = NULL,   lat_range = NULL,   gridsize = 2.5,   min_data = 3,   threshold = 1,   arte_thres = 200,   dist_threshold = 0.1,   R_range = seq(100, 2000, 100),   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"x sf object containing azi Azimuth degree unc Uncertainties azimuth degree prd Predicted value azimuth stat measurement dispersion calculated. Either \"dispersion\" (default), \"nchisq\", \"rayleigh\" circular dispersion, normalized Chi-squared test statistic, Rayleigh test statistic. grid (optional) Point object class sf. lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes (ignored \"grid\" specified). gridsize Numeric. Target spacing regular grid decimal degree. Default 2.5. (ignored \"grid\" specified) min_data Integer. Minimum number data per bin. Default 3 threshold Numeric. Threshold stat value (default 1) arte_thres Numeric. Maximum distance (km) grid point next data point. Default 200 dist_threshold Numeric. Distance weight prevent overweight data nearby (0 1). Default 0.1 R_range Numeric value vector specifying (adaptive) kernel half-width(s) search radius (km). Default seq(50, 1000, 50) ... optional arguments dist_greatcircle()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"sf object containing lon,lat longitude latitude degree stat output function defined stat R rearch radius km. mdr Mean distance datapoints per search radius N Number data points search radius","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/kernel_dispersion.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adaptive Kernel Dispersion — kernel_dispersion","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas_por <- san_andreas san_andreas_por$azi <- PoR_shmax(san_andreas, PoR, \"right\")$azi.PoR san_andreas_por$prd <- 135 kernel_dispersion(san_andreas_por) #> Simple feature collection with 800 features and 6 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.57 ymin: 24.33 xmax: -107.07 ymax: 39.33 #> Geodetic CRS:  WGS 84 #> # A tibble: 800 × 7 #>      lon   lat    stat     R     N    mdr        geometry #>  * <dbl> <dbl>   <dbl> <dbl> <int>  <dbl>     <POINT [°]> #>  1 -115.  24.3 NA        100     0 NA     (-114.57 24.33) #>  2 -115.  24.3 NA        200     1 NA     (-114.57 24.33) #>  3 -115.  24.3  0.230    300     4  0.743 (-114.57 24.33) #>  4 -115.  24.3  0.111    400    18  0.816 (-114.57 24.33) #>  5 -115.  24.3  0.0774   500   109  0.878 (-114.57 24.33) #>  6 -115.  24.3  0.0717   600   175  0.801 (-114.57 24.33) #>  7 -115.  24.3  0.0728   700   206  0.723 (-114.57 24.33) #>  8 -115.  24.3  0.0733   800   212  0.641 (-114.57 24.33) #>  9 -115.  24.3  0.0749   900   236  0.609 (-114.57 24.33) #> 10 -115.  24.3  0.0646  1000   306  0.642 (-114.57 24.33) #> # ℹ 790 more rows"},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Kuiper Test of Circular Uniformity — kuiper_test","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"Kuiper's test statistic rotation-invariant Kolmogorov-type test statistic. critical values modified Kuiper's test statistic used according tabulation given Stephens (1970).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"","code":"kuiper_test(x, alpha = 0, axial = TRUE, quiet = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"x numeric vector containing circular data expressed degrees alpha Significance level test. Valid levels 0.01, 0.05, 0.1. argument may omitted (NULL, default), case, range p-value returned. axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) circular, .e. \\(2 \\pi\\)-periodical (FALSE). quiet logical. Prints test's decision.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"list containing test statistic statistic significance level p.value.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"statistic > p.value, null hypothesis rejected. , randomness (uniform distribution) excluded.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/kuiper_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Kuiper Test of Circular Uniformity — kuiper_test","text":"","code":"# Example data from Mardia and Jupp (2001), pp. 93 pidgeon_homing <- c(55, 60, 65, 95, 100, 110, 260, 275, 285, 295) kuiper_test(pidgeon_homing, alpha = .05) #> Reject Null Hypothesis #> $statistic #> [1] 2.262115 #>  #> $p.value #> [1] 1.747 #>   # San Andreas Fault Data: data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") kuiper_test(sa.por$azi.PoR, alpha = .05) #> Reject Null Hypothesis #> $statistic #> [1] 16.60463 #>  #> $p.value #> [1] 1.747 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract azimuths of line segments — line_azimuth","title":"Extract azimuths of line segments — line_azimuth","text":"Extract azimuths line segments","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract azimuths of line segments — line_azimuth","text":"","code":"line_azimuth(x, warn = TRUE)  lines_azimuths(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract azimuths of line segments — line_azimuth","text":"x sf object type \"LINESTRING\" \"MULTILINESTRING\" warn logical; TRUE, warn \"MULTILINESTRING\" (default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract azimuths of line segments — line_azimuth","text":"sf object type \"POINT\" columns entries first row x","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Extract azimuths of line segments — line_azimuth","text":"recommended perform line_azimuth() single line objects, .e. type \"LINESTRING\", instead \"MULTILINESTRING\". azimuth last point line calculated first point next line otherwise. cause warning message (warn = TRUE). \"MULTILINESTRING\" objects, use lines_azimuths().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/line_azimuth.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract azimuths of line segments — line_azimuth","text":"","code":"data(\"plates\") subset(plates, pair == \"af-eu\") |>   smoothr::densify() |>   line_azimuth() #> Warning: MULTILINESTRING object is not recommended #> Simple feature collection with 1861 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -29.7698 ymin: 33.985 xmax: 20.3001 ymax: 39.412 #> Geodetic CRS:  WGS 84 #> First 10 features: #>         azi  pair plateA plateB       type displacement             name  nameA #> 1  95.69929 af-eu     af     eu convergent           in af-eu_convergent Africa #> 2  95.69906 af-eu     af     eu convergent           in af-eu_convergent Africa #> 3  95.69883 af-eu     af     eu convergent           in af-eu_convergent Africa #> 4  95.69861 af-eu     af     eu convergent           in af-eu_convergent Africa #> 5  95.69838 af-eu     af     eu convergent           in af-eu_convergent Africa #> 6  95.69815 af-eu     af     eu convergent           in af-eu_convergent Africa #> 7  95.69793 af-eu     af     eu convergent           in af-eu_convergent Africa #> 8  95.69770 af-eu     af     eu convergent           in af-eu_convergent Africa #> 9  95.69747 af-eu     af     eu convergent           in af-eu_convergent Africa #> 10 95.69725 af-eu     af     eu convergent           in af-eu_convergent Africa #>      nameB                   geometry #> 1  Eurasia   POINT (-5.80797 34.0191) #> 2  Eurasia POINT (-5.766831 34.01569) #> 3  Eurasia POINT (-5.725692 34.01228) #> 4  Eurasia POINT (-5.684553 34.00887) #> 5  Eurasia POINT (-5.643414 34.00546) #> 6  Eurasia POINT (-5.602275 34.00205) #> 7  Eurasia POINT (-5.561136 33.99864) #> 8  Eurasia POINT (-5.519997 33.99523) #> 9  Eurasia POINT (-5.478858 33.99182) #> 10 Eurasia POINT (-5.437719 33.98841)  if (FALSE) { # \\dontrun{ lines_azimuths(plates) } # }"},{"path":"https://tobiste.github.io/tectonicr/reference/mean_SC.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Cosine and Sine — mean_SC","title":"Mean Cosine and Sine — mean_SC","text":"Mean Cosine Sine","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_SC.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Cosine and Sine — mean_SC","text":"","code":"mean_SC(x, w = NULL, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/mean_SC.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Cosine and Sine — mean_SC","text":"x angles degrees w weightings na.rm logical","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_SC.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Cosine and Sine — mean_SC","text":"named two element vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_SC.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Cosine and Sine — mean_SC","text":"","code":"if (FALSE) { # \\dontrun{ x <- rvm(100, 0, 5) mean_SC(x) } # }"},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Resultant Length — mean_resultant_length","title":"Mean Resultant Length — mean_resultant_length","text":"Measure spread around circle. noted : R=0, data completely spread around circle. R=1, data completely concentrated one point.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Resultant Length — mean_resultant_length","text":"","code":"mean_resultant_length(x, w = NULL, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Resultant Length — mean_resultant_length","text":"x numeric vector. Values degrees, mean, median standard deviation required. w (optional) Weights. vector positive numbers, length x. na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Resultant Length — mean_resultant_length","text":"numeric.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Mean Resultant Length — mean_resultant_length","text":"Mardia, K.V. (1972). Statistics Directional Data: Probability Mathematical Statistics. London: Academic Press.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/mean_resultant_length.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Mean Resultant Length — mean_resultant_length","text":"","code":"# Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) mean_resultant_length(finland_stria, w = NULL, na.rm = FALSE) # 0.800 #> [1] 0.8003694"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"Models direction maximum horizontal stress \\(\\sigma_{Hmax}\\) along great circles, small circles, loxodromes given point points according relative plate motion geographical coordinate reference system.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"","code":"model_shmax(df, euler)"},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"df data.frame containing coordinates point(s) (lat, lon). euler \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"data.frame gc Azimuth modeled \\(\\sigma_{Hmax}\\) following great circles sc Small circles ld.cw Clockwise loxodromes ld.ccw Counter-clockwise loxodromes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"\\(\\sigma_{Hmax}\\) following great circles (initial) bearing given point pole relative plate motion. \\(\\sigma_{Hmax}\\) along small circles, clockwise, counter-clockwise loxodromes 90\\(^{\\circ}\\), +45\\(^{\\circ}\\), 135\\(^{\\circ}\\) (-45\\(^{\\circ}\\)) great circle bearing, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023). doi:10.1038/s41598-023-42433-2 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/model_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Direction of Maximum Horizontal Stress in the geographical reference system. — model_shmax","text":"","code":"data(\"nuvel1\") # North America relative to Pacific plate: euler <- subset(nuvel1, nuvel1$plate.rot == \"na\")  # the point where we mant to model the SHmax direction: point <- data.frame(lat = 45, lon = 20)  model_shmax(point, euler) #>         sc   ld.ccw       gc    ld.cw #> 1 42.45436 87.45436 132.4544 177.4544"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalized Chi-Squared Test for Circular Data — norm_chisq","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"quantitative comparison predicted observed directions \\(\\sigma_{Hmax}\\) obtained calculation average azimuth normalized \\(\\chi^2\\) test.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"","code":"norm_chisq(obs, prd, unc)"},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd prd Numeric vector containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() unc Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"Numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"normalized \\(\\chi^2\\) test $$ {Norm} \\chi^2_i =  = \\frac{    \\sum^M_{= 1} \\left( \\frac{\\alpha_i - \\alpha_{{predict}}}{\\sigma_i}    \\right) ^2}    {\\sum^M_{= 1} \\left( \\frac{90}{\\sigma_i} \\right) ^2 }$$ value chi-squared test statistic number 0 1 indicating quality predicted \\(\\sigma_{Hmax}\\) directions. Low values (\\(\\le 0.15\\)) indicate good agreement, high values (\\(> 0.7\\)) indicate systematic misfit predicted observed \\(\\sigma_{Hmax}\\) directions.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"Wdowinski, S., 1998, theory intraplate tectonics. Journal Geophysical Research: Solid Earth, 103, 5037-5059, doi: 10.1029/97JB03390.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/norm_chisq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Normalized Chi-Squared Test for Circular Data — norm_chisq","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate data(san_andreas) point <- data.frame(lat = 45, lon = 20) prd <- model_shmax(point, PoR) norm_chisq(obs = c(50, 40, 42), prd$sc, unc = c(10, NA, 5)) #> [1] 0.0007761934  data(san_andreas) prd2 <- PoR_shmax(san_andreas, PoR, type = \"right\") norm_chisq(obs = prd2$azi.PoR, 135, unc = san_andreas$unc) #> [1] 0.0529064"},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Quaternion normalization — normalize_Q4","title":"Quaternion normalization — normalize_Q4","text":"Quaternion normalization","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quaternion normalization — normalize_Q4","text":"","code":"normalize_Q4(q)"},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quaternion normalization — normalize_Q4","text":"q quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/normalize_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quaternion normalization — normalize_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":null,"dir":"Reference","previous_headings":"","what":"NUVEL-1 Global model of current plate motions — nuvel1","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"NNR-NUVEL-1 global model current plate motions DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"","code":"data('nuvel1')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Pole Rotation angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative  plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"NUVEL-1 Global model of current plate motions — nuvel1","text":"","code":"data(\"nuvel1\") head(\"nuvel1\") #> [1] \"nuvel1\""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — nuvel1_plates","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"Global set present plate boundaries Earth based NUVEL-1 model DeMets et al. 1990","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"","code":"data('nuvel1_plates')"},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"object class sf","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"DeMets, C., Gordon, R. G., Argus, D. F., & Stein, S. (1990). Current plate motions. Geophysical Journal International, 101(2), 425-478. doi:10.1111/j.1365-246X.1990.tb06579.x .","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/nuvel1_plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — nuvel1_plates","text":"","code":"data(\"nuvel1_plates\") head(\"nuvel1_plates\") #> [1] \"nuvel1_plates\""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":null,"dir":"Reference","previous_headings":"","what":"Numerical values to World Stress Map Quality Ranking — parse_wsm","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"Assigns numeric values precision (sd.) measurement categorical quality ranking World Stress Map (, B, C, D, E).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"","code":"parse_wsm_quality(x)  quantise_wsm_quality(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"x Either string character/factor vector WSM quality ranking","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"\"numeric\". standard deviation stress azimuth","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"Heidbach, O., Barth, ., M<U+00FC>ller, B., Reinecker, J., Stephansson, O., Tingay, M., Zang, . (2016). WSM quality ranking scheme, database description analysis guidelines stress indicator. World Stress Map Technical Report 16-01, GFZ German Research Centre Geosciences. doi:10.2312/wsm.2016.001","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/parse_wsm.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Numerical values to World Stress Map Quality Ranking — parse_wsm","text":"","code":"parse_wsm_quality(c(\"A\", \"B\", \"C\", \"D\", NA, \"E\")) #>    A    B    C    D <NA>    E  #>   15   20   25   40   NA   90  data(\"san_andreas\") parse_wsm_quality(san_andreas$quality) #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  E  E  E  E  B  D  C  A  A  D  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 90 90 90 90 20 40 25 15 15 40  #>  D  A  D  C  C  C  C  E  B  D  B  D  D  D  D  D  D  D  D  D  B  D  D  D  D  C  #> 40 15 40 25 25 25 25 90 20 40 20 40 40 40 40 40 40 40 40 40 20 40 40 40 40 25  #>  D  D  D  D  D  D  B  D  D  D  B  D  D  D  D  A  A  B  B  A  C  B  A  D  A  D  #> 40 40 40 40 40 40 20 40 40 40 20 40 40 40 40 15 15 20 20 15 25 20 15 40 15 40  #>  A  B  D  B  B  A  B  B  B  B  D  B  C  B  A  B  C  A  B  B  C  B  A  B  C  B  #> 15 20 40 20 20 15 20 20 20 20 40 20 25 20 15 20 25 15 20 20 25 20 15 20 25 20  #>  B  B  C  B  B  A  D  B  B  B  B  B  D  D  B  C  B  B  C  C  D  B  A  B  B  B  #> 20 20 25 20 20 15 40 20 20 20 20 20 40 40 20 25 20 20 25 25 40 20 15 20 20 20  #>  B  B  B  C  B  B  A  D  B  B  C  C  B  B  D  B  C  A  A  A  B  B  B  C  C  B  #> 20 20 20 25 20 20 15 40 20 20 25 25 20 20 40 20 25 15 15 15 20 20 20 25 25 20  #>  C  C  D  B  B  B  C  B  C  D  B  B  B  C  B  D  C  C  C  A  A  B  E  D  D  B  #> 25 25 40 20 20 20 25 20 25 40 20 20 20 25 20 40 25 25 25 15 15 20 90 40 40 20  #>  B  B  C  C  C  B  C  B  B  C  B  A  D  D  B  B  D  D  B  D  D  D  D  C  C  C  #> 20 20 25 25 25 20 25 20 20 25 20 15 40 40 20 20 40 40 20 40 40 40 40 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  B  E  A  C  A  C  C  C  B  C  B  C  A  E  #> 25 25 25 25 25 25 25 25 25 25 25 25 20 90 15 25 15 25 25 25 20 25 20 25 15 90  #>  E  B  D  A  E  E  E  E  E  C  D  C  A  A  A  A  C  C  D  A  C  E  C  C  C  E  #> 90 20 40 15 90 90 90 90 90 25 40 25 15 15 15 15 25 25 40 15 25 90 25 25 25 90  #>  C  D  E  E  E  C  B  E  C  A  C  C  C  C  D  C  A  B  B  C  D  A  D  C  B  E  #> 25 40 90 90 90 25 20 90 25 15 25 25 25 25 40 25 15 20 20 25 40 15 40 25 20 90  #>  E  E  E  E  A  A  A  A  E  A  A  A  A  A  A  A  A  A  E  A  E  E  E  D  A  D  #> 90 90 90 90 15 15 15 15 90 15 15 15 15 15 15 15 15 15 90 15 90 90 90 40 15 40  #>  D  A  A  D  C  D  D  C  C  C  D  D  C  C  E  C  C  C  C  C  C  C  C  C  C  C  #> 40 15 15 40 25 40 40 25 25 25 40 40 25 25 90 25 25 25 25 25 25 25 25 25 25 25  #>  C  A  C  C  D  B  D  C  A  A  C  C  C  C  C  C  C  B  C  A  A  A  A  A  A  A  #> 25 15 25 25 40 20 40 25 15 15 25 25 25 25 25 25 25 20 25 15 15 15 15 15 15 15  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  A  A  D  A  A  A  A  A  A  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 15 15 40 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  B  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 20 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  B  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 20 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  E  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 90 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  E  A  A  A  E  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 90 15 15 15 90 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  E  E  A  A  A  A  A  A  A  E  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 90 90 15 15 15 15 15 15 15 90 15 15 15 15  #>  A  A  A  A  A  A  E  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 90 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  A  #> 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15  #>  A  A  A  A  A  A  A  A  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  D  D  D  #> 15 15 15 15 15 15 15 15 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 40 40 40  #>  C  C  C  C  D  D  D  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 40 40 40 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  D  A  D  D  D  D  D  D  D  D  D  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 40 15 40 40 40 40 40 40 40 40 40  #>  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  D  B  D  C  C  #> 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 40 20 40 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  E  E  E  E  E  E  C  C  C  C  A  B  D  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 90 90 90 90 90 90 25 25 25 25 15 20 40 25 25 25 25 25 25 25 25 25 25 25 25  #>  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  C  #> 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25 25  #>  B  C  C  B  B  D  B  A  #> 20 25 25 20 20 40 20 15"},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":null,"dir":"Reference","previous_headings":"","what":"Global model of current plate motions — pb2002","title":"Global model of current plate motions — pb2002","text":"PB2002 global model current plate motions Bird 2003","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Global model of current plate motions — pb2002","text":"","code":"data('pb2002')"},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Global model of current plate motions — pb2002","text":"object class data.frame plate.name rotating plate plate.rot abbreviation plate's name lat,lon Coordinates Pole Rotation angle amount rotation (angle 1 Myr) plate.fix anchored plate, .e. plate.rot moves relative plate.fix source Reference underlying study","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Global model of current plate motions — pb2002","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/pb2002.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Global model of current plate motions — pb2002","text":"","code":"data(\"pb2002\") head(\"pb2002\") #> [1] \"pb2002\""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":null,"dir":"Reference","previous_headings":"","what":"Plate Boundaries on the Earth — plates","title":"Plate Boundaries on the Earth — plates","text":"Global set present plate boundaries Earth based PB2002 model Bird (2003). Contains plate boundary displacement types inward, outward, tangentially displacement.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plate Boundaries on the Earth — plates","text":"","code":"data('plates')"},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Plate Boundaries on the Earth — plates","text":"object class sf","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Plate Boundaries on the Earth — plates","text":"Bird, P. (2003), updated digital model plate boundaries, Geochem. Geophys. Geosyst., 4, 1027, doi: 10.1029/2001GC000252, 3.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plates.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plate Boundaries on the Earth — plates","text":"","code":"data(\"plates\") head(\"plates\") #> [1] \"plates\""},{"path":"https://tobiste.github.io/tectonicr/reference/plot_density.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Density Plot — plot_density","title":"Circular Density Plot — plot_density","text":"Plot multiples von Mises density distribution","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plot_density.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Density Plot — plot_density","text":"","code":"plot_density(   x,   kappa,   axial = TRUE,   n = 512,   norm.density = FALSE,   ...,   scale = 1.1,   shrink = 1,   add = TRUE,   main = NULL,   labels = TRUE,   at = seq(0, 360 - 45, 45),   cborder = TRUE,   grid = FALSE )"},{"path":"https://tobiste.github.io/tectonicr/reference/plot_density.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Density Plot — plot_density","text":"x Data plotted. numeric vector containing angles (degrees). kappa Concentration parameter von Mises distribution. Small kappa gives smooth density lines. axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). n number equally spaced points density estimated. norm.density logical. Normalize density? ... graphical parameters may also supplied arguments. scale radius plotted circle. Default 1.1. shrink parameter controls size plotted function. Default 1. add logical. Add existing plot? (TRUE default). main Character string specifying title plot. labels Either logical value indicating whether plot labels next tick marks, vector labels tick marks. Optional vector angles tick marks plotted. Set =numeric(0) suppress tick marks. cborder logical. Border rose plot. grid logical. Whether grid added.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plot_density.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Density Plot — plot_density","text":"plot calculated densities numeric vector","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/plot_density.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Density Plot — plot_density","text":"","code":"rose(san_andreas$azi, dots = TRUE, stack = TRUE, dot_cex = 0.5, dot_pch = 21) plot_density(san_andreas$azi,   kappa = 100, col = \"#51127CFF\", shrink = 1.5,   norm.density = FALSE )  plot_density(san_andreas$azi,   kappa = 100, col = \"#51127CFF\", add = FALSE,   scale = .5, shrink = 2, norm.density = TRUE, grid = TRUE )"},{"path":"https://tobiste.github.io/tectonicr/reference/plot_points.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Points to a Circular Plot — plot_points","title":"Add Points to a Circular Plot — plot_points","text":"Add points plot circular data points current graphics device.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plot_points.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Points to a Circular Plot — plot_points","text":"","code":"plot_points(   x,   axial = TRUE,   stack = FALSE,   binwidth = 1,   cex = 1,   sep = 0.025,   jitter_factor = 0,   ...,   scale = 1.1,   add = TRUE,   main = NULL,   labels = TRUE,   at = seq(0, 360 - 45, 45),   cborder = TRUE )"},{"path":"https://tobiste.github.io/tectonicr/reference/plot_points.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Points to a Circular Plot — plot_points","text":"x Data plotted. numeric vector containing angles (degrees). axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). stack logical: TRUE, points stacked perimeter circle. Otherwise, points plotted perimeter circle. Default FALSE. binwidth numeric. Bin width (degrees) stacked dot plots. ignored stack==FALSE. set 1 degree default. cex character (symbol) expansion: numerical vector. works multiple par(\"cex\"). sep constant used specify distance stacked points, stack==TRUE case one dataset. Default 0.025; smaller values create smaller spaces. jitter_factor numeric. Adds small amount random variation location points along radius added scale. Jitter ignored stack==TRUE). 0, jitter added (default); negative, points fall circle. ... graphical parameters may also supplied arguments. scale radius plotted circle. Default 1.1. Larger values shrink circle, smaller values enlarge circle. add logical main Character string specifying title plot. labels Either logical value indicating whether plot labels next tick marks, vector labels tick marks. Optional vector angles tick marks plotted. Set =numeric(0) suppress tick marks. cborder logical. Border rose plot.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plot_points.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Points to a Circular Plot — plot_points","text":"list information plot","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/plot_points.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Points to a Circular Plot — plot_points","text":"","code":"x <- rvm(100, mean = 90, k = 5) plot_points(x, add = FALSE)  plot_points(x, jitter_factor = .2, add = FALSE) # jittered plot  plot_points(x, stack = TRUE, binwidth = 3, add = FALSE) # stacked plot"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"Transformation spherical PoR geographical coordinate system vice versa","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"","code":"geographical_to_PoR(x, PoR)  PoR_to_geographical(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"x \"data.frame\" containing lat lon coordinates point geographical CRS lat.PoR, lon.PoR) point PoR CRS. PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"\"data.frame\" transformed coordinates (lat.PoR lon.PoR PoR CRS, lat lon geographical CRS).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_df.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between spherical PoR to geographical coordinate system — por_transformation_df","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por <- geographical_to_PoR(san_andreas, por) head(san_andreas.por) #>    lat.PoR   lon.PoR #> 1 59.05548 -85.46364 #> 2 60.50445 -78.16683 #> 3 59.38025 -84.55317 #> 4 59.73632 -85.74431 #> 5 61.68018 -84.31053 #> 6 63.39714 -80.60932 head(PoR_to_geographical(san_andreas.por, por)) #>     lat     lon #> 1 38.14 -118.84 #> 2 35.97 -114.71 #> 3 37.93 -118.17 #> 4 38.63 -118.21 #> 5 39.08 -115.62 #> 6 38.58 -112.58"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"Helper function transformation PoR geographical coordinate system vice versa","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"","code":"geographical_to_PoR_quat(x, PoR)  PoR_to_geographical_quat(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"x, PoR two-column vectors containing lat lon coordinates","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"two-element numeric vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_quat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinate system using quaternions — por_transformation_quat","text":"","code":"ep.geo <- c(20, 33) q.geo <- c(10, 45) q.por <- geographical_to_PoR_quat(q.geo, ep.geo) q.por #> [1] 74.70603 50.91863 PoR_to_geographical_quat(q.por, ep.geo) #> [1] 10 45"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"Transform spatial objects PoR geographical coordinate reference system vice versa.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"","code":"PoR_to_geographical_sf(x, PoR)  geographical_to_PoR_sf(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"x sf, SpatRast, Raster* object data points geographical PoR coordinate system PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"sf SpatRast object data points transformed geographical PoR coordinate system","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"PoR coordinate reference system oblique transformation geographical coordinate system Euler pole coordinates translation factors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/por_transformation_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Conversion between PoR to geographical coordinates of spatial data — por_transformation_sf","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") san_andreas.por <- geographical_to_PoR_sf(san_andreas, PoR) PoR_to_geographical_sf(san_andreas.por, PoR) #> Simple feature collection with 1126 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -125.82 ymin: 23.08 xmax: -108 ymax: 39.94 #> Geodetic CRS:  WGS 84 #> First 10 features: #>          id   lat     lon azi unc type depth quality regime #> 1  wsm00892 38.14 -118.84  50  25  FMS     7       C      S #> 2  wsm00893 35.97 -114.71  54  25  FMS     5       C      S #> 3  wsm00894 37.93 -118.17  24  25  FMS     5       C      S #> 4  wsm00896 38.63 -118.21  41  25  FMS    17       C      N #> 5  wsm00897 39.08 -115.62  30  25  FMS     5       C      N #> 6  wsm00903 38.58 -112.58  27  25  FMS     7       C      N #> 7  wsm00904 38.71 -112.04  29  25  FMS     9       C      N #> 8  wsm00905 37.30 -114.94  58  25  FMS     5       C     NS #> 9  wsm00906 37.61 -113.30  32  25  FMS     2       C     TS #> 10 wsm00916 37.69 -115.05  47  25  FMS     3       C      S #>                 geometry #> 1  POINT (-118.84 38.14) #> 2  POINT (-114.71 35.97) #> 3  POINT (-118.17 37.93) #> 4  POINT (-118.21 38.63) #> 5  POINT (-115.62 39.08) #> 6  POINT (-112.58 38.58) #> 7  POINT (-112.04 38.71) #> 8   POINT (-114.94 37.3) #> 9   POINT (-113.3 37.61) #> 10 POINT (-115.05 37.69)"},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":null,"dir":"Reference","previous_headings":"","what":"Error of Model's Prediction — prd_err","title":"Error of Model's Prediction — prd_err","text":"maximum error model's predicted azimuth given Pole rotations uncertainty distance data point pole.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Error of Model's Prediction — prd_err","text":"","code":"prd_err(dist_PoR, sigma_PoR = 1)"},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Error of Model's Prediction — prd_err","text":"dist_PoR Distance Euler pole (great circle distance, degree) sigma_PoR uncertainty position Pole rotation (degree).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Error of Model's Prediction — prd_err","text":"numeric vector. maximum error azimuths prediction (degree)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Error of Model's Prediction — prd_err","text":"Ramsay, J.. Folding fracturing rocks. McGraw-Hill, New York, 1967.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/prd_err.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Error of Model's Prediction — prd_err","text":"","code":"prd_err(67, 1) #> [1] 0.9060055  # San Andreas example: data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to Pacific plate data(\"san_andreas\") d <- PoR_distance(san_andreas, por) prd_err(d) #>    [1] 1.875505 1.965582 1.894943 1.916741 2.045546 2.175192 2.209802 2.007877 #>    [9] 2.096593 2.018212 2.016872 1.862409 1.905727 1.750007 1.850889 1.857785 #>   [17] 1.769859 1.768023 1.774618 1.783184 1.800640 1.802095 1.776316 1.761912 #>   [25] 1.762615 1.755257 1.782133 1.761423 1.782107 1.780452 1.763312 1.759568 #>   [33] 1.947893 1.765357 1.765840 1.824262 1.824262 1.815155 1.780276 1.777478 #>   [41] 1.769883 1.784044 1.978590 1.780871 1.774094 1.758692 1.758692 1.771977 #>   [49] 1.767687 1.774253 1.786006 1.785762 1.784634 1.738223 1.730387 1.735391 #>   [57] 1.756827 1.761458 1.761458 1.760530 1.739973 1.766817 1.770227 1.769974 #>   [65] 1.762454 1.762454 1.748638 1.767302 1.763609 1.764480 1.763722 1.761737 #>   [73] 1.767809 1.779657 1.768495 1.763244 1.758941 1.762846 1.767668 1.763633 #>   [81] 1.781683 1.767496 1.815155 1.796643 1.780276 1.768385 1.777478 1.770524 #>   [89] 1.801586 1.728522 1.777228 1.769883 1.771626 1.753501 1.784044 1.768506 #>   [97] 1.773353 1.780871 1.756819 1.734721 1.774094 1.769296 1.757515 1.771977 #>  [105] 1.771434 1.767860 1.729227 1.774253 1.784634 1.770955 1.738223 1.745781 #>  [113] 1.782059 1.774354 1.781138 1.731343 1.730387 1.738045 1.735391 1.742803 #>  [121] 1.772870 1.772280 1.728712 1.793972 1.716292 1.773067 1.771532 1.758818 #>  [129] 1.761996 1.762401 1.767334 1.756464 1.758895 1.756827 1.758388 1.763040 #>  [137] 1.771965 1.760973 1.784246 1.760469 1.767107 1.760802 1.719625 1.767712 #>  [145] 1.743191 1.721687 1.760530 1.768593 1.739973 1.773223 1.774037 1.772965 #>  [153] 1.767359 1.769474 1.764037 1.757867 1.747656 1.757458 1.745400 1.758311 #>  [161] 1.766087 1.745831 1.746723 1.759084 1.745934 1.725087 1.719195 1.721563 #>  [169] 1.721805 1.756396 1.748638 1.800500 1.782618 1.769243 1.758427 1.822317 #>  [177] 1.761700 1.789596 1.749054 1.758395 1.758395 1.720707 1.702913 1.703682 #>  [185] 1.758069 1.713185 1.721614 1.735424 1.737924 1.739475 1.764153 1.614144 #>  [193] 1.802019 1.654084 1.977195 1.754257 1.799664 1.645197 2.335817 1.795004 #>  [201] 1.805558 1.967184 1.944338 1.944534 1.971969 2.345506 2.264876 2.394754 #>  [209] 1.859227 1.751417 1.756697 1.759007 1.759037 1.737496 1.835636 1.800754 #>  [217] 1.805859 1.803892 1.805362 1.804379 1.804773 1.806000 1.804493 1.803686 #>  [225] 1.795362 1.800260 1.801174 1.802628 1.802232 1.804287 1.766332 1.764573 #>  [233] 1.758058 1.765888 1.773014 1.795126 1.790512 1.761418 1.719310 1.748068 #>  [241] 1.747498 1.748919 1.807127 2.038624 2.002278 2.000512 1.935308 1.891320 #>  [249] 1.924844 1.714002 1.718683 1.725783 1.763546 1.682073 1.678617 1.737152 #>  [257] 1.739949 1.759792 1.757719 1.752624 1.743797 1.799241 1.806270 1.722097 #>  [265] 1.728431 1.711057 1.724608 1.755487 1.805261 1.892617 1.940339 1.715998 #>  [273] 2.274501 1.759609 1.997183 1.901457 1.950723 2.193475 2.139952 2.225192 #>  [281] 2.203774 2.152258 2.193227 2.158069 2.075703 2.345416 2.431821 2.257723 #>  [289] 2.162175 2.490279 1.776513 1.757720 1.766130 1.776316 1.798221 1.809217 #>  [297] 1.786480 1.798666 1.812203 1.801532 1.785699 1.758235 1.766417 1.761917 #>  [305] 1.824903 1.856353 1.740549 1.851067 1.861486 1.846503 1.875480 1.839960 #>  [313] 1.844643 1.837397 1.842464 1.851860 1.834286 1.843037 1.854324 1.885725 #>  [321] 1.841440 1.770047 1.819518 2.114948 2.059164 2.051797 1.967097 2.094476 #>  [329] 2.148550 2.080530 2.048068 1.972185 2.060176 2.108089 1.966703 1.860955 #>  [337] 1.992702 1.736648 1.744839 1.753104 1.743009 1.751271 1.707970 1.707970 #>  [345] 1.654604 1.654084 1.810276 1.653014 1.738100 1.719033 1.719033 1.716649 #>  [353] 1.636144 1.703701 1.703701 1.702938 1.720548 1.696726 1.725363 1.728891 #>  [361] 1.716982 1.768313 1.648903 1.760512 1.765974 1.734022 1.685773 2.076865 #>  [369] 2.258505 2.117987 1.807579 1.801174 1.800721 1.813778 1.929178 1.898103 #>  [377] 2.270118 2.300910 1.758427 1.747869 2.093629 1.932493 2.196956 1.511395 #>  [385] 1.840087 1.829491 1.679140 1.675719 1.730059 1.738492 1.737105 1.857898 #>  [393] 1.855115 1.857936 1.714148 1.699972 1.693838 1.707326 1.731132 1.730515 #>  [401] 1.739893 1.838180 1.843123 1.693357 1.685774 1.743564 1.746916 1.751028 #>  [409] 1.750630 1.757098 1.757737 1.757973 1.753087 1.752987 1.753256 1.751222 #>  [417] 1.850543 1.856269 1.925701 1.845700 1.702832 1.719454 1.688049 1.697136 #>  [425] 1.723015 1.808490 1.810331 1.798308 1.803218 1.671599 1.665956 1.724812 #>  [433] 1.730961 1.824113 1.732995 1.807932 1.865044 1.816601 1.827376 1.816191 #>  [441] 1.819738 1.817925 1.824976 1.823161 1.821312 1.819501 1.826665 1.815765 #>  [449] 1.812157 1.822913 1.821067 1.819259 1.826145 1.822532 1.815287 1.811609 #>  [457] 1.811368 1.809542 1.809301 1.839765 1.832539 1.816198 1.814446 1.810713 #>  [465] 1.796536 1.812403 1.812143 1.810329 1.838759 1.835201 1.806650 1.827846 #>  [473] 1.810068 1.795838 1.788842 1.831118 1.829296 1.827510 1.809803 1.806134 #>  [481] 1.799115 1.834305 1.832519 1.830735 1.828952 1.827206 1.807732 1.832165 #>  [489] 1.826863 1.807463 1.805736 1.837312 1.833784 1.823159 1.809053 1.802050 #>  [497] 1.795105 1.830065 1.824742 1.805395 1.803673 1.851139 1.787873 1.838513 #>  [505] 1.836734 1.834994 1.833218 1.829706 1.827899 1.826164 1.808633 1.806841 #>  [513] 1.805121 1.803368 1.801616 1.843640 1.822470 1.798018 1.794527 1.791041 #>  [521] 1.839870 1.838131 1.834584 1.832848 1.831077 1.829308 1.827539 1.806560 #>  [529] 1.804808 1.857344 1.844766 1.841217 1.839481 1.837710 1.835939 1.821925 #>  [537] 1.820166 1.804492 1.802780 1.825249 1.814777 1.842553 1.840820 1.839052 #>  [545] 1.819813 1.818094 1.800720 1.793666 1.786774 1.840383 1.838617 1.821209 #>  [553] 1.819421 1.817706 1.815991 1.802106 1.827952 1.807145 1.838216 1.824275 #>  [561] 1.820774 1.817349 1.813857 1.812149 1.803518 1.801816 1.800081 1.823899 #>  [569] 1.822153 1.820406 1.813539 1.811764 1.810060 1.803186 1.801453 1.798060 #>  [577] 1.796296 1.844507 1.806432 1.792737 1.789325 1.785919 1.821741 1.819999 #>  [585] 1.818293 1.816588 1.814850 1.811410 1.809675 1.807976 1.801120 1.796009 #>  [593] 1.794284 1.826692 1.842059 1.821327 1.819624 1.817887 1.816185 1.814485 #>  [601] 1.812716 1.809321 1.807625 1.802287 1.798909 1.788700 1.785308 1.843305 #>  [609] 1.841558 1.839847 1.838136 1.819209 1.817511 1.810656 1.807236 1.805545 #>  [617] 1.841089 1.839347 1.808567 1.806844 1.805156 1.803470 1.815159 1.798159 #>  [625] 1.811575 1.803045 1.799649 1.818156 1.784294 1.802653 1.800974 1.810957 #>  [633] 1.807560 1.797429 1.800582 1.798908 1.798515 1.796846 1.799784 1.798118 #>  [641] 1.796418 1.843397 1.789576 1.797717 1.799177 1.795655 1.793964 1.822104 #>  [649] 1.808732 1.796872 1.795217 1.793563 1.791876 1.848431 1.845078 1.841691 #>  [657] 1.788180 1.786534 1.834424 1.781411 1.854215 1.844218 1.842514 1.840843 #>  [665] 1.786140 1.784465 1.850560 1.847218 1.837214 1.827233 1.794157 1.790834 #>  [673] 1.787583 1.853588 1.851918 1.843617 1.849627 1.848000 1.846302 1.844638 #>  [681] 1.843012 1.841315 1.839654 1.838029 1.836335 1.785309 1.783641 1.776952 #>  [689] 1.773697 1.845685 1.844025 1.842404 1.839091 1.835743 1.852005 1.825572 #>  [697] 1.819014 1.792794 1.786265 1.846717 1.845065 1.843409 1.838149 1.769626 #>  [705] 1.842790 1.839493 1.857252 1.840212 1.836928 1.833680 1.828464 1.826826 #>  [713] 1.842795 1.810320 1.784458 1.778032 1.824603 1.823006 1.769815 1.771223 #>  [721] 1.820790 1.767782 1.867397 1.827915 1.824703 1.815085 1.811848 1.763959 #>  [729] 1.833713 1.801672 1.795303 1.776196 1.769874 1.823762 1.822181 1.820567 #>  [737] 1.818987 1.817371 1.812601 1.810955 1.809377 1.807801 1.826652 1.759957 #>  [745] 1.815170 1.813595 1.811952 1.808804 1.807199 1.811368 1.803454 1.767152 #>  [753] 1.765567 1.764015 1.806305 1.799973 1.768463 1.796534 1.765121 1.761959 #>  [761] 1.812016 1.786840 1.774275 1.794387 1.792830 1.764638 1.763060 1.761516 #>  [769] 1.759973 1.758398 1.801962 1.795700 1.789412 1.792279 1.790693 1.764153 #>  [777] 1.762611 1.761071 1.759498 1.757925 1.756387 1.760556 1.759019 1.757483 #>  [785] 1.755916 1.763419 1.758539 1.757006 1.755474 1.778421 1.772203 1.766027 #>  [793] 1.783488 1.770608 1.764508 1.751787 1.766483 1.763415 1.829889 1.754674 #>  [801] 1.742715 1.764762 1.720135 1.796946 1.739055 1.757236 1.755480 1.749252 #>  [809] 1.747531 1.741370 1.739589 1.727504 1.821172 1.805481 1.746888 1.747294 #>  [817] 1.744901 1.877054 1.877444 1.721441 1.751451 1.670847 1.685755 1.631921 #>  [825] 1.628519 1.690576 1.686081 1.719814 1.756403 1.650603 1.693660 1.670468 #>  [833] 1.745718 1.830095 1.749538 1.763366 1.814193 1.746518 1.746319 1.684177 #>  [841] 1.685909 1.690503 1.685646 1.694348 1.692081 1.688871 1.688231 1.721305 #>  [849] 1.722450 1.683860 1.723157 1.722747 1.693261 1.755171 1.727075 1.705418 #>  [857] 1.733170 1.731066 1.749767 1.687851 1.722450 1.721196 1.724554 1.651912 #>  [865] 1.653066 1.722734 1.790189 1.723796 1.752362 1.723993 1.763434 1.771042 #>  [873] 1.809406 1.740508 1.675639 2.235486 2.252153 2.323304 2.208434 2.250865 #>  [881] 1.811516 1.829866 1.824471 1.823633 1.824717 1.791671 1.752748 1.719613 #>  [889] 1.726186 1.736567 1.744214 1.828556 1.766138 1.762950 1.763315 1.785115 #>  [897] 1.781510 1.867741 1.762605 1.744501 1.838924 1.937244 1.968640 2.268880 #>  [905] 1.709301 1.715899 1.761975 1.739703 1.723015 1.721661 1.715924 1.750778 #>  [913] 1.751832 1.704446 1.751121 1.720173 1.679083 1.751800 1.750431 1.669351 #>  [921] 1.741110 1.730076 1.752253 1.729714 1.752265 1.728986 1.719970 1.718485 #>  [929] 1.719219 1.718344 1.716735 1.717824 1.681877 1.728158 1.717500 1.749991 #>  [937] 1.681298 1.751707 1.733796 1.809107 1.808380 1.809123 1.809471 1.753321 #>  [945] 1.718975 1.805130 1.876552 1.697981 1.762773 1.776767 1.728745 1.731148 #>  [953] 1.854250 1.681688 1.654981 1.825852 1.717656 1.709569 1.706009 1.746544 #>  [961] 1.762493 1.755638 1.755746 1.807934 1.855091 1.855091 1.855091 1.679158 #>  [969] 1.677990 1.727967 1.751884 1.813602 1.805025 1.800386 1.799339 1.802635 #>  [977] 1.802140 1.803687 1.799695 1.799695 1.799292 1.718042 1.796970 1.681703 #>  [985] 1.802570 1.801280 1.749976 1.817248 1.700206 1.700785 1.697038 1.713375 #>  [993] 1.704974 1.700588 1.701861 1.700057 1.661880 1.713030 1.802046 1.713450 #> [1001] 2.172937 1.730922 1.802146 1.721669 1.717269 1.713578 1.723060 1.720014 #> [1009] 1.887954 1.754189 1.746091 1.744474 1.748209 1.705441 1.712669 1.743022 #> [1017] 1.858376 1.680898 1.785286 1.742755 1.686254 1.800728 1.710766 1.821736 #> [1025] 1.798971 1.780596 1.682444 1.673937 1.681701 1.685902 1.685393 1.707119 #> [1033] 1.620191 1.748656 1.671531 1.631355 1.685250 1.720110 1.724575 1.730203 #> [1041] 1.902354 1.719411 1.760340 1.691071 1.744444 1.745464 1.750825 1.631324 #> [1049] 1.829387 1.776781 1.775198 1.778481 1.773368 2.059785 1.693474 1.691083 #> [1057] 1.714182 1.751663 1.754152 1.774787 1.774420 1.778958 1.773687 1.777692 #> [1065] 1.687565 2.056655 1.705106 1.708631 1.731093 1.730139 1.725093 1.721120 #> [1073] 1.741719 1.739338 1.771529 1.902603 1.674362 1.922708 1.922708 2.080973 #> [1081] 1.753582 1.753150 1.746072 1.753100 1.753140 1.752454 1.746174 1.751550 #> [1089] 1.752468 1.751195 1.751972 1.753244 1.752264 1.752026 1.751156 1.753501 #> [1097] 1.751956 1.750474 1.746534 1.752253 1.751865 1.752572 1.753549 1.752881 #> [1105] 1.751091 1.752154 1.751856 1.752842 1.753864 1.750969 1.753386 1.752504 #> [1113] 1.752504 1.751736 1.751959 1.753232 1.844090 1.846352 1.845205 1.844985 #> [1121] 1.844985 1.844985 1.844985 1.846352 1.846352 1.751592"},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Product of quaternions — product_Q4","title":"Product of quaternions — product_Q4","text":"Helper function multiplication two quaternions. Concatenation two rotations R1 followed R2","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Product of quaternions — product_Q4","text":"","code":"product_Q4(q1, q2, normalize = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Product of quaternions — product_Q4","text":"q1, q2 two objects class \"quaternion\". first rotation R1 expressed q1 followed second rotation R2 expressed q2 normalize logical. Whether quaternion normalization applied (TRUE) (FALSE, default).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Product of quaternions — product_Q4","text":"object class \"quaternion\"","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/product_Q4.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Product of quaternions — product_Q4","text":"Multiplication commutative.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":null,"dir":"Reference","previous_headings":"","what":"Strike of the plate boundary projected on data point — projected_pb_strike","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"fault's strike PoR CRS projected data point along predicted stress trajectories.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"","code":"projected_pb_strike(x, PoR, pb, tangential = FALSE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"x, pb sf objects data points plate boundary geometries geographical coordinate system PoR Pole rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole tangential Logical. Whether plate boundary tangential boundary (TRUE) inward outward boundary (FALSE, default). ... optional arguments passed smoothr::densify()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"Numeric vector strike direction plate boundary (degree)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"Useful calculate beta angle, .e. angle SHmax direction (PoR CRS!) fault's strike (PoR CRS). beta angle geographical PoR coordinates.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"algorithm calculates great circle bearing line vertices. Since transform plate boundaries represent small circle lines PoR system, great-circle azimuth approximation true (small-circle) azimuth.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/projected_pb_strike.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Strike of the plate boundary projected on data point — projected_pb_strike","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- projected_pb_strike(   x = san_andreas, PoR = na_pa, pb = plate_boundary, tangential = TRUE ) head(res) #> [1] 76.74072 69.04668 82.89240 76.75248 84.79126 60.25133 head(san_andreas$azi - res) # beta angle #> [1] -26.74072 -15.04668 -58.89240 -35.75248 -54.79126 -33.25133"},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plotting Stress Analysis Results — quick_plot","title":"Plotting Stress Analysis Results — quick_plot","text":"Creates set plots including azimuth function distance plate boundary, Norm Chi-squared function distance plate boundary, circular distance (dispersion) function distance plate boundary, von-Mises QQ plot, rose diagram quality-weighted frequency distribution azimuths.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plotting Stress Analysis Results — quick_plot","text":"","code":"quick_plot(azi, distance, prd, unc = NULL, regime, width = 51)"},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plotting Stress Analysis Results — quick_plot","text":"azi numeric. Azimuth \\(\\sigma_{Hmax}\\) distance numeric. Distance plate boundary prd numeric. predicted direction \\(\\sigma_{Hmax}\\) unc numeric. Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number regime character vector. stress regime (following classification World Stress Map) width integer. window width (number observations) moving average azimuths, circular dispersion, Norm Chi-square statistics. NULL, optimal width estimated.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plotting Stress Analysis Results — quick_plot","text":"four R base plots","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plotting Stress Analysis Results — quick_plot","text":"Plot 1 shows transformed azimuths function distance plate boundary. red line indicates rolling circular mean, stippled red lines indicate 95% confidence interval mean. Plot 2 shows normalized \\(\\chi^2\\) statistics function distance plate boundary. red line shows rolling \\(\\chi^2\\) statistic. Plot 3 shows circular distance transformed azimuths predicted azimuth, function distance plate boundary. red line shows rolling circular dispersion prediction. Plot 4 give rose diagram transformed azimuths.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/quick_plot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plotting Stress Analysis Results — quick_plot","text":"","code":"data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") res <- PoR_shmax(san_andreas, na_pa, \"right\") d <- distance_from_pb(san_andreas, na_pa, plate_boundary, tangential = TRUE) quick_plot(res$azi.PoR, d, res$prd, san_andreas$unc, san_andreas$regime)"},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":null,"dir":"Reference","previous_headings":"","what":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"Helper function transform raster data set PoR geographical coordinates","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"","code":"geographical_to_PoR_raster(x, PoR)  PoR_to_geographical_raster(x, PoR)"},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"x \"SpatRaster\" \"RasterLayer\" PoR Pole Rotation. \"data.frame\" object class \"euler.pole\" containing geographical coordinates Euler pole","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/raster_transformation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Conversion between PoR to geographical coordinate reference system of raster data — raster_transformation","text":"terra \"SpatRaster\" object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Rayleigh Test of Circular Uniformity — rayleigh_test","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"Performs Rayleigh test uniformity circular/directional data assessing significance mean resultant length.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"","code":"rayleigh_test(x, mu = NULL, axial = TRUE, quiet = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"x numeric vector. Values degrees mu (optional) specified known mean direction (degrees) alternative hypothesis axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). quiet logical. Prints test's decision.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"list components: R C mean resultant length dispersion (mu specified). Small values R (large values C) reject uniformity. Negative values C indicate vectors point opposite directions (also lead rejection). statistic test statistic p.value significance level test statistic","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"\\(H_0\\): angles randomly distributed around circle. \\(H_1\\): angles unimodal distribution unknown mean direction mean resultant length (mu NULL. Alternatively (mu specified), angles uniformly distributed around specified direction. statistic > p.value, null hypothesis rejected, .e. length mean resultant differs significantly zero, angles randomly distributed.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"Although Rayleigh test consistent (non-uniform) von Mises alternatives, consistent alternatives p = 0 (particular, distributions antipodal symmetry, .e. axial data). Tests non-uniformity consistent alternatives include Kuiper's test (kuiper_test()) Watson's \\(U^2\\) test (watson_test()).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"Mardia Jupp (2000). Directional Statistics. John Wiley Sons. Wilkie (1983): Rayleigh Test Randomness Circular Data. Appl. Statist. 32, . 3, pp. 311-312 Jammalamadaka, S. Rao Sengupta, . (2001). Topics Circular Statistics, Sections 3.3.3 3.4.1, World Scientific Press, Singapore.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rayleigh_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rayleigh Test of Circular Uniformity — rayleigh_test","text":"","code":"# Example data from Mardia and Jupp (2001), pp. 93 pidgeon_homing <- c(55, 60, 65, 95, 100, 110, 260, 275, 285, 295) rayleigh_test(pidgeon_homing, axial = FALSE) #> Do Not Reject Null Hypothesis #> $R #> [1] 0.2228717 #>  #> $statistic #> [1] 0.4967179 #>  #> $p.value #> [1] 0.6201354 #>   # Example data from Davis (1986), pp. 316 finland_stria <- c(   23, 27, 53, 58, 64, 83, 85, 88, 93, 99, 100, 105, 113,   113, 114, 117, 121, 123, 125, 126, 126, 126, 127, 127, 128, 128, 129, 132,   132, 132, 134, 135, 137, 144, 145, 145, 146, 153, 155, 155, 155, 157, 163,   165, 171, 172, 179, 181, 186, 190, 212 ) rayleigh_test(finland_stria, axial = FALSE) #> Reject Null Hypothesis #> $R #> [1] 0.8003694 #>  #> $statistic #> [1] 32.67015 #>  #> $p.value #> [1] 6.479397e-15 #>  rayleigh_test(finland_stria, mu = 105, axial = FALSE) #> Reject Null Hypothesis #> $C #> [1] 0.7300887 #>  #> $statistic #> [1] 7.373534 #>  #> $p.value #> [1] 2.130845e-13 #>   # Example data from Mardia and Jupp (2001), pp. 99 atomic_weight <- c(   rep(0, 12), rep(3.6, 1), rep(36, 6), rep(72, 1),   rep(108, 2), rep(169.2, 1), rep(324, 1) ) rayleigh_test(atomic_weight, 0, axial = FALSE) #> Reject Null Hypothesis #> $C #> [1] 0.7237434 #>  #> $statistic #> [1] 5.014241 #>  #> $p.value #> [1] 5.348331e-08 #>   # San Andreas Fault Data: data(san_andreas) rayleigh_test(san_andreas$azi) #> Reject Null Hypothesis #> $R #> [1] 0.6822906 #>  #> $statistic #> [1] 524.1761 #>  #> $p.value #> [1] 2.255452e-228 #>  data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") rayleigh_test(sa.por$azi.PoR, mu = 135) #> Reject Null Hypothesis #> $C #> [1] 0.7009544 #>  #> $statistic #> [1] 33.26396 #>  #> $p.value #> [1] 1.420092e-239 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":null,"dir":"Reference","previous_headings":"","what":"Relative rotation between two rotations — relative_rotation","title":"Relative rotation between two rotations — relative_rotation","text":"Calculates relative rotation two rotations, .e. difference rotation 1 rotation 2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Relative rotation between two rotations — relative_rotation","text":"","code":"relative_rotation(r1, r2)"},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Relative rotation between two rotations — relative_rotation","text":"r1, r2 Objects class \"euler.pole\". First rotation r1, followed rotation r2.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Relative rotation between two rotations — relative_rotation","text":"list. Euler axes (geographical coordinates) Euler angles (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Relative rotation between two rotations — relative_rotation","text":"Schaeben, H., Kroner, U. Stephan, T. (2021). Euler Poles Tectonic Plates. B. S. Daza Sagar, Q. Cheng, J. McKinley F. Agterberg (Eds.), Encyclopedia Mathematical Geosciences. Encyclopedia Earth Sciences Series (pp. 1–7). Springer Nature Switzerland AG 2021. doi: 10.1007/978-3-030-26050-7_435-1.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/relative_rotation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Relative rotation between two rotations — relative_rotation","text":"","code":"a <- euler_pole(90, 0, angle = 45) b <- euler_pole(0, 0, 1, geo = FALSE, angle = -15) relative_rotation(a, b) #> $axis #> [1]  -90 -180 #>  #> $angle #> [1] 60 #>  relative_rotation(b, a) #> $axis #> [1] 90  0 #>  #> $angle #> [1] 60 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Functions using Circular Statistics — roll_circstats","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"generic function applying function rolling margins array.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"","code":"roll_circstats(   x,   w = NULL,   FUN,   axial = TRUE,   na.rm = TRUE,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. FUN function applied axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds. width integer specifying window width (numbers observations) aligned original sample according align argument. NULL, optimal width calculated. .column logical. TRUE, FUN applied column separately. partial logical numeric. FALSE FUN applied indexes rolling window within observed time range. TRUE (default), subset indexes range passed FUN. numeric argument partial can used determine minimal window size partial computations. See details. fill three-component vector list (recycled otherwise) providing filling values left/within/right data range. See fill argument zoo::na.fill() details ... optional arguments passed zoo::rollapply()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"numeric vector  results rolling function.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"rolling statistics applied values function distance recommended sort values first.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/roll_circstats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Rolling Functions using Circular Statistics — roll_circstats","text":"","code":"data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\") data(\"san_andreas\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") distance <- distance_from_pb(   x = san_andreas,   PoR = PoR,   pb = plate_boundary,   tangential = TRUE ) dat <- san_andreas[order(distance), ] roll_circstats(dat$azi, w = 1 / dat$unc, circular_mean, width = 51) #>    [1] 1.724601e+02 1.754018e+02 1.785472e+02 1.766702e+02 1.797096e+02 #>    [6] 1.298709e+00 1.977206e+00 1.772320e+02 1.789699e+02 1.742201e+02 #>   [11] 1.775516e+02 4.990087e-01 1.791327e+02 2.752321e+00 5.089828e+00 #>   [16] 7.674313e+00 8.644423e+00 1.051984e+01 1.339802e+01 1.506398e+01 #>   [21] 1.498504e+01 1.381015e+01 1.372673e+01 1.572840e+01 1.706427e+01 #>   [26] 1.678509e+01 1.785922e+01 1.854090e+01 1.834575e+01 1.936875e+01 #>   [31] 1.967131e+01 1.941892e+01 1.746316e+01 1.727473e+01 1.802694e+01 #>   [36] 1.985330e+01 2.073245e+01 1.975227e+01 1.801281e+01 1.930633e+01 #>   [41] 1.970018e+01 2.019271e+01 2.010805e+01 2.050523e+01 2.098142e+01 #>   [46] 2.155941e+01 2.292787e+01 2.246985e+01 2.135827e+01 2.279009e+01 #>   [51] 2.297850e+01 2.784309e+01 2.824444e+01 2.784523e+01 2.839384e+01 #>   [56] 2.911217e+01 2.828130e+01 2.845896e+01 2.783420e+01 2.814176e+01 #>   [61] 2.742388e+01 2.703529e+01 2.611435e+01 2.693504e+01 2.670314e+01 #>   [66] 2.600720e+01 2.466867e+01 2.540523e+01 2.445506e+01 2.343434e+01 #>   [71] 2.326515e+01 2.315653e+01 2.248538e+01 2.210288e+01 2.065676e+01 #>   [76] 1.959055e+01 2.002060e+01 1.840215e+01 1.740098e+01 1.977531e+01 #>   [81] 1.750693e+01 1.659217e+01 2.485734e+01 2.501685e+01 2.481565e+01 #>   [86] 2.381217e+01 2.292208e+01 2.202509e+01 2.212079e+01 2.260659e+01 #>   [91] 2.344424e+01 2.293214e+01 2.329718e+01 1.914217e+01 1.559815e+01 #>   [96] 1.510324e+01 1.435598e+01 1.396812e+01 1.275891e+01 1.305937e+01 #>  [101] 1.318872e+01 1.113146e+01 1.063375e+01 1.075567e+01 1.080398e+01 #>  [106] 1.036508e+01 1.021172e+01 1.002661e+01 1.016035e+01 1.045512e+01 #>  [111] 1.019787e+01 1.084363e+01 1.100784e+01 1.076890e+01 1.050166e+01 #>  [116] 1.044889e+01 1.038232e+01 1.039967e+01 1.005835e+01 9.997745e+00 #>  [121] 1.066371e+01 1.120207e+01 1.165474e+01 1.203518e+01 1.266397e+01 #>  [126] 1.316309e+01 1.338841e+01 1.338772e+01 1.291060e+01 1.305969e+01 #>  [131] 1.291121e+01 1.290385e+01 1.321918e+01 1.270699e+01 1.267078e+01 #>  [136] 1.266081e+01 1.210527e+01 1.288388e+01 1.295390e+01 1.301435e+01 #>  [141] 1.304217e+01 1.296256e+01 1.282237e+01 1.270072e+01 1.284806e+01 #>  [146] 1.331972e+01 1.272314e+01 1.285782e+01 1.296091e+01 1.315990e+01 #>  [151] 1.299226e+01 1.279162e+01 1.387474e+01 1.457389e+01 1.456580e+01 #>  [156] 1.456580e+01 1.488436e+01 1.460822e+01 1.439690e+01 1.498209e+01 #>  [161] 1.487171e+01 1.503191e+01 1.460960e+01 1.456138e+01 1.495378e+01 #>  [166] 1.511563e+01 1.509902e+01 1.506401e+01 1.535930e+01 1.530112e+01 #>  [171] 1.562198e+01 1.543097e+01 1.510050e+01 1.456828e+01 1.410154e+01 #>  [176] 1.363675e+01 1.353876e+01 1.197782e+01 1.142042e+01 1.180731e+01 #>  [181] 1.169308e+01 1.165315e+01 1.182068e+01 1.091439e+01 1.052757e+01 #>  [186] 1.040623e+01 1.035796e+01 1.086841e+01 1.041891e+01 1.030477e+01 #>  [191] 1.079797e+01 1.041472e+01 1.040687e+01 1.044855e+01 1.071410e+01 #>  [196] 1.022515e+01 1.022057e+01 1.074860e+01 1.070007e+01 1.001174e+01 #>  [201] 1.150377e+01 1.156248e+01 1.155488e+01 1.128203e+01 1.085667e+01 #>  [206] 1.088974e+01 1.238486e+01 1.232363e+01 1.245589e+01 1.261713e+01 #>  [211] 1.197207e+01 1.226367e+01 1.146431e+01 1.146431e+01 1.087091e+01 #>  [216] 1.098517e+01 1.118573e+01 1.135760e+01 1.189065e+01 1.164159e+01 #>  [221] 1.214926e+01 1.197377e+01 1.183890e+01 1.196358e+01 1.256029e+01 #>  [226] 1.308265e+01 1.310503e+01 1.302151e+01 1.469930e+01 1.538001e+01 #>  [231] 1.552051e+01 1.610862e+01 1.631643e+01 1.555228e+01 1.659874e+01 #>  [236] 1.644067e+01 1.706924e+01 1.641932e+01 1.677530e+01 1.698254e+01 #>  [241] 1.753948e+01 1.708029e+01 1.812772e+01 1.817342e+01 1.817663e+01 #>  [246] 1.808738e+01 2.020001e+01 1.918340e+01 1.640923e+01 1.638339e+01 #>  [251] 1.754539e+01 1.779635e+01 1.795559e+01 1.791413e+01 1.387545e+01 #>  [256] 1.404173e+01 1.393924e+01 1.091067e+01 1.008111e+01 1.041979e+01 #>  [261] 1.053829e+01 1.040386e+01 1.000931e+01 9.823722e+00 1.135727e+01 #>  [266] 1.310124e+01 1.192704e+01 1.123435e+01 1.095682e+01 7.479820e+00 #>  [271] 7.263160e+00 6.217212e+00 6.624945e+00 6.980246e+00 6.781584e+00 #>  [276] 6.048499e+00 5.540599e+00 7.090132e+00 6.033846e+00 5.988906e+00 #>  [281] 6.156661e+00 5.841055e+00 5.232358e+00 4.780816e+00 5.842031e+00 #>  [286] 5.819441e+00 6.204140e+00 7.279058e+00 7.623736e+00 7.455062e+00 #>  [291] 7.369186e+00 6.002120e+00 5.828278e+00 5.679322e+00 5.905394e+00 #>  [296] 6.153719e+00 6.001546e+00 4.258318e+00 5.620625e+00 8.231576e+00 #>  [301] 8.551064e+00 8.173763e+00 4.363588e+00 4.785064e+00 5.011090e+00 #>  [306] 1.233088e+01 1.093207e+01 1.116102e+01 1.367717e+01 1.619605e+01 #>  [311] 1.520776e+01 1.535508e+01 1.555553e+01 1.570950e+01 1.842607e+01 #>  [316] 1.554088e+01 1.192475e+01 1.437725e+01 1.514423e+01 1.511182e+01 #>  [321] 2.417627e+01 2.505782e+01 2.610815e+01 2.548231e+01 2.500739e+01 #>  [326] 2.509188e+01 2.514154e+01 2.519705e+01 2.306891e+01 2.551494e+01 #>  [331] 2.742633e+01 2.726605e+01 2.682351e+01 2.623808e+01 2.633512e+01 #>  [336] 2.394441e+01 2.454975e+01 2.461304e+01 2.335081e+01 2.536196e+01 #>  [341] 2.575247e+01 2.798735e+01 2.779929e+01 2.841472e+01 2.730662e+01 #>  [346] 2.708765e+01 2.667788e+01 2.535754e+01 2.517798e+01 2.667133e+01 #>  [351] 2.626774e+01 2.630379e+01 2.659778e+01 2.569173e+01 2.556263e+01 #>  [356] 2.534197e+01 2.553321e+01 2.687840e+01 2.739066e+01 2.750914e+01 #>  [361] 2.767783e+01 2.789952e+01 2.778859e+01 2.772366e+01 2.745970e+01 #>  [366] 2.790313e+01 2.780835e+01 2.938502e+01 2.906019e+01 2.884989e+01 #>  [371] 2.871198e+01 2.773374e+01 2.781379e+01 2.699176e+01 2.643128e+01 #>  [376] 2.526742e+01 2.511984e+01 2.494229e+01 2.466107e+01 2.455512e+01 #>  [381] 2.177039e+01 1.897839e+01 1.867336e+01 1.877668e+01 2.018608e+01 #>  [386] 2.013279e+01 2.121176e+01 2.064230e+01 2.025687e+01 1.995094e+01 #>  [391] 1.937118e+01 1.800084e+01 1.638546e+01 1.644370e+01 1.656635e+01 #>  [396] 1.648883e+01 1.684728e+01 1.760401e+01 1.726500e+01 1.712971e+01 #>  [401] 1.474797e+01 1.473575e+01 1.459749e+01 1.420367e+01 1.458009e+01 #>  [406] 1.388021e+01 1.334536e+01 1.309750e+01 1.186605e+01 1.167404e+01 #>  [411] 1.182006e+01 1.182915e+01 1.162849e+01 1.091056e+01 1.104973e+01 #>  [416] 1.104489e+01 1.072397e+01 1.075883e+01 1.075919e+01 1.084934e+01 #>  [421] 1.092478e+01 1.092970e+01 9.988584e+00 1.082323e+01 1.078290e+01 #>  [426] 1.084189e+01 1.298993e+01 1.301972e+01 1.325614e+01 1.278901e+01 #>  [431] 1.352277e+01 1.441930e+01 1.552971e+01 1.524813e+01 1.529688e+01 #>  [436] 1.397210e+01 1.357412e+01 1.382488e+01 1.382488e+01 1.379192e+01 #>  [441] 1.218754e+01 1.208780e+01 1.245716e+01 1.235135e+01 1.304305e+01 #>  [446] 1.242447e+01 1.249762e+01 1.206602e+01 1.138332e+01 1.151657e+01 #>  [451] 1.205539e+01 1.300495e+01 1.317616e+01 1.295743e+01 1.604230e+01 #>  [456] 1.608395e+01 1.667768e+01 1.732321e+01 1.695588e+01 1.659120e+01 #>  [461] 1.676734e+01 1.676057e+01 1.774879e+01 1.783541e+01 1.915984e+01 #>  [466] 1.771417e+01 1.808369e+01 1.827115e+01 1.826162e+01 1.659205e+01 #>  [471] 1.697528e+01 1.736323e+01 1.759619e+01 1.845253e+01 1.738780e+01 #>  [476] 1.894928e+01 1.912263e+01 1.688999e+01 1.698885e+01 1.675051e+01 #>  [481] 1.672105e+01 1.630327e+01 1.713171e+01 1.649391e+01 1.831117e+01 #>  [486] 1.875079e+01 1.885002e+01 1.977269e+01 1.923706e+01 1.912618e+01 #>  [491] 1.959719e+01 2.142427e+01 2.135134e+01 2.008426e+01 2.023784e+01 #>  [496] 1.738792e+01 1.790471e+01 1.765915e+01 1.782022e+01 1.724279e+01 #>  [501] 1.746524e+01 1.683450e+01 1.682576e+01 1.660980e+01 1.673893e+01 #>  [506] 1.348472e+01 1.090559e+01 1.082116e+01 1.068811e+01 1.056493e+01 #>  [511] 1.076728e+01 1.055589e+01 1.092666e+01 9.600779e+00 9.730432e+00 #>  [516] 1.019621e+01 1.121809e+01 1.095115e+01 1.062483e+01 1.059278e+01 #>  [521] 1.161679e+01 1.162588e+01 1.148754e+01 1.139075e+01 1.117127e+01 #>  [526] 1.115298e+01 9.419509e+00 9.461653e+00 9.881183e+00 9.366357e+00 #>  [531] 1.074744e+01 1.068608e+01 1.157058e+01 1.171594e+01 1.065748e+01 #>  [536] 9.274085e+00 8.805829e+00 8.874262e+00 8.825091e+00 8.997421e+00 #>  [541] 8.938833e+00 7.790278e+00 7.754862e+00 7.648779e+00 8.408601e+00 #>  [546] 8.349217e+00 8.457275e+00 8.370379e+00 9.782252e+00 9.673542e+00 #>  [551] 1.004982e+01 1.002785e+01 1.001614e+01 1.023060e+01 1.035592e+01 #>  [556] 1.014438e+01 1.092620e+01 1.359612e+01 1.369688e+01 1.393879e+01 #>  [561] 1.456103e+01 1.443067e+01 1.540580e+01 1.473076e+01 1.514673e+01 #>  [566] 1.494364e+01 1.400508e+01 1.379176e+01 1.219377e+01 1.233701e+01 #>  [571] 1.299223e+01 1.384387e+01 1.308565e+01 1.306299e+01 1.313875e+01 #>  [576] 1.462879e+01 1.463816e+01 1.461762e+01 1.471700e+01 1.374020e+01 #>  [581] 1.376564e+01 1.258281e+01 1.257279e+01 1.149717e+01 1.140215e+01 #>  [586] 1.302552e+01 1.334153e+01 1.354210e+01 1.265322e+01 1.236675e+01 #>  [591] 1.254674e+01 1.253132e+01 1.504019e+01 1.466594e+01 1.502228e+01 #>  [596] 1.513620e+01 1.489092e+01 1.568851e+01 1.561039e+01 1.316457e+01 #>  [601] 1.332480e+01 1.286199e+01 1.204185e+01 1.186972e+01 1.150414e+01 #>  [606] 1.080911e+01 1.030887e+01 9.178199e+00 9.215876e+00 9.080928e+00 #>  [611] 8.909113e+00 9.130941e+00 9.144745e+00 7.683591e+00 8.013691e+00 #>  [616] 7.475540e+00 7.469875e+00 7.411402e+00 6.846689e+00 7.864445e+00 #>  [621] 7.781765e+00 7.073437e+00 6.428211e+00 6.327497e+00 6.768449e+00 #>  [626] 6.377884e+00 3.414160e+00 3.382487e+00 4.865662e+00 5.042201e+00 #>  [631] 5.637077e+00 5.698183e+00 5.817778e+00 6.129906e+00 7.205861e+00 #>  [636] 7.626983e+00 7.314983e+00 7.276684e+00 7.234727e+00 7.770171e+00 #>  [641] 8.101184e+00 7.562180e+00 7.575929e+00 6.763910e+00 6.777606e+00 #>  [646] 6.411826e+00 5.182203e+00 4.808350e+00 4.748589e+00 4.764327e+00 #>  [651] 5.491879e+00 5.087452e+00 5.591747e+00 6.702282e+00 5.417773e+00 #>  [656] 3.424805e+00 4.999426e+00 5.652284e+00 5.963221e+00 5.953882e+00 #>  [661] 6.229486e+00 5.444007e+00 5.174882e+00 4.107902e+00 4.832468e+00 #>  [666] 4.292612e+00 4.536999e+00 4.647877e+00 4.768637e+00 5.810110e+00 #>  [671] 5.937340e+00 6.216347e+00 4.763681e+00 4.363889e+00 4.433653e+00 #>  [676] 3.751095e+00 3.706665e+00 4.035833e+00 4.107000e+00 2.783804e+00 #>  [681] 2.749966e+00 2.916800e+00 3.306647e+00 3.048532e+00 2.916904e+00 #>  [686] 1.431524e+00 1.225672e+00 1.871284e+00 9.241198e-01 7.737926e-01 #>  [691] 9.802925e-01 6.714390e-01 2.311542e-01 7.061669e-01 4.629574e-01 #>  [696] 5.027500e-01 8.819544e-02 5.826701e-01 6.170688e-01 1.124773e+00 #>  [701] 1.098368e+00 1.042847e+00 5.386757e-01 1.797037e+02 1.788387e+02 #>  [706] 1.796287e+02 1.026974e+00 8.795439e-02 1.798562e+02 3.904979e-02 #>  [711] 6.280985e-01 5.048608e-01 9.233595e-01 9.496267e-01 1.505929e+00 #>  [716] 1.374655e+00 1.667046e+00 1.711375e+00 1.751840e+00 1.715371e+00 #>  [721] 1.500778e+00 1.577838e+00 1.522879e+00 2.145265e+00 8.308535e-01 #>  [726] 2.108894e-01 2.486243e-01 4.830500e-01 1.148648e-01 5.189493e-01 #>  [731] 4.195617e-01 3.050743e-01 2.092210e-01 1.799013e+02 1.798816e+02 #>  [736] 1.796452e+02 1.793997e+02 1.788302e+02 1.787895e+02 1.790237e+02 #>  [741] 1.798099e+02 1.240426e-03 7.264005e-01 1.014093e+00 6.561114e-01 #>  [746] 5.498937e-01 6.773649e-01 7.502621e-01 7.405619e-01 8.099665e-01 #>  [751] 4.330812e-01 5.808066e-01 1.794003e+02 6.981542e-01 7.461776e-01 #>  [756] 1.509192e+00 1.725548e+00 1.237290e+00 1.474792e+00 1.756545e+00 #>  [761] 1.741290e+00 1.421891e+00 1.421891e+00 1.737877e+00 1.539881e+00 #>  [766] 2.292026e+00 2.375179e+00 2.319394e+00 2.248823e+00 2.203371e+00 #>  [771] 2.343951e+00 2.591935e+00 2.620891e+00 2.624906e+00 2.792902e+00 #>  [776] 4.445214e+00 4.841163e+00 4.256415e+00 3.726351e+00 4.497594e+00 #>  [781] 4.810848e+00 4.865264e+00 4.988340e+00 5.314843e+00 5.867952e+00 #>  [786] 5.617265e+00 5.345209e+00 5.358555e+00 6.939653e+00 6.943852e+00 #>  [791] 7.201039e+00 6.831910e+00 6.868331e+00 6.363125e+00 6.645628e+00 #>  [796] 6.776590e+00 6.812577e+00 6.955041e+00 6.648690e+00 5.699973e+00 #>  [801] 5.575963e+00 5.228286e+00 5.313893e+00 6.654591e+00 5.810105e+00 #>  [806] 6.448007e+00 6.181917e+00 6.285345e+00 6.273628e+00 6.500180e+00 #>  [811] 6.656357e+00 6.838133e+00 6.591495e+00 6.554501e+00 6.013403e+00 #>  [816] 5.907945e+00 5.341938e+00 5.230735e+00 5.285473e+00 5.265491e+00 #>  [821] 5.125526e+00 4.977549e+00 5.006897e+00 4.837833e+00 4.806472e+00 #>  [826] 4.674524e+00 3.956121e+00 3.827366e+00 4.062318e+00 5.201649e+00 #>  [831] 4.221949e+00 2.693400e+00 2.117927e+00 2.387436e+00 2.243379e+00 #>  [836] 1.680031e+00 2.263555e+00 2.547437e+00 2.011555e+00 4.583436e-01 #>  [841] 2.830896e-01 1.798115e+02 1.796558e+02 1.796779e+02 1.796776e+02 #>  [846] 1.793248e+02 1.793493e+02 1.794409e+02 1.796438e+02 1.779002e+02 #>  [851] 1.789037e+02 1.788854e+02 1.792837e+02 1.789293e+02 1.788514e+02 #>  [856] 1.786779e+02 1.785417e+02 1.784597e+02 1.783276e+02 1.783404e+02 #>  [861] 1.788950e+02 1.786688e+02 1.791074e+02 1.795869e+02 1.799744e+02 #>  [866] 5.932819e-01 8.142827e-01 1.182631e+00 1.142983e+00 7.020284e-01 #>  [871] 1.112058e+00 1.114752e+00 1.136306e+00 9.736434e-01 1.035730e+00 #>  [876] 1.036147e+00 1.222258e+00 1.928232e+00 1.993980e+00 2.375820e+00 #>  [881] 1.918504e+00 2.138304e+00 2.457452e+00 2.705794e+00 2.455862e+00 #>  [886] 2.470185e+00 2.245108e+00 2.467857e+00 2.706127e+00 3.486133e+00 #>  [891] 3.509718e+00 3.521121e+00 4.168441e+00 4.231933e+00 4.102403e+00 #>  [896] 4.679260e+00 4.743800e+00 4.725551e+00 4.561994e+00 4.283968e+00 #>  [901] 7.056977e+00 6.998673e+00 7.150757e+00 7.487719e+00 7.743352e+00 #>  [906] 7.646370e+00 7.946741e+00 7.849936e+00 7.923419e+00 7.967702e+00 #>  [911] 7.598443e+00 6.945283e+00 7.111511e+00 7.348870e+00 6.953052e+00 #>  [916] 6.778698e+00 6.514898e+00 6.673636e+00 6.556584e+00 7.671907e+00 #>  [921] 7.775740e+00 7.451732e+00 7.926613e+00 7.886241e+00 8.068007e+00 #>  [926] 8.167266e+00 8.596204e+00 8.472689e+00 7.850879e+00 7.983638e+00 #>  [931] 8.451233e+00 9.541136e+00 9.182259e+00 9.292638e+00 1.018876e+01 #>  [936] 1.025564e+01 1.062475e+01 1.168155e+01 1.190215e+01 1.233975e+01 #>  [941] 1.218232e+01 1.259071e+01 1.273104e+01 1.272826e+01 1.335192e+01 #>  [946] 1.402409e+01 1.259967e+01 1.369030e+01 1.334952e+01 1.369553e+01 #>  [951] 1.447513e+01 1.417808e+01 1.419717e+01 1.364550e+01 1.344800e+01 #>  [956] 1.345863e+01 1.374747e+01 1.391619e+01 1.368038e+01 1.357988e+01 #>  [961] 1.377287e+01 1.447251e+01 1.446824e+01 1.580375e+01 1.543603e+01 #>  [966] 1.570522e+01 1.610266e+01 1.609892e+01 1.635814e+01 1.653050e+01 #>  [971] 1.557268e+01 1.586664e+01 1.605245e+01 1.608381e+01 1.610675e+01 #>  [976] 1.613440e+01 1.613281e+01 1.576083e+01 1.535443e+01 1.585087e+01 #>  [981] 1.596046e+01 1.527488e+01 1.467493e+01 1.554740e+01 1.538206e+01 #>  [986] 1.537146e+01 1.510605e+01 1.488399e+01 1.397109e+01 1.182643e+01 #>  [991] 1.103888e+01 1.078587e+01 1.031130e+01 1.037558e+01 1.057237e+01 #>  [996] 1.040628e+01 1.051652e+01 1.108723e+01 1.019780e+01 1.093881e+01 #> [1001] 1.184996e+01 1.116305e+01 1.076380e+01 1.027064e+01 1.098828e+01 #> [1006] 1.085765e+01 1.103940e+01 1.023432e+01 1.022928e+01 1.215685e+01 #> [1011] 1.192809e+01 1.182669e+01 1.229047e+01 1.242644e+01 9.531662e+00 #> [1016] 9.771542e+00 9.928226e+00 1.076947e+01 1.083338e+01 1.024602e+01 #> [1021] 1.020822e+01 1.028727e+01 1.030058e+01 1.010566e+01 1.048839e+01 #> [1026] 1.041714e+01 9.559291e+00 9.577248e+00 9.887646e+00 1.034046e+01 #> [1031] 1.043899e+01 1.025333e+01 1.042792e+01 1.046337e+01 9.688415e+00 #> [1036] 9.491946e+00 9.294928e+00 1.012643e+01 1.124710e+01 1.168827e+01 #> [1041] 1.450945e+01 1.489297e+01 1.501958e+01 1.486392e+01 1.474585e+01 #> [1046] 1.479544e+01 1.536120e+01 1.574117e+01 1.643632e+01 1.713792e+01 #> [1051] 1.662759e+01 1.579071e+01 1.525674e+01 1.502628e+01 1.651904e+01 #> [1056] 1.652267e+01 1.730900e+01 1.729331e+01 1.866814e+01 1.902420e+01 #> [1061] 1.711500e+01 1.759087e+01 1.734444e+01 1.659481e+01 1.710217e+01 #> [1066] 1.718665e+01 1.702050e+01 1.686682e+01 1.611886e+01 1.653948e+01 #> [1071] 1.726611e+01 1.700947e+01 1.676143e+01 1.556701e+01 1.580898e+01 #> [1076] 1.666574e+01 1.705653e+01 1.827755e+01 1.928318e+01 1.913154e+01 #> [1081] 1.903307e+01 1.885907e+01 1.897217e+01 1.832425e+01 1.805049e+01 #> [1086] 1.848665e+01 1.851450e+01 1.887459e+01 1.710561e+01 1.508844e+01 #> [1091] 1.424360e+01 1.298450e+01 1.267487e+01 1.260627e+01 1.322830e+01 #> [1096] 1.302658e+01 1.306316e+01 1.220803e+01 1.187895e+01 1.230182e+01 #> [1101] 1.108212e+01 1.159684e+01 1.187704e+01 1.233265e+01 1.213593e+01 #> [1106] 1.156568e+01 1.159522e+01 9.126036e+00 8.813854e+00 7.979494e+00 #> [1111] 7.330222e+00 7.555373e+00 8.096769e+00 7.910124e+00 7.722796e+00 #> [1116] 5.862083e+00 5.807563e+00 7.000009e+00 7.350891e+00 7.466724e+00 #> [1121] 6.225417e+00 6.811142e+00 8.103863e+00 9.223694e+00 1.223148e+01 #> [1126] 1.258952e+01"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"generic function applying function rolling margins array.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"","code":"roll_normchisq(   obs,   prd,   unc = NULL,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_rayleigh(   obs,   prd,   unc = NULL,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_dispersion(   x,   y,   w = NULL,   w.y = NULL,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_confidence(   x,   conf.level = 0.95,   w = NULL,   axial = TRUE,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_dispersion_CI(   x,   y,   w = NULL,   w.y = NULL,   R,   conf.level = 0.95,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )  roll_dispersion_sde(   x,   y,   w = NULL,   w.y = NULL,   R,   conf.level = 0.95,   width = NULL,   by.column = FALSE,   partial = TRUE,   fill = NA,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"obs Numeric vector containing observed azimuth \\(\\sigma_{Hmax}\\), length prd prd Numeric vector containing modeled azimuths \\(\\sigma_{Hmax}\\), .e. return object model_shmax() unc Uncertainty observed \\(\\sigma_{Hmax}\\), either numeric vector number width integer specifying window width (numbers observations) aligned original sample according align argument. NULL, optimal width estimated. .column logical. TRUE, FUN applied column separately. partial logical numeric. FALSE FUN applied indexes rolling window within observed time range. TRUE (default), subset indexes range passed FUN. numeric argument partial can used determine minimal window size partial computations. See details. fill three-component vector list (recycled otherwise) providing filling values left/within/right data range. See fill argument zoo::na.fill() details ... optional arguments passed zoo::rollapply() x, y numeric. Directions degrees w, w.y (optional) Weights x y, respectively. vector positive numbers length x. conf.level Level confidence: \\((1 - \\alpha \\%)/100\\). (0.95 default). axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). R number bootstrap replicates.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"numeric vector test statistic rolling test. roll_dispersion_CI returns 2-column matrix lower upper confidence limits","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"rolling functions applied values function distance recommended sort values first.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Rolling Functions using Circular Statistical Tests for Uniformity — rolling_test","text":"","code":"data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\") data(\"san_andreas\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") distance <- distance_from_pb(   x = san_andreas,   PoR = PoR,   pb = plate_boundary,   tangential = TRUE ) dat <- san_andreas[order(distance), ] dat.PoR <- PoR_shmax(san_andreas, PoR, \"right\") roll_normchisq(dat.PoR$azi.PoR, 135, dat$unc) #>    [1] 0.212113110 0.202887732 0.194371134 0.191274209 0.183838521 0.294356395 #>    [7] 0.278116904 0.271853922 0.268274264 0.259751652 0.145568168 0.143219433 #>   [13] 0.173195798 0.172032164 0.169330811 0.168220825 0.201936707 0.191790676 #>   [19] 0.194154828 0.383387888 0.412221161 0.414151397 0.426755504 0.375922991 #>   [25] 0.379064969 0.384601558 0.385701487 0.402870725 0.437368049 0.484418547 #>   [31] 0.487938766 0.486518265 0.488811625 0.496560370 0.498238580 0.502719103 #>   [37] 0.465905594 0.476443802 0.477764995 0.478696203 0.486103976 0.778415108 #>   [43] 0.767802542 0.736398444 0.737886920 0.756794188 0.783399490 0.736861359 #>   [49] 0.736221091 0.722011057 0.499739450 0.459607144 0.456043845 0.442298915 #>   [55] 0.455521057 0.449260580 0.437020681 0.429212837 0.402661909 0.397502312 #>   [61] 0.372886543 0.366481274 0.375882589 0.378057801 0.369212457 0.363223409 #>   [67] 0.411776313 0.403851231 0.443091835 0.442067853 0.435584377 0.480446676 #>   [73] 0.463477822 0.492783166 0.548370137 0.537967842 0.514381537 0.467193232 #>   [79] 0.468115705 0.487575605 0.567980091 0.567786668 0.560583892 0.580578252 #>   [85] 0.582244637 0.590588062 0.612898980 0.593532863 0.575487593 0.550644349 #>   [91] 0.474320373 0.470870392 0.181530116 0.182157803 0.182793155 0.184089048 #>   [97] 0.199625866 0.200534274 0.199748805 0.184246014 0.184250303 0.184930262 #>  [103] 0.173619537 0.467318756 0.097855789 0.096833628 0.096758082 0.096779828 #>  [109] 0.084770999 0.084810847 0.086691827 0.093666483 0.091077194 0.091583771 #>  [115] 0.209268325 0.200085718 0.200015844 0.199933756 0.202727531 0.198905326 #>  [121] 0.199066218 0.191519509 0.190637809 0.190321580 0.190072219 0.190046746 #>  [127] 0.193268174 0.195267732 0.193878288 0.194003392 0.192547075 0.190945094 #>  [133] 0.182671077 0.166426838 0.137837323 0.185736495 0.181576218 0.181623204 #>  [139] 0.178340854 0.200520407 0.200370545 0.198393709 0.201344068 0.321356697 #>  [145] 0.318573692 0.194084622 0.321208519 0.283859943 0.268960384 0.260173879 #>  [151] 0.259025582 0.283756999 0.296900191 0.284040889 0.268405031 0.309980690 #>  [157] 0.393070273 0.390376895 0.387707014 0.371863784 0.366376031 0.368381909 #>  [163] 0.371157395 0.381656893 0.422877322 0.448587662 0.461563884 0.617634088 #>  [169] 0.644239803 0.638272715 0.608692178 0.594362357 0.583175780 0.592314753 #>  [175] 0.526703600 0.531635055 0.531065782 0.454398383 0.505517272 0.505710867 #>  [181] 0.510778394 0.513477348 0.489928198 0.504676955 0.543353143 0.618990674 #>  [187] 0.546457077 0.283378614 0.269543798 0.269532004 0.289713967 0.294027378 #>  [193] 0.299124515 0.281022650 0.282981215 0.272544978 0.280862457 0.278167252 #>  [199] 0.148719260 0.120771077 0.120338214 0.114944073 0.116643818 0.118991055 #>  [205] 0.118979198 0.117338601 0.108632414 0.108648493 0.109401544 0.108295816 #>  [211] 0.120253119 0.120665325 0.120346414 0.120208384 0.107531050 0.099150435 #>  [217] 0.098307487 0.097104316 0.109224209 0.108501336 0.109212726 0.097887661 #>  [223] 0.097760700 0.131682263 0.127198048 0.126594480 0.126866293 0.124959932 #>  [229] 0.127327609 0.124089508 0.123651510 0.125650548 0.133796513 0.134712154 #>  [235] 0.133244435 0.133215022 0.135937170 0.146986676 0.146866367 0.146488510 #>  [241] 0.145592616 0.142687599 0.142742775 0.135572475 0.135740478 0.135837891 #>  [247] 0.135901486 0.167587356 0.167022533 0.166877600 0.150184619 0.147960641 #>  [253] 0.147832450 0.153073727 0.034241301 0.043987026 0.041133666 0.045016023 #>  [259] 0.029387677 0.019530528 0.019625720 0.021194013 0.021188567 0.021480243 #>  [265] 0.032114501 0.032432918 0.032574630 0.032094184 0.032637951 0.032659209 #>  [271] 0.032712332 0.033809924 0.034044024 0.033410910 0.065030987 0.064508384 #>  [277] 0.063810656 0.063595372 0.063843278 0.070109927 0.070112313 0.072555045 #>  [283] 0.072354867 0.072349014 0.072339578 0.072338879 0.072363072 0.075421055 #>  [289] 0.074638733 0.103123109 0.103196729 0.103117357 0.110156332 0.110077171 #>  [295] 0.109942561 0.174249849 0.185403627 0.172348101 0.173581906 0.178638355 #>  [301] 0.179915174 0.179804377 0.178659947 0.178550400 0.193393170 0.079726047 #>  [307] 0.083162426 0.088986878 0.089987208 0.090708950 0.044184245 0.043805942 #>  [313] 0.044275727 0.051256827 0.054280973 0.056723971 0.057006445 0.057024154 #>  [319] 0.045835845 0.061350598 0.061355662 0.060414570 0.060242759 0.060145468 #>  [325] 0.060716532 0.057544074 0.043479564 0.044057570 0.057605838 0.068953270 #>  [331] 0.023402491 0.022731157 0.025361860 0.025247665 0.025610876 0.024942575 #>  [337] 0.024889904 0.025095747 0.025221429 0.025221163 0.018898533 0.019099054 #>  [343] 0.018817332 0.019287795 0.016158609 0.059201718 0.057794911 0.057785203 #>  [349] 0.056971576 0.055134132 0.056656713 0.053398282 0.053358417 0.053423282 #>  [355] 0.305552185 0.305494751 0.289217130 0.290927689 0.290664853 0.279505534 #>  [361] 0.282409402 0.372941246 0.371514475 0.347490327 0.348380001 0.349930630 #>  [367] 0.350031997 0.309670977 0.323921363 0.323556230 0.323576086 0.368797982 #>  [373] 0.368700267 0.368681749 0.368298523 0.364727096 0.383213100 0.412889727 #>  [379] 0.413609332 0.424336514 0.424456922 0.409000526 0.478855669 0.478237911 #>  [385] 0.477968253 0.111350289 0.111446324 0.121412715 0.130932866 0.130450553 #>  [391] 0.096541271 0.083896406 0.082550827 0.082700996 0.106564433 0.108150175 #>  [397] 0.106892607 0.106838970 0.117192212 0.102159628 0.091295626 0.082293558 #>  [403] 0.082321183 0.083474853 0.079820626 0.079722173 0.078424027 0.075309335 #>  [409] 0.054574060 0.054132812 0.073536617 0.073440710 0.072751541 0.072506054 #>  [415] 0.072395455 0.067600087 0.069689642 0.069626645 0.064027803 0.060294445 #>  [421] 0.060278964 0.067165384 0.070163177 0.066617502 0.066660386 0.053088715 #>  [427] 0.052121484 0.052027658 0.052008474 0.052033966 0.045941301 0.049352526 #>  [433] 0.052041590 0.050534719 0.048920737 0.050710902 0.047118963 0.047346516 #>  [439] 0.048624917 0.052694659 0.050912226 0.022063042 0.022937341 0.023135836 #>  [445] 0.023192022 0.023455766 0.029699933 0.030654058 0.030668014 0.029886504 #>  [451] 0.029943734 0.030002912 0.028843716 0.028983308 0.037637707 0.035460452 #>  [457] 0.035509440 0.035495685 0.035509671 0.035434351 0.036705752 0.038576971 #>  [463] 0.038174449 0.038971136 0.025849892 0.025801431 0.025795727 0.025446645 #>  [469] 0.026106697 0.034719640 0.035187749 0.035398022 0.040384757 0.039993041 #>  [475] 0.040037036 0.038308519 0.038202359 0.036570987 0.036469384 0.034110094 #>  [481] 0.034831107 0.035328786 0.035340419 0.035356388 0.035254695 0.027935286 #>  [487] 0.029563912 0.029507880 0.039612408 0.039656618 0.039360993 0.038183180 #>  [493] 0.037986861 0.038351029 0.038280550 0.069963362 0.070139578 0.070080361 #>  [499] 0.069886358 0.068248819 0.053254763 0.048582827 0.048032886 0.034673985 #>  [505] 0.034627179 1.109408405 1.172323118 1.142208165 1.143143801 1.094397483 #>  [511] 1.241451641 1.259235282 1.116988287 1.116796131 1.116340003 1.116391737 #>  [517] 0.834011238 0.834087421 0.833580528 0.848209596 0.847206859 0.852490728 #>  [523] 0.845788115 0.845787559 0.845779417 0.865648203 0.867703206 0.867702810 #>  [529] 0.867976719 0.868874252 0.874713939 0.871053993 0.905402372 0.910107530 #>  [535] 0.948129438 0.947844817 0.138754551 0.121892381 0.119428372 0.119367134 #>  [541] 0.107910229 0.106041608 0.093452425 0.095900257 0.090784097 0.090708824 #>  [547] 0.090660487 0.021169811 0.020821943 0.019933922 0.012927974 0.019922453 #>  [553] 0.019888626 0.019869816 0.019882661 0.019897311 0.019557810 0.019481845 #>  [559] 0.021177381 0.021176608 0.021404218 0.021443012 0.021570845 0.021398550 #>  [565] 0.021408194 0.021407940 0.020313135 0.020311609 0.020979634 0.020848079 #>  [571] 0.020889631 0.020944770 0.022202222 0.025248450 0.023800285 0.025014757 #>  [577] 0.025053947 0.025488200 0.023906389 0.023926987 0.022716892 0.022070407 #>  [583] 0.017488215 0.017544325 0.017802266 0.012931335 0.012983706 0.013385038 #>  [589] 0.013384990 0.010226885 0.010229248 0.009887777 0.009853797 0.009846015 #>  [595] 0.009821570 0.009817272 0.009812437 0.010472673 0.009796486 0.010198618 #>  [601] 0.009969114 0.009957421 0.010498231 0.008968123 0.008972853 0.008873847 #>  [607] 0.009214391 0.009202718 0.008788489 0.009777368 0.009766671 0.010115408 #>  [613] 0.011260678 0.011041850 0.012135801 0.011872228 0.016479838 0.019034174 #>  [619] 0.019031888 0.019044423 0.019463830 0.019547341 0.019699345 0.020998084 #>  [625] 0.021387038 0.021482945 0.021541286 0.021562606 0.019815413 0.021557093 #>  [631] 0.021572065 0.022300808 0.022287260 0.024488781 0.022305905 0.022298545 #>  [637] 0.022544478 0.023450909 0.022001188 0.022010973 0.022397840 0.022399426 #>  [643] 0.022356213 0.021111448 0.019097606 0.017310379 0.017932576 0.016510641 #>  [649] 0.012296010 0.012299249 0.012556051 0.012518957 0.012401294 0.011906547 #>  [655] 0.009105927 0.007240448 0.006731782 0.006641980 0.006666364 0.007551663 #>  [661] 0.007551894 0.007576769 0.007550225 0.007441747 0.008876990 0.011914413 #>  [667] 0.011189773 0.011620052 0.011596385 0.011670125 0.011663400 0.011337954 #>  [673] 0.011393880 0.010349263 0.010346770 0.009698349 0.009933200 0.009428893 #>  [679] 0.009411084 0.009412039 0.009421085 0.008959784 0.011063046 0.011025788 #>  [685] 0.011225089 0.011240645 0.012738688 0.013098823 0.012930378 0.012927212 #>  [691] 0.013000231 0.013315794 0.013439736 0.013528541 0.013603630 0.012763409 #>  [697] 0.010592569 0.011192462 0.008530248 0.008541647 0.008554837 0.008550678 #>  [703] 0.008734768 0.008866944 0.009467062 0.009477612 0.009449255 0.009479755 #>  [709] 0.018534024 0.018195604 0.018194559 0.018185740 0.017408777 0.018031233 #>  [715] 0.036360816 0.036395658 0.022957016 0.022957389 0.036857232 0.038390234 #>  [721] 0.037589686 0.037581758 0.037453343 0.037433024 0.037411495 0.037379545 #>  [727] 0.036149022 0.036301818 0.036506641 0.040304767 0.040355036 0.040352224 #>  [733] 0.040362220 0.043531100 0.040783314 0.040447301 0.040444712 0.042557017 #>  [739] 0.042557210 0.039571849 0.040282654 0.040283690 0.037989521 0.038846742 #>  [745] 0.039135186 0.030052612 0.030030049 0.053705396 0.054142064 0.033589953 #>  [751] 0.034493361 0.035754822 0.032560244 0.032582845 0.032624566 0.032647589 #>  [757] 0.032860725 0.034664475 0.034615687 0.034648715 0.033813059 0.033816900 #>  [763] 0.034712437 0.033611243 0.033608195 0.036068642 0.035661568 0.035178472 #>  [769] 0.032923527 0.030922952 0.030215558 0.030128912 0.030128303 0.030450428 #>  [775] 0.029453366 0.030705613 0.031143731 0.031161207 0.027482938 0.026772456 #>  [781] 0.026370613 0.026390864 0.025425725 0.027287094 0.026082984 0.020684461 #>  [787] 0.507417576 0.501803719 0.410825093 0.405075223 0.389955590 0.397060798 #>  [793] 0.397065734 0.472886454 0.461622138 0.465891191 0.460326626 0.460404776 #>  [799] 0.447425047 0.456711953 0.480426722 0.480349911 0.481209823 0.481310034 #>  [805] 0.492163072 0.504214497 0.531132352 0.530865252 0.517489198 0.489496583 #>  [811] 0.489487202 0.482139817 0.476539457 0.465802610 0.481866977 0.482123655 #>  [817] 0.585919810 0.065251093 0.065117585 0.094029614 0.102048275 0.109111488 #>  [823] 0.107528344 0.107606527 0.109463339 0.119275343 0.120137757 0.123734479 #>  [829] 0.120497438 0.137692084 0.137628577 0.137833152 0.137740820 0.137738764 #>  [835] 0.137659250 0.138078989 0.137822719 0.129480731 0.114796694 0.120862162 #>  [841] 0.138216285 0.129753417 0.110575192 0.109186721 0.109234768 0.043717692 #>  [847] 0.045659864 0.046226226 0.040563497 0.038672403 0.038792153 0.023245070 #>  [853] 0.023084563 0.023377572 0.023336280 0.016770302 0.013041901 0.015523460 #>  [859] 0.015382471 0.005220235 0.049214550 0.048965054 0.057172775 0.069226857 #>  [865] 0.069226068 0.067342594 0.066592073 0.066692875 0.068998502 0.074187148 #>  [871] 0.069215567 0.069248183 0.077618638 0.085052089 0.091157646 0.092738561 #>  [877] 0.093513219 0.098656660 0.098790106 0.106810062 0.131488848 0.131489312 #>  [883] 0.142464315 0.144199322 0.144195283 0.141916968 0.141976540 0.144201294 #>  [889] 0.149092184 0.151007812 0.210979191 0.158349255 0.155944621 0.095584642 #>  [895] 0.082299859 0.082323545 0.081907007 0.082370671 0.082399551 0.081258766 #>  [901] 0.082385148 0.089445127 0.089420596 0.077565727 0.069303665 0.067497243 #>  [907] 0.066128546 0.064994307 0.055711778 0.056651231 0.052103564 0.030565450 #>  [913] 0.030555171 0.030185218 0.030213599 0.030189833 0.029892398 0.029814208 #>  [919] 0.025403173 0.016976178 0.016361099 0.013729537 0.012793600 0.013065146 #>  [925] 0.018909610 0.018508873 0.018476851 0.018996781 0.017461062 0.021288170 #>  [931] 0.021247547 0.019600641 0.017785886 0.017895812 0.017147795 0.019021346 #>  [937] 0.010891262 0.011581427 0.011339998 0.012116455 0.012933085 0.014523321 #>  [943] 0.014893466 0.014901474 0.015228014 0.015146509 0.016117989 0.013855187 #>  [949] 0.014052942 0.013401402 0.013408432 0.014055014 0.013314555 0.013326725 #>  [955] 0.013369823 0.013807406 0.013476894 0.013265202 0.013851224 0.013303718 #>  [961] 0.012059513 0.012774541 0.012801688 0.013880671 0.013768745 0.013637964 #>  [967] 0.013886154 0.014172604 0.014164970 0.014424554 0.014406380 0.015752765 #>  [973] 0.016365729 0.010555052 0.010549257 0.010542991 0.010563940 0.009974557 #>  [979] 0.010954694 0.010767869 0.011132345 0.011118580 0.011254316 0.011752517 #>  [985] 0.011732186 0.012292265 0.012288616 0.012422320 0.012357110 0.012063179 #>  [991] 0.012779527 0.009415793 0.007887472 0.011879762 0.011728212 0.011711151 #>  [997] 0.011524469 0.011273704 0.011304282 0.010399841 0.010749854 0.010755901 #> [1003] 0.008466060 0.008438620 0.017529192 0.017502895 0.023830302 0.022931711 #> [1009] 0.022607142 0.022519517 0.022120293 0.021737729 0.021703069 0.018391152 #> [1015] 0.018371714 0.018384773 0.017665107 0.017559397 0.017469085 0.020641359 #> [1021] 0.022817783 0.022931296 0.022730871 0.022704981 0.020230670 0.021319278 #> [1027] 0.021437139 0.021773355 0.022472710 0.021435757 0.025682222 0.025562455 #> [1033] 0.048562659 0.052251018 0.055610382 0.055843034 0.056492099 0.043893518 #> [1039] 0.045259663 0.046333733 0.046487106 0.047279748 0.048245088 0.048334013 #> [1045] 0.061297572 0.061321883 0.061149391 0.057745218 0.056285987 0.056742908 #> [1051] 0.063275290 0.061185026 0.061005725 0.062374995 0.063136606 0.063469420 #> [1057] 0.076699038 0.304901842 0.306821357 0.276818493 0.293266588 0.293467725 #> [1063] 0.293475225 0.274243984 0.276209107 0.287457962 0.258620569 0.266034249 #> [1069] 0.353968572 0.355182622 0.355330085 0.354984359 0.355049124 0.355624856 #> [1075] 0.349567578 0.359175973 0.357703391 0.359563937 0.392012085 0.593729661 #> [1081] 0.594118661 0.623995208 0.619953873 0.548113932 0.547544335 0.506728982 #> [1087] 0.507906368 0.489559554 0.029539883 0.029497895 0.035535537 0.035522925 #> [1093] 0.035582809 0.037183158 0.036609378 0.036356371 0.042487959 0.069844936 #> [1099] 0.052344877 0.051998146 0.051895741 0.050827092 0.050684763 0.050504436 #> [1105] 0.050386122 0.051237177 0.044887707 0.045107780 0.044999874 0.045014867 #> [1111] 0.045417006 0.045222134 0.045307093 0.045362192 0.040360691 0.040398746 #> [1117] 0.041696857 0.041333666 0.041335342 0.042481211 0.042494646 0.042498546 #> [1123] 0.042513077 0.042526917 0.041470108 0.041992754 roll_rayleigh(dat.PoR$azi.PoR, prd = 135, unc = dat$unc) #>    [1]  3.8009764  4.0226760  4.2380555  4.4099119  4.6065235  4.3714409 #>    [7]  4.5914168  4.6583924  4.8139448  4.9883592  5.4040862  5.5514338 #>   [13]  5.3842543  5.5198352  5.6629531  5.7944885  5.7920433  5.8715048 #>   [19]  5.7365628  5.3401647  5.1651306  5.0517911  4.8413528  4.9274619 #>   [25]  4.7635791  4.5630733  4.4684131  4.1253941  3.3071079  2.6315681 #>   [31]  2.6202078  2.5256101  2.3862497  2.0452256  1.8081098  1.7420908 #>   [37]  1.7561172  1.4711534  1.3988999  1.1913153  0.9117866 -0.3555533 #>   [43] -0.8468881 -0.6150325 -0.8998120 -1.3439022 -1.6088334 -1.3654822 #>   [49] -1.7052663 -1.7074872 -1.8996364 -1.8832294 -1.7240610 -1.4962313 #>   [55] -1.6273428 -1.3793343 -1.0003154 -0.7829102 -0.4573933 -0.1679062 #>   [61]  0.3319550  0.4419941  0.3197847  0.3958559  0.7331636  0.8780610 #>   [67]  0.6185992  0.7816866  0.7061735  0.7402943  0.9284942  0.9745793 #>   [73]  1.3174197  1.4955802  1.2901774  1.5226626  1.9318737  2.2137680 #>   [79]  2.1764974  2.3151255  2.2764264  2.6163754  2.5755341  2.3904659 #>   [85]  2.3045676  2.3481864  2.1456383  2.1634972  1.9233589  1.9407670 #>   [91]  2.3895759  2.2590101  2.9871814  2.9385450  2.8621256  2.7105774 #>   [97]  2.5883807  2.6088031  2.6768977  2.8037697  2.8034223  2.7495199 #>  [103]  2.7973852  2.4043876  4.1949300  4.2185403  4.2445336  4.2303724 #>  [109]  4.6532631  4.6417300  4.6202906  4.4301379  4.6265096  4.6225954 #>  [115]  4.2111958  4.3802486  4.3900007  4.4065036  4.3206782  4.5133678 #>  [121]  4.4718770  4.5781399  4.5382138  4.5531414  4.6171305  4.6004821 #>  [127]  4.5622835  4.5739655  4.6459593  4.6054084  4.4955973  4.4581585 #>  [133]  4.6622627  4.9116454  5.1501747  4.9811575  5.1260698  5.1365586 #>  [139]  5.2180121  4.9974242  5.0097473  4.9900926  5.2688944  4.7377888 #>  [145]  4.6302708  4.9397708  4.3951228  4.5739419  4.7163280  4.7995703 #>  [151]  4.7458676  4.6339771  4.5325645  4.7490686  4.7988492  4.4655326 #>  [157]  3.6562290  3.7101564  3.7302489  3.8812893  4.0037114  4.0969292 #>  [163]  4.1337400  4.0646491  3.8082626  3.7186493  3.5836843  2.8153276 #>  [169]  2.6943621  2.7120204  2.9494237  3.0457450  3.2046682  3.1090165 #>  [175]  3.3922747  3.4902634  3.5002593  3.8898340  3.7102528  3.7035249 #>  [181]  3.6926022  3.5848176  3.6915523  3.2566035  2.6641942  2.3550632 #>  [187]  2.6387663  3.9603919  3.8997411  3.9030530  3.3096557  3.1690856 #>  [193]  3.0657300  3.1877370  3.0977797  3.3075035  3.2093643  3.3196080 #>  [199]  3.8147027  3.9639597  3.9912302  4.0876904  4.0094032  3.8856049 #>  [205]  3.8779476  3.8906229  4.1375792  4.1406827  4.0786673  4.1330898 #>  [211]  3.8358787  3.8249739  3.8638971  3.9068860  4.3151790  4.6597781 #>  [217]  4.6367291  4.7240679  4.5294751  4.5913215  4.5545997  4.9631215 #>  [223]  4.9519489  4.8064988  4.9818695  5.0521134  5.0354564  5.1132269 #>  [229]  4.9108475  5.0906146  5.0684684  4.9812177  4.8081048  4.7097979 #>  [235]  4.7909888  4.8145308  4.8359045  4.6127392  4.6337184  4.6620357 #>  [241]  4.7299463  5.1989153  5.2007142  5.3444722  5.3338479  5.3252377 #>  [247]  5.2844215  5.5015278  5.5255112  5.5455934  5.7551720  5.8491415 #>  [253]  6.0020518  6.1174180  6.5234566  6.3602492  6.3921143  6.2946823 #>  [259]  6.4448536  6.7966594  6.8114712  6.8533523  6.8478396  6.7917062 #>  [265]  6.7404954  6.7075524  6.6598850  6.7257824  6.6669084  6.6578756 #>  [271]  6.6295432  6.4770914  6.4388020  6.4832943  5.5900415  5.6350102 #>  [277]  5.6712163  5.7114254  5.6906987  5.4507144  5.4494494  5.3295135 #>  [283]  5.3454593  5.3525603  5.3547087  5.3552503  5.3456483  5.1685158 #>  [289]  5.2273976  4.8435326  4.8154384  4.8447797  4.7389620  4.7622459 #>  [295]  4.8065019  4.5463786  4.4241465  4.6735601  4.6195776  4.5683549 #>  [301]  4.4876173  4.4983557  4.6046901  4.6280836  4.3576261  5.7232844 #>  [307]  5.5892988  5.5149225  5.5042458  5.4000509  6.0223710  6.0223765 #>  [313]  5.9665208  5.5987915  5.3564325  5.1505135  5.1138704  5.1103264 #>  [319]  5.0085920  4.6437797  4.6433233  4.6966844  4.7119321  4.7157422 #>  [325]  4.6671438  4.7847877  5.1229254  5.0623514  4.7574908  4.4417549 #>  [331]  5.2992143  5.3947561  5.3778455  5.4403788  5.3798895  5.4842229 #>  [337]  5.4866558  5.4570075  5.4213632  5.4214112  5.8848058  5.8226374 #>  [343]  5.8753628  5.8043577  6.0539036  5.4366530  5.6232333  5.6250911 #>  [349]  5.6910975  5.8843457  5.7608881  5.8220522  5.8227703  5.8049625 #>  [355]  4.9867964  4.9997023  5.0602877  4.9949903  5.0040544  4.9016182 #>  [361]  4.7081617  4.3697564  4.4010450  4.6335955  4.6560831  4.5168836 #>  [367]  4.4962629  4.6785073  4.5721647  4.5907592  4.5864138  4.3203966 #>  [373]  4.3487244  4.3525835  4.4144862  4.4926596  4.8223725  4.6072003 #>  [379]  4.5141123  4.3300917  4.3092235  4.3643801  4.0725588  4.0752610 #>  [385]  4.0270745  5.0890504  5.0727695  4.9485478  4.6600107  4.7073769 #>  [391]  5.1278626  5.5212425  5.5261505  5.5172344  4.8883286  4.8219275 #>  [397]  4.9544374  4.9671266  4.8137452  4.8702730  5.0951356  5.2974942 #>  [403]  5.2904915  5.2072759  5.3086130  5.3054001  5.3092237  5.5116452 #>  [409]  5.7886769  5.8733741  5.5431171  5.5685278  5.6233304  5.6812941 #>  [415]  5.7106238  5.8619170  5.8214917  5.8388886  5.9116969  6.0579533 #>  [421]  6.0592698  5.9028421  5.8549426  5.9290847  5.9230339  6.3124099 #>  [427]  6.3474396  6.3716859  6.3712742  6.3643525  6.5751830  6.5007522 #>  [433]  6.4601874  6.4942431  6.6023313  6.5608226  6.6105368  6.6273024 #>  [439]  6.5761570  6.4768645  6.4865114  7.0665177  6.9775035  6.9641207 #>  [445]  6.9480952  6.8983426  6.7321134  6.6822771  6.6779595  6.7127365 #>  [451]  6.7156996  6.7047992  6.7996299  6.7597677  6.5224451  6.5989475 #>  [457]  6.5849203  6.5894026  6.5869443  6.5986038  6.4840011  6.3813298 #>  [463]  6.4122144  6.3683980  6.5743925  6.5894757  6.5919376  6.5681454 #>  [469]  6.5152736  6.2765037  6.2100109  6.1938699  5.9196503  5.9591129 #>  [475]  5.9525355  6.0615951  6.0890482  6.1133293  6.1052318  6.2097769 #>  [481]  6.1809807  6.1279722  6.1228966  6.1150307  6.1530538  6.3925301 #>  [487]  6.2769506  6.2963480  5.9149510  5.8893967  5.9197568  6.0435746 #>  [493]  6.0937706  6.0500252  6.0659017  5.6712061  5.6561466  5.6631532 #>  [499]  5.6959052  5.8103003  6.1041841  6.2856934  6.3124484  6.7350445 #>  [505]  6.7526662  5.3328362  5.1405278  5.0268745  5.0189827  4.7556008 #>  [511]  4.4177674  4.3226462  4.3877324  4.3986242  4.3864751  4.3668415 #>  [517]  3.8415608  3.8105495  3.7572457  3.8662737  3.8781533  3.8024873 #>  [523]  3.8666592  3.8669390  3.8710016  3.8494432  3.7952255  3.7954264 #>  [529]  3.7886763  3.7566070  3.6692659  3.7549840  3.5687315  3.4964709 #>  [535]  3.2568993  3.2375962  4.1988463  4.5693362  4.7583546  4.7700245 #>  [541]  5.2514401  5.3371316  5.5836408  5.5720161  5.7076844  5.7361211 #>  [547]  5.7548146  6.6747571  6.7497126  6.8631356  7.1661126  7.1387319 #>  [553]  7.1485276  7.1565607  7.1518178  7.1455294  7.1632663  7.1938532 #>  [559]  7.1243076  7.1246500  7.0777273  7.0619296  7.0390366  7.0502095 #>  [565]  7.0460241  7.0461354  7.1269183  7.1275790  7.1144270  7.1290320 #>  [571]  7.1121483  7.1153566  7.0263736  6.9309307  7.0871336  7.0436547 #>  [577]  7.0279752  6.9580967  7.0237809  7.0159088  7.0656248  7.0976603 #>  [583]  7.1509228  7.1410032  7.1292656  7.2159603  7.1969760  7.1645965 #>  [589]  7.1646158  7.2538084  7.2529136  7.3176402  7.3294604  7.3322882 #>  [595]  7.3179973  7.3196388  7.3206736  7.2748887  7.3174353  7.2991035 #>  [601]  7.3233897  7.3274025  7.3257412  7.4034295  7.4018951  7.4081226 #>  [607]  7.3980110  7.4022894  7.4617420  7.4152313  7.4204160  7.4001328 #>  [613]  7.3293784  7.3505013  7.3083542  7.3266798  7.2145352  7.1344373 #>  [619]  7.1350243  7.1317982  7.1037351  7.0812793  7.0446435  7.0015216 #>  [625]  6.9658445  6.9466617  6.9322029  6.9297692  6.9919821  6.9360314 #>  [631]  6.9359679  6.9003473  6.9056706  6.8582123  6.9300305  6.9322142 #>  [637]  6.9304316  6.9077198  6.9572920  6.9567223  6.9482702  6.9479116 #>  [643]  6.9515005  6.9935996  7.0317215  7.0920071  7.0703310  7.1323816 #>  [649]  7.2797165  7.2789652  7.2730728  7.2837739  7.3123880  7.3768361 #>  [655]  7.4707400  7.5723437  7.6294476  7.6501233  7.6365569  7.6158299 #>  [661]  7.6157762  7.6108354  7.6129484  7.6322914  7.5873973  7.5016922 #>  [667]  7.5143056  7.4995119  7.5017914  7.5094576  7.5094771  7.5213549 #>  [673]  7.5083260  7.5325271  7.5330840  7.5505605  7.5385226  7.5552273 #>  [679]  7.5590298  7.5588248  7.5559471  7.5811102  7.5295479  7.5335849 #>  [685]  7.5246211  7.5207986  7.4726008  7.4616877  7.4511248  7.4583928 #>  [691]  7.4391162  7.3663752  7.3477930  7.3296255  7.3097192  7.3415716 #>  [697]  7.4108679  7.3971049  7.4579196  7.4555783  7.4519224  7.4530845 #>  [703]  7.4476299  7.4561684  7.4312272  7.4280077  7.4350087  7.4258956 #>  [709]  7.0402301  7.0571351  7.0574578  7.0617424  7.0996892  7.0676126 #>  [715]  6.6694506  6.6590329  6.8520923  6.8519431  6.4305917  6.4084765 #>  [721]  6.4571987  6.4603093  6.5054280  6.5144783  6.5233250  6.5363200 #>  [727]  6.5787558  6.5313991  6.5025455  6.3873817  6.3777570  6.3789345 #>  [733]  6.3747429  6.3085812  6.3705281  6.3935731  6.3946285  6.3109566 #>  [739]  6.3108785  6.4748622  6.4334581  6.4330104  6.4986892  6.4482782 #>  [745]  6.4177039  6.7154107  6.7251182  6.3305818  6.2873680  6.7493642 #>  [751]  6.7021584  6.6349968  6.7169008  6.7089179  6.6943423  6.6861496 #>  [757]  6.6430666  6.5652724  6.5788202  6.5680785  6.5948828  6.5935242 #>  [763]  6.5726374  6.6268463  6.6166343  6.5336046  6.5536120  6.5728196 #>  [769]  6.6475080  6.7146698  6.7650154  6.7794236  6.7796937  6.7856605 #>  [775]  6.8289457  6.7951435  6.7144060  6.7071984  6.8298957  6.8626300 #>  [781]  6.8792728  6.8835163  6.9079361  6.8299008  6.8912380  7.0015796 #>  [787]  6.0163438  6.0122154  6.2204126  6.1425868  6.1444583  6.0989032 #>  [793]  6.0960645  6.0523843  5.9953897  5.9809299  6.0119639  6.0050568 #>  [799]  6.0646252  6.0470109  5.9603972  5.9635782  5.9491881  5.9455451 #>  [805]  5.8887041  5.8061717  5.7950246  5.8853181  5.9732814  6.0823911 #>  [811]  6.0870659  5.9101223  5.9091390  5.9880310  5.4746408  5.4577417 #>  [817]  5.2707270  6.1122283  6.1476002  5.8914181  5.6630705  5.6189255 #>  [823]  5.6917900  5.6717819  5.5205792  5.3648829  5.3234466  5.2409763 #>  [829]  5.1513716  4.9276129  4.9311062  4.9119471  4.9191467  4.9197661 #>  [835]  4.9279994  4.9067226  4.9284386  5.0788600  5.2524574  5.1451191 #>  [841]  4.9257758  5.0964128  5.5027153  5.5709099  5.5690717  6.3996033 #>  [847]  6.3505896  6.3516898  6.4629921  6.5251098  6.5305634  6.9956120 #>  [853]  7.0212710  7.0015348  7.0204503  7.2546561  7.4319928  7.3177294 #>  [859]  7.3364381  7.5758512  6.6373203  6.6380954  6.2967852  5.8571844 #>  [865]  5.8575150  5.9140999  5.9521732  5.9288108  5.8269399  5.7064296 #>  [871]  5.8056184  5.7949902  5.5020401  5.2531486  4.9733900  4.9279397 #>  [877]  4.8748128  4.6501529  4.6413348  4.4356018  3.8468806  3.8466965 #>  [883]  3.5913827  3.5047372  3.5063687  3.5980838  3.5747958  3.4337303 #>  [889]  3.2399646  3.1314247  2.6243872  3.4856680  3.5559170  4.4347422 #>  [895]  4.9040235  4.8947864  4.9147451  4.8681764  4.8584188  4.9539017 #>  [901]  4.9069266  4.6968216  4.7060324  5.0263494  5.3119712  5.3353762 #>  [907]  5.3805053  5.4404286  5.8042262  5.7551186  5.8891916  6.3736754 #>  [913]  6.3778774  6.4150494  6.4042961  6.4086547  6.4235896  6.4520053 #>  [919]  6.6805534  7.0121062  7.0574686  7.1278540  7.1632384  7.1481292 #>  [925]  7.0632833  7.0661868  7.0761729  7.0612988  7.1363275  7.0285576 #>  [931]  7.0212068  7.0860690  7.1559677  7.1235338  7.1343047  7.0972088 #>  [937]  7.4211243  7.3845143  7.3982952  7.3692740  7.3236806  7.2926390 #>  [943]  7.2674044  7.2651932  7.2494383  7.2707866  7.2160604  7.2709693 #>  [949]  7.2592182  7.2859369  7.2844619  7.2653239  7.2931942  7.2890829 #>  [955]  7.2866773  7.2653564  7.2729944  7.2854853  7.2623655  7.2799890 #>  [961]  7.3194184  7.3054246  7.3000906  7.2732598  7.3034536  7.2939752 #>  [967]  7.2784611  7.2587903  7.2610493  7.2443255  7.2476264  7.2151719 #>  [973]  7.1878133  7.3178577  7.3196896  7.3209476  7.3153852  7.3630394 #>  [979]  7.3177752  7.3314555  7.3069549  7.3114731  7.2753974  7.2354118 #>  [985]  7.2435347  7.2105518  7.2121355  7.1900325  7.1955910  7.1910953 #>  [991]  7.1347601  7.2880971  7.3134271  7.2086291  7.2057126  7.2128669 #>  [997]  7.2633898  7.2889103  7.2827956  7.3395318  7.3146186  7.3129342 #> [1003]  7.4103601  7.4195348  7.2942026  7.2981379  7.0992950  7.1390520 #> [1009]  7.1465313  7.1586685  7.1776139  7.1915965  7.1934443  7.2745003 #> [1015]  7.2818511  7.2803398  7.3223173  7.3164073  7.3219884  7.2252422 #> [1021]  7.1064748  7.0767284  7.0898486  7.0926262  7.1577183  7.0910262 #> [1027]  7.0669482  7.0454874  7.0102880  7.0552320  6.9642691  6.9806132 #> [1033]  6.6818786  6.4781870  6.3170674  6.2636653  6.1998460  6.4505888 #> [1039]  6.3934811  6.3066645  6.2890004  6.2440530  6.1974448  6.1863488 #> [1045]  5.9291308  5.9213092  5.9328110  6.0188874  5.9827314  5.9564372 #> [1051]  5.8401024  5.9542706  5.9990806  5.8604910  5.7305277  5.6611347 #> [1057]  5.5320711  4.9191569  4.8855626  5.0801416  4.9167770  4.9246535 #> [1063]  4.9227056  5.1813558  5.3701048  5.4521374  5.6506514  5.6227556 #> [1069]  5.2554139  5.2312640  5.2915062  5.2789997  5.2560232  5.2384856 #> [1075]  5.2931302  5.3355317  5.3671791  5.3299528  5.1449633  4.9717691 #> [1081]  4.9086966  4.9356299  4.9404692  4.9195303  5.0318322  5.2789732 #> [1087]  5.2782048  5.4957054  6.5858934  6.5936185  6.4688226  6.4751513 #> [1093]  6.4655490  6.3370631  6.3869984  6.4014466  6.1627366  5.6706909 #> [1099]  5.8965389  5.9534211  5.9726493  6.0270944  6.0524589  6.0881125 #> [1105]  6.1017792  6.0824855  6.2426542  6.2294533  6.2458358  6.2402451 #> [1111]  6.2122966  6.1457625  6.0349289  5.9256244  5.9632196  5.8411451 #> [1117]  5.6842855  5.6491103  5.5296946  5.3321634  5.2014644  5.0739980 #> [1123]  4.9369620  4.7972654  4.7563584  4.5660950 roll_dispersion(dat.PoR$azi.PoR, y = 135, w = 1 / dat$unc) #>    [1] 0.082018989 0.077529188 0.073414353 0.071154456 0.067911172 0.081368005 #>    [7] 0.076954467 0.078289377 0.076291731 0.073634870 0.062647021 0.061136387 #>   [13] 0.070124690 0.068802534 0.067228975 0.066024807 0.066102441 0.063579538 #>   [19] 0.067863949 0.080449601 0.086006938 0.089605474 0.096286893 0.093552927 #>   [25] 0.098756213 0.105122279 0.108127742 0.119018607 0.144999220 0.166447629 #>   [31] 0.166808320 0.169811801 0.174236496 0.185064023 0.192592455 0.194688563 #>   [37] 0.194243224 0.203290832 0.205584883 0.212175700 0.221050746 0.261288829 #>   [43] 0.276888724 0.269527300 0.278569061 0.292668939 0.301080510 0.293354104 #>   [49] 0.304142261 0.304212772 0.310313516 0.309792594 0.304738993 0.297505391 #>   [55] 0.301668187 0.293793907 0.281760045 0.274857423 0.264522250 0.255331028 #>   [61] 0.239460417 0.235966672 0.239846826 0.237431561 0.226722032 0.222121535 #>   [67] 0.230359455 0.225181425 0.227578970 0.226495632 0.220520280 0.219057076 #>   [73] 0.208171881 0.202515282 0.209036827 0.201655415 0.188662948 0.179712797 #>   [79] 0.180896139 0.176494693 0.177723390 0.166929998 0.168226709 0.174102630 #>   [85] 0.176829907 0.175445006 0.181875914 0.181308895 0.188933293 0.188380585 #>   [91] 0.174130888 0.178276358 0.155156895 0.156701103 0.159127420 0.163939081 #>   [97] 0.167818832 0.167170419 0.165008414 0.160980223 0.160991254 0.162702656 #>  [103] 0.161182932 0.173660616 0.116810838 0.116061212 0.115235925 0.115685540 #>  [109] 0.102258748 0.102624924 0.103305627 0.109342981 0.103108172 0.103232450 #>  [115] 0.116294401 0.110926967 0.110617337 0.110093372 0.112818330 0.106700430 #>  [121] 0.108017764 0.104643911 0.105911569 0.105437617 0.103405960 0.103934548 #>  [127] 0.105147353 0.104776451 0.102490644 0.103778138 0.107264644 0.108453327 #>  [133] 0.101973013 0.094055102 0.086481790 0.091848091 0.087247122 0.086914101 #>  [139] 0.084327949 0.091331624 0.090940363 0.091564402 0.082712437 0.099575055 #>  [145] 0.102988754 0.093162119 0.110454710 0.104777200 0.100256435 0.097613490 #>  [151] 0.099318552 0.102871080 0.106090932 0.099216921 0.097636384 0.108219198 #>  [157] 0.133914614 0.132202416 0.131564478 0.126768940 0.122882037 0.119922367 #>  [163] 0.118753625 0.120947262 0.129087541 0.131932766 0.136217910 0.160613261 #>  [169] 0.164453919 0.163893267 0.156355705 0.153297498 0.148251683 0.151288626 #>  [175] 0.142295171 0.139184027 0.138866656 0.126497647 0.132199356 0.132412966 #>  [181] 0.132759763 0.136181927 0.132793097 0.146602735 0.165411749 0.175226667 #>  [187] 0.166219087 0.124257431 0.126183095 0.126077944 0.144918325 0.149381430 #>  [193] 0.152662974 0.148789250 0.151645396 0.144986659 0.148102581 0.144602341 #>  [199] 0.128883068 0.124144154 0.123278314 0.120215699 0.122701321 0.126631922 #>  [205] 0.126875040 0.126472600 0.118631728 0.118533194 0.120502185 0.118774269 #>  [211] 0.128210729 0.128556956 0.127321143 0.125956245 0.112992929 0.102051896 #>  [217] 0.102783705 0.100010694 0.106189021 0.104225396 0.105391314 0.092420735 #>  [223] 0.092775466 0.097393509 0.091825485 0.089595238 0.090124101 0.087654883 #>  [229] 0.094080436 0.088372826 0.089075966 0.091846180 0.097342519 0.100463768 #>  [235] 0.097885954 0.097138494 0.096459879 0.103545382 0.102879295 0.101980218 #>  [241] 0.099824056 0.084934275 0.084877158 0.080312839 0.080650161 0.080923532 #>  [247] 0.082219449 0.075326319 0.074564844 0.073927235 0.067273107 0.064289572 #>  [253] 0.059434666 0.055771784 0.042880046 0.048061887 0.047050169 0.050143636 #>  [259] 0.045375693 0.034205847 0.033735574 0.032405848 0.032580876 0.034363111 #>  [265] 0.035989057 0.037034998 0.038548441 0.036456196 0.038325446 0.038612239 #>  [271] 0.039511793 0.044352144 0.045567831 0.044155199 0.072516006 0.071088248 #>  [277] 0.069938703 0.068662061 0.069320136 0.076939646 0.076979808 0.080787778 #>  [283] 0.080281497 0.080056040 0.079987828 0.079970634 0.080275498 0.085899460 #>  [289] 0.084029961 0.096217687 0.097109676 0.096178092 0.099537805 0.098798543 #>  [295] 0.097393411 0.105652336 0.109533209 0.101614317 0.103328264 0.104954588 #>  [301] 0.107518008 0.107177063 0.103800942 0.103058199 0.111645233 0.068285537 #>  [307] 0.072539585 0.074901036 0.075240020 0.078548213 0.058789529 0.058789355 #>  [313] 0.060562775 0.072238193 0.079933099 0.086471033 0.087634452 0.087746975 #>  [319] 0.090977046 0.102559849 0.102574339 0.100880121 0.100396007 0.100275035 #>  [325] 0.101818036 0.098082839 0.087346957 0.089270183 0.098949517 0.108974141 #>  [331] 0.081749779 0.078716323 0.079253234 0.077267799 0.079188337 0.075875747 #>  [337] 0.075798506 0.076739838 0.077871546 0.077870022 0.063157228 0.065131079 #>  [343] 0.063457045 0.065711460 0.057788370 0.077386096 0.071462163 0.071403178 #>  [349] 0.069307474 0.063171836 0.067091621 0.065149657 0.065126857 0.065692256 #>  [355] 0.091669056 0.091259294 0.089335704 0.091408898 0.091121113 0.094373467 #>  [361] 0.100515716 0.111260094 0.110266682 0.102883194 0.102169214 0.106588803 #>  [367] 0.107243509 0.101457243 0.104833626 0.104243251 0.104381216 0.112827269 #>  [373] 0.111927863 0.111805337 0.109839924 0.107357915 0.096889521 0.103721244 #>  [379] 0.106676790 0.112519451 0.113182018 0.111430794 0.120696129 0.120610334 #>  [385] 0.122140258 0.088422488 0.088939409 0.092883449 0.102044514 0.100540634 #>  [391] 0.087190198 0.074700374 0.074544546 0.074827632 0.094795413 0.096903648 #>  [397] 0.092696456 0.092293573 0.097163438 0.095368679 0.088229282 0.081804392 #>  [403] 0.082026727 0.084668825 0.081451367 0.081553380 0.081431980 0.075005089 #>  [409] 0.066209326 0.063520186 0.074005856 0.073199065 0.071459080 0.069618732 #>  [415] 0.068687514 0.063883950 0.065167453 0.064615103 0.062303435 0.057659790 #>  [421] 0.057617992 0.062584575 0.064105387 0.061751374 0.061943486 0.049580785 #>  [427] 0.048468591 0.047698769 0.047711843 0.047931605 0.041237730 0.043600912 #>  [433] 0.044888846 0.043807577 0.040375772 0.041693674 0.040115246 0.039582939 #>  [439] 0.041206807 0.044359347 0.044053058 0.025637839 0.028464041 0.028888948 #>  [445] 0.029397757 0.030977403 0.036255186 0.037837490 0.037974573 0.036870404 #>  [451] 0.036776323 0.037122412 0.034111534 0.035377161 0.042912162 0.040483209 #>  [457] 0.040928573 0.040786259 0.040864309 0.040494119 0.044132758 0.047392576 #>  [463] 0.046411990 0.047803162 0.041262828 0.040783938 0.040705771 0.041461174 #>  [469] 0.043139855 0.050720808 0.052831958 0.053344435 0.062050915 0.060797977 #>  [475] 0.061006809 0.057544164 0.056672526 0.055901599 0.056158697 0.052839387 #>  [481] 0.053753667 0.055436689 0.055597839 0.055847581 0.054640347 0.047036966 #>  [487] 0.050706621 0.050090753 0.062200117 0.063011468 0.062047534 0.058116316 #>  [493] 0.056522590 0.057911507 0.057407429 0.069939026 0.070417166 0.070194705 #>  [499] 0.069154830 0.065522781 0.056191962 0.050429036 0.049579562 0.036162124 #>  [505] 0.035602634 0.080682281 0.086788080 0.090396576 0.090647139 0.099009523 #>  [511] 0.109735744 0.112755845 0.110689358 0.110343541 0.110729276 0.111352643 #>  [517] 0.128030323 0.129014931 0.130707331 0.127245686 0.126868509 0.129270906 #>  [523] 0.127233447 0.127224564 0.127095575 0.127780057 0.129501470 0.129495090 #>  [529] 0.129709406 0.130727609 0.133500691 0.130779137 0.136692663 0.138986938 #>  [535] 0.146593345 0.147206218 0.116686498 0.104923430 0.098922090 0.098551571 #>  [541] 0.083266611 0.080545904 0.072719228 0.073088313 0.068780838 0.067877972 #>  [547] 0.067284454 0.038076249 0.035696411 0.032095227 0.022475696 0.023345035 #>  [553] 0.023034022 0.022778969 0.022929559 0.023129214 0.022566069 0.021594931 #>  [559] 0.023803009 0.023792136 0.025281934 0.025783512 0.026510364 0.026155623 #>  [565] 0.026288510 0.026284976 0.023720119 0.023699141 0.024116718 0.023653008 #>  [571] 0.024189064 0.024087201 0.026912414 0.029942732 0.024983284 0.026363741 #>  [577] 0.026861566 0.029080209 0.026994734 0.027244672 0.025666189 0.024649060 #>  [583] 0.022957975 0.023272922 0.023645589 0.020893033 0.021495784 0.022523834 #>  [589] 0.022523222 0.019691352 0.019719764 0.017664692 0.017289400 0.017199617 #>  [595] 0.017653353 0.017601236 0.017568381 0.019022052 0.017671198 0.018253232 #>  [601] 0.017482144 0.017354737 0.017407486 0.014940877 0.014989597 0.014791872 #>  [607] 0.015112916 0.014977078 0.013089454 0.014566172 0.014401555 0.015045548 #>  [613] 0.017292002 0.016621349 0.017959522 0.017377683 0.020938278 0.023481390 #>  [619] 0.023462751 0.023565182 0.024456186 0.025169156 0.026332344 0.027701466 #>  [625] 0.028834215 0.029443271 0.029902339 0.029979607 0.028004346 0.029780784 #>  [631] 0.029782798 0.030913753 0.030744738 0.032251542 0.029971311 0.029901980 #>  [637] 0.029958576 0.030679677 0.029105757 0.029123845 0.029392200 0.029403586 #>  [643] 0.029289639 0.027952990 0.026742620 0.024828549 0.025516767 0.023546659 #>  [649] 0.018868769 0.018892623 0.019079707 0.018739947 0.017831449 0.015785220 #>  [655] 0.012803766 0.009577847 0.007764796 0.007108342 0.007539077 0.008197158 #>  [661] 0.008198865 0.008355735 0.008288646 0.007674505 0.009099896 0.011821034 #>  [667] 0.011420558 0.011890259 0.011817885 0.011574481 0.011573862 0.011196742 #>  [673] 0.011610411 0.010842027 0.010824345 0.010269464 0.010651670 0.010121293 #>  [679] 0.010000563 0.010007074 0.010098439 0.009299510 0.010936615 0.010808440 #>  [685] 0.011093041 0.011214407 0.012744687 0.013091179 0.013426551 0.013195791 #>  [691] 0.013807826 0.016117353 0.016707338 0.017284157 0.017916182 0.016904868 #>  [697] 0.014704709 0.015141683 0.013210817 0.013285153 0.013401227 0.013364331 #>  [703] 0.013537513 0.013266415 0.014058299 0.014160520 0.013938239 0.014227579 #>  [709] 0.026472470 0.025935738 0.025925492 0.025789455 0.024584644 0.025603075 #>  [715] 0.038244731 0.038575493 0.032445852 0.032450590 0.045828508 0.046530668 #>  [721] 0.044983737 0.044884974 0.043452456 0.043165108 0.042884224 0.042471633 #>  [727] 0.041124294 0.042627870 0.043543973 0.047200430 0.047506012 0.047468628 #>  [733] 0.047601710 0.049702347 0.047735531 0.047003852 0.046970341 0.049626926 #>  [739] 0.049629408 0.044422921 0.045737501 0.045751717 0.043666411 0.045266963 #>  [745] 0.046237696 0.036785496 0.036477282 0.049003828 0.050375867 0.035707472 #>  [751] 0.037206259 0.039338641 0.036738187 0.036991645 0.037454418 0.037714539 #>  [757] 0.039082424 0.041552392 0.041122248 0.041463300 0.040612261 0.040655397 #>  [763] 0.041318554 0.039597419 0.039921651 0.042557846 0.041922611 0.041312768 #>  [769] 0.038941411 0.036809022 0.035210546 0.034753084 0.034744511 0.034555064 #>  [775] 0.033180757 0.034253977 0.036817395 0.037046237 0.033150593 0.032111280 #>  [781] 0.031582869 0.031448138 0.030672810 0.033150433 0.031202975 0.027699625 #>  [787] 0.058980894 0.059111969 0.052501703 0.054972675 0.054913254 0.056359631 #>  [793] 0.056449760 0.057836607 0.059646187 0.060105285 0.059119957 0.059339257 #>  [799] 0.057447958 0.058007211 0.060757201 0.060656203 0.061113089 0.061228755 #>  [805] 0.063033459 0.065653865 0.066007786 0.063140963 0.060348126 0.056883888 #>  [811] 0.056735463 0.062353428 0.062384650 0.059879825 0.076179981 0.076716528 #>  [817] 0.082654250 0.055936558 0.054813497 0.062947290 0.070197330 0.071598936 #>  [823] 0.069285485 0.069920745 0.074721434 0.079664797 0.080980402 0.083598838 #>  [829] 0.086443789 0.093548133 0.093437223 0.094045524 0.093816935 0.093797270 #>  [835] 0.093535861 0.094211402 0.093521917 0.088746033 0.083234310 0.086642307 #>  [841] 0.093606464 0.088188731 0.075288614 0.073123434 0.073181796 0.046812392 #>  [847] 0.048368580 0.048333646 0.044799795 0.042827558 0.042654405 0.027889097 #>  [853] 0.027074423 0.027701049 0.027100479 0.019664437 0.014033992 0.017661860 #>  [859] 0.017067856 0.009466483 0.039264869 0.039240261 0.050076869 0.064034209 #>  [865] 0.064023713 0.062227141 0.061018311 0.061760068 0.064994472 0.068820680 #>  [871] 0.065671431 0.066008876 0.075310051 0.083212366 0.092094711 0.093537758 #>  [877] 0.095224538 0.102357497 0.102637473 0.109169502 0.127861419 0.127867264 #>  [883] 0.135973485 0.138724481 0.138672684 0.135760724 0.136500119 0.140978953 #>  [889] 0.147131021 0.150577166 0.166675625 0.139329931 0.137099523 0.109196794 #>  [895] 0.094297099 0.094590376 0.093956685 0.095435246 0.095745049 0.092713463 #>  [901] 0.094204926 0.100875765 0.100583322 0.090413246 0.081344745 0.080601636 #>  [907] 0.079168785 0.077266220 0.065715635 0.067274802 0.063017980 0.047635605 #>  [913] 0.047502191 0.046321979 0.046663394 0.046525009 0.046050826 0.045148627 #>  [919] 0.037892219 0.027365405 0.025925149 0.023690408 0.022566953 0.023046672 #>  [925] 0.025740532 0.025648345 0.025331287 0.025803538 0.023421376 0.026843072 #>  [931] 0.027076461 0.025017083 0.022797799 0.023827575 0.023485599 0.024663396 #>  [937] 0.014379069 0.015541438 0.015103891 0.016025317 0.017472908 0.018458479 #>  [943] 0.019259680 0.019329886 0.019830102 0.019152295 0.020889853 0.019146495 #>  [949] 0.019519592 0.018671272 0.018718103 0.019325736 0.018440851 0.018571385 #>  [955] 0.018647764 0.019324705 0.019082198 0.018685610 0.019419664 0.018860119 #>  [961] 0.017608235 0.018052536 0.018221891 0.019073769 0.018115115 0.018416056 #>  [967] 0.018908628 0.019533179 0.019461453 0.019992436 0.019887631 0.020918062 #>  [973] 0.021786699 0.017657785 0.017599622 0.017559682 0.017736288 0.016223265 #>  [979] 0.017660404 0.017226056 0.018003951 0.017860498 0.019005902 0.020275445 #>  [985] 0.020017543 0.021064751 0.021014468 0.021716240 0.021539758 0.021682497 #>  [991] 0.023471139 0.018602686 0.017798458 0.021125798 0.021218395 0.020991246 #>  [997] 0.019387142 0.018576866 0.018771009 0.016969633 0.017760628 0.017814106 #> [1003] 0.014720832 0.014429535 0.018408834 0.018283890 0.024597159 0.023334872 #> [1009] 0.023097403 0.022712047 0.022110532 0.021666584 0.021607914 0.019034386 #> [1015] 0.018800995 0.018848980 0.017516192 0.017703835 0.017526636 0.020598332 #> [1021] 0.024369201 0.025313648 0.024897083 0.024808892 0.022742217 0.024859692 #> [1027] 0.025624172 0.026305552 0.027423133 0.025996160 0.028884236 0.028365308 #> [1033] 0.037850142 0.044317357 0.049432911 0.051128427 0.053154691 0.045193601 #> [1039] 0.047006773 0.049763201 0.050324037 0.051751118 0.053230930 0.053583229 #> [1045] 0.061749908 0.061998245 0.061633064 0.058900135 0.060048089 0.060882929 #> [1051] 0.064576562 0.060951718 0.059529000 0.063929225 0.068055563 0.070258794 #> [1057] 0.074356568 0.093816611 0.094883232 0.088705343 0.093892173 0.093642094 #> [1063] 0.093703942 0.085491789 0.079499003 0.076894465 0.070591640 0.071477332 #> [1069] 0.083140442 0.083907202 0.081994511 0.082391592 0.083121096 0.083677915 #> [1075] 0.081942948 0.080596700 0.079591892 0.080773829 0.086647253 0.092146174 #> [1081] 0.094148727 0.093293593 0.093139946 0.093804758 0.090239169 0.082392432 #> [1087] 0.082416830 0.075511180 0.040897675 0.040652402 0.044614678 0.044413741 #> [1093] 0.044718615 0.048798044 0.047212598 0.046753868 0.054332917 0.069955383 #> [1099] 0.062784701 0.060978692 0.060368196 0.058639562 0.057834237 0.056702235 #> [1105] 0.056268316 0.056880892 0.051795530 0.052214660 0.051694516 0.051872021 #> [1111] 0.052759385 0.051646368 0.051893752 0.052038782 0.047127148 0.047494730 #> [1117] 0.049030159 0.046155289 0.046172754 0.049036532 0.049349153 0.049432620 #> [1123] 0.049779750 0.050113943 0.046072818 0.048205205 roll_confidence(dat.PoR$azi.PoR, w = 1 / dat$unc) #>                                                                               #>  44.835583  42.153158  39.542133  37.541267  35.686866  40.969675  38.840634  #>                                                                               #>  37.309105  35.654839  34.247146  32.044639  30.779092  33.810469  32.622380  #>                                                                               #>  31.426454  30.378649  33.222844  29.968960  30.439601  34.401185  38.024813  #>                                                                               #>  39.234950  43.056928  40.105073  41.612801  43.610152  44.596808  49.773832  #>                                                                               #>  57.920335  68.766522  69.128185  71.591541  74.721752  84.898073  94.000075  #>                                                                               #>  97.453034  87.090272  99.294391  92.845235  95.110159 106.780994  89.658047  #>                                                                               #>  66.487578  62.870683  57.517612  51.821836  51.717177  51.789427  42.505518  #>                                                                               #>  36.752133  30.614240  27.597184  29.328713  28.348989  32.807650  35.341070  #>                                                                               #>  38.099978  41.366726  40.437542  44.434296  45.596442  45.714987  45.067508  #>                                                                               #>  46.611415  47.676855  54.077548  61.456420  58.426871  69.465409  84.993192  #>                                                                               #>  95.918292 112.916671  91.807614  88.875006 106.592926  88.167279  72.254820  #>                                                                               #>  62.652380  62.722449  55.673425  55.942209  48.878102  46.350044  46.029063  #>                                                                               #>  44.900051  44.896894  44.676446  44.307479  44.057301  43.533931  39.086597  #>                                                                               #>  38.756912  36.821170  36.834987  36.178868  36.006613  39.438952  39.419559  #>                                                                               #>  37.383109  34.134514  34.134661  34.166078  34.144321  37.498279  34.377680  #>                                                                               #>  31.170765  31.136205  31.165813  31.267907  31.315760  34.170573  31.109805  #>                                                                               #>  31.143308  33.950232  37.367335  37.264889  37.213639  37.173321  40.665247  #>                                                                               #>  40.793433  40.904028  40.778470  40.719855  42.500532  42.331573  42.345092  #>                                                                               #>  46.147712  46.339160  42.406525  42.608769  42.548642  42.467158  42.785985  #>                                                                               #>  39.043241  35.415633  35.834773  35.672875  35.956136  36.173180  39.632430  #>                                                                               #>  39.615422  36.489301  36.161818  40.436133  37.483823  33.901185  38.096014  #>                                                                               #>  37.570342  37.344272  33.981159  33.842306  37.056043  37.387699  37.315389  #>                                                                               #>  36.092768  39.846381  45.845324  42.388956  38.851445  38.590160  38.450144  #>                                                                               #>  38.234211  39.205182  39.081729  40.547441  40.856282  41.274460  47.888194  #>                                                                               #>  51.875786  50.868684  46.056445  45.575488  45.860115  46.343179  41.804193  #>                                                                               #>  41.579476  42.434507  37.784404  39.326752  39.320856  40.342226  42.247722  #>                                                                               #>  39.143126  44.223910  51.617874  56.010102  48.707623  36.923590  36.742297  #>                                                                               #>  36.704134  41.715435  43.389663  47.009533  46.319152  46.933025  44.744021  #>                                                                               #>  45.528438  44.769811  38.509187  34.049102  33.956399  33.466272  33.896356  #>                                                                               #>  34.680409  35.055664  34.696465  33.534841  33.362021  33.575596  33.476362  #>                                                                               #>  35.853260  35.681998  34.947274  33.896749  29.741426  25.780422  25.550327  #>                                                                               #>  25.056812  25.776789  29.689580  33.085376  30.796056  30.272846  31.973267  #>                                                                               #>  30.905003  30.753679  30.777136  30.703361  31.294926  31.919134  31.965371  #>                                                                               #>  32.133181  32.524701  35.160116  34.633203  34.231966  33.176515  33.692875  #>                                                                               #>  33.477081  33.577829  33.651731  32.869153  33.041046  32.765296  32.784688  #>                                                                               #>  32.763387  32.917544  32.445445  32.384581  32.140820  28.460839  25.024103  #>                                                                               #>  24.447957  24.267523  18.976716  19.280721  19.257378  19.506450  19.287745  #>                                                                               #>  18.310515  16.798189  16.632571  16.741903  16.941597  11.790492  11.838923  #>                                                                               #>  11.997887  11.386623  11.388347  11.321277  12.807621  16.585718  17.037687  #>                                                                               #>  16.799234  21.276900  21.177171  20.987073  20.793323  20.903379  21.422498  #>                                                                               #>  21.421629  21.817220  22.081598  21.844751  21.852501  22.081311  22.656614  #>                                                                               #>  23.072326  22.980010  23.970720  25.008166  25.166955  25.580053  25.663202  #>                                                                               #>  25.613299  26.099043  26.425097  25.269559  25.552106  25.689656  26.217882  #>                                                                               #>  25.220710  22.142172  21.584945  22.537703  15.923723  16.060211  16.233655  #>                                                                               #>  16.296001  18.469932  17.025149  17.083497  17.157426  19.712797  22.239305  #>                                                                               #>  24.242064  24.273115  23.845468  26.530722  27.877659  27.886596  27.097768  #>                                                                               #>  26.933574  26.827930  26.805860  26.347246  25.511600  26.161358  26.987032  #>                                                                               #>  28.688610  26.084338  25.518546  25.475797  25.194579  25.650331  24.941800  #>                                                                               #>  24.849263  24.994735  25.171366  25.170834  23.260934  23.842944  23.389306  #>                                                                               #>  23.763606  22.213910  21.582996  19.846813  19.428237  18.735370  15.934113  #>                                                                               #>  16.410388  16.119604  15.512724  15.509951  22.918597  22.326465  22.928579  #>                                                                               #>  22.076655  21.997170  21.486678  24.180635  24.001859  23.816300  22.766684  #>                                                                               #>  22.915038  25.202261  24.986711  26.032619  30.399007  30.554891  30.665427  #>                                                                               #>  30.831183  30.592100  30.713946  30.731873  30.780549  31.848010  36.539624  #>                                                                               #>  37.575759  41.880972  42.368846  42.693439  45.140507  44.741848  45.258830  #>                                                                               #>  36.370280  36.507572  36.710557  38.734262  38.290743  36.162953  32.867200  #>                                                                               #>  32.774320  32.731637  34.544742  37.827784  35.348432  34.875909  35.410561  #>                                                                               #>  32.040963  31.634135  31.368949  31.189824  31.068079  30.804385  30.777953  #>                                                                               #>  30.660164  28.668596  25.087235  23.614246  21.541212  21.486404  21.324772  #>                                                                               #>  20.737110  20.539125  19.628692  19.492536  18.976969  18.782996  18.453825  #>                                                                               #>  18.458387  18.904015  19.049910  18.981945  18.954837  17.960800  10.419356  #>                                                                               #>  10.040946  10.060429  10.128073   9.552903   9.596288   9.544271   9.902593  #>                                                                               #>   9.401472   9.523420   9.096243   9.130291   9.194550   9.585518  10.186330  #>                                                                               #>   8.134617   9.425383   9.805413  10.063755  10.714200  11.706343  12.267882  #>                                                                               #>  12.371907  12.761639  13.063377  13.126367  12.369218  13.371914  13.652488  #>                                                                               #>  13.498888  13.802619  13.634076  13.579332  13.392402  14.344399  15.272536  #>                                                                               #>  15.152498  15.226505  14.873350  14.616559  14.488727  14.893170  15.156869  #>                                                                               #>  15.621785  16.341360  16.149439  16.855088  16.333890  16.161291  15.956532  #>                                                                               #>  15.598605  14.903457  14.503030  14.612556  14.328955  14.150876  13.854584  #>                                                                               #>  13.602574  13.368429  13.305097  13.430088  13.517080  14.168003  14.423471  #>                                                                               #>  14.289113  13.679671  13.259987  13.220746  13.014876  13.349885  13.480606  #>                                                                               #>  13.164719  13.157271  13.003802  12.848164  12.131631  12.032627  10.973406  #>                                                                               #>  10.863233  19.781317  20.135355  20.488546  20.507297  21.279088  25.906879  #>                                                                               #>  26.086484  26.859403  27.079874  27.132912  26.933588  27.338604  27.477401  #>                                                                               #>  27.143896  26.955921  27.820015  28.189420  28.071762  28.216771  28.381099  #>                                                                               #>  28.939046  28.619786  28.495361  28.673854  29.183647  29.610650  29.695044  #>                                                                               #>  30.282443  30.276979  31.107990  31.767063  25.733471  25.012627  24.582610  #>                                                                               #>  24.717913  22.975099  16.669496  16.232315  17.061539  16.724494  16.556178  #>                                                                               #>  16.496381  13.764845  12.540985  11.105549   9.356119   9.849492   9.723023  #>                                                                               #>   9.495504   9.581659   9.699124   9.696561   8.991777   8.709233   8.738998  #>                                                                               #>   9.562548  10.010285  10.288868  10.265646  10.369022  10.367454   9.501252  #>                                                                               #>   9.485571   9.471253   9.395927   9.804219   9.651630   9.980360  10.129686  #>                                                                               #>   8.905764   8.865548   9.222688   9.848762   9.781254   9.917407   9.930694  #>                                                                               #>   9.936608  10.378520  10.397514  10.497225  10.509752  10.815200  10.874823  #>                                                                               #>  10.874876  10.520596  10.553004   9.473160   9.150383   9.068889   9.669493  #>                                                                               #>   9.622765   9.615874   9.717471   9.644003   9.751345   9.714305   9.977011  #>                                                                               #>   9.860005   9.581842   9.608068   9.578877   9.588082   9.349674   8.522665  #>                                                                               #>   8.646993   8.385399   8.504020   8.750408   8.624237   8.856544   8.844378  #>                                                                               #>   9.222058   9.114515   9.141584   9.242071   9.477505  10.022064  10.808525  #>                                                                               #>  10.962923  11.239280  11.563754  11.853862  11.847045  11.705529  11.753295  #>                                                                               #>  11.545159  11.582000  11.462626  11.653394  11.453469  11.404863  11.303202  #>                                                                               #>  11.444234  11.383169  11.355275  11.048138  11.053455  11.072967  10.631255  #>                                                                               #>  10.924501  11.001582  11.293670  10.817498   9.910229   9.921259   9.756034  #>                                                                               #>   9.540785   8.989431   7.960390   7.383806   6.750185   5.536432   4.841019  #>                                                                               #>   6.031296   6.059497   6.079875   6.132866   6.131414   5.654883   5.824677  #>                                                                               #>   6.300309   6.333968   6.345013   6.326353   6.343688   6.404823   6.384910  #>                                                                               #>   6.765086   6.603455   6.538545   6.756448   6.804555   6.761498   6.618465  #>                                                                               #>   6.587594   6.664198   6.482408   6.517430   6.480667   6.490013   6.579348  #>                                                                               #>   6.958211   6.975292   7.089209   6.126919   6.579471   8.345787   8.403450  #>                                                                               #>   8.592149   8.852889   9.190510   9.425507   9.626361   9.539000   9.539680  #>                                                                               #>   9.621606   9.591617   9.941759   9.989703   9.963030  10.021844   9.903489  #>                                                                               #>  10.044363  11.024590  10.886593  10.890400  10.772539  10.757975  10.708284  #>                                                                               #>  12.649041  12.795914  12.047911  12.051587  12.927647  12.680196  12.548399  #>                                                                               #>  12.601979  11.441102  11.232171  11.029305  10.689916  10.615898  11.810481  #>                                                                               #>  12.087227  12.186176  12.310191  12.242215  12.372443  12.374517  12.255710  #>                                                                               #>  12.326603  12.306236  12.699159  12.507192  11.864540  12.057646  12.072258  #>                                                                               #>  12.088900  12.175647  12.579407  11.422237  11.107415  12.160684  12.451652  #>                                                                               #>  11.556778  11.735145  11.804449  11.495423  11.745909  12.130015  12.301663  #>                                                                               #>  12.934567  13.201756  12.610582  12.641384  12.808501  12.929137  13.336880  #>                                                                               #>  13.214489  13.351029  13.569732  13.507002  13.569324  13.289381  13.139049  #>                                                                               #>  12.705460  12.482612  12.445103  12.391115  12.339357  12.257726  13.967307  #>                                                                               #>  14.241892  13.878841  14.253191  14.446831  14.428143  14.670602  15.442544  #>                                                                               #>  15.182269  14.932013  22.318744  21.839761  20.960231  20.630221  20.106314  #>                                                                               #>  20.289883  20.305870  20.335169  20.477827  20.504166  20.636021  20.645039  #>                                                                               #>  20.517650  20.607081  20.862824  20.911085  20.973891  20.981154  21.110957  #>                                                                               #>  21.554198  21.483031  20.117633  19.617121  19.354084  18.750807  19.205249  #>                                                                               #>  19.171566  18.583185  22.618501  22.543561  22.913669  15.890999  15.724958  #>                                                                               #>  16.119973  17.763503  17.883538  17.552564  17.993949  19.044016  19.845128  #>                                                                               #>  20.213016  20.663480  20.943390  21.427698  21.471184  21.566729  21.555108  #>                                                                               #>  21.548644  21.525598  21.538529  21.408390  21.043649  20.664679  20.877873  #>                                                                               #>  21.280564  20.476543  18.670743  18.140074  18.118276  12.844677  12.818348  #>                                                                               #>  12.758504  12.633586  12.378928  12.284961  10.667867  10.143069  10.251337  #>                                                                               #>   9.141560   8.396194   7.595082   7.903831   7.383952   6.410279  10.903036  #>                                                                               #>  10.923157  15.716194  18.041339  18.035539  17.976604  17.933581  18.365864  #>                                                                               #>  19.167951  19.434895  19.261948  19.439874  20.360141  21.181428  22.177214  #>                                                                               #>  22.382782  22.458586  23.416291  23.414009  23.881453  29.486128  29.486556  #>                                                                               #>  30.851919  31.244083  31.304592  30.862386  31.136033  31.893273  34.510260  #>                                                                               #>  34.800203  37.159050  29.734375  29.693993  23.681202  20.542026  20.433681  #>                                                                               #>  20.217801  20.173847  20.290355  20.194814  25.330379  25.798334  25.819464  #>                                                                               #>  25.809202  25.228794  25.292777  25.026826  25.106466  24.010657  24.207842  #>                                                                               #>  23.976513  20.321584  20.296729  20.053118  20.410935  20.433544  20.435227  #>                                                                               #>  19.979931  19.004699  17.684604  17.511872  17.311568  17.134526  17.202960  #>                                                                               #>  17.286355  17.329700  17.199616  17.228669  16.920073  16.702349  16.838977  #>                                                                               #>  10.019367   9.156260  10.307270  10.349169  10.390344   8.283927   8.760509  #>                                                                               #>   8.741779   8.753067   9.117816   9.212436   9.254631   9.295241   9.307274  #>                                                                               #>   8.665566   8.978576   8.811595   9.045810   8.884533   8.940900   8.950896  #>                                                                               #>   8.877170   8.991870   8.987932   9.041227   9.025865   9.026509   9.189128  #>                                                                               #>   9.105395   8.569989   8.833229   8.963943   9.188003   8.142642   8.725993  #>                                                                               #>   8.725564   8.847817   8.778231   8.777668   8.828462   8.787301   8.837455  #>                                                                               #>   8.279373   8.261012   8.310214   8.529376   8.005438   8.256109   8.124744  #>                                                                               #>   8.110919   8.031679   8.900085   9.235819   9.020022   9.337484   9.311867  #>                                                                               #>   9.272605   9.256285   9.510645   9.738268   9.252652   9.020326   9.430138  #>                                                                               #>   9.373659   9.272116   8.668511   8.626711   8.713510   8.161368   8.392294  #>                                                                               #>   8.388183   8.012676   7.873417   8.031884   7.959594   8.733170   8.438745  #>                                                                               #>   8.470961   8.229063   8.223017   8.226719   8.277653   7.211140   6.971015  #>                                                                               #>   6.936395   6.590277   6.714165   6.807903   7.279682   7.825991   8.911005  #>                                                                               #>   8.861896   8.884678   8.485964   9.538946  10.050714  10.151351  10.185990  #>                                                                               #>   9.945482  10.480051  10.190272  16.875120  17.700540  18.178912  18.844613  #>                                                                               #>  18.998529  18.145965  18.227673  18.771851  18.790890  18.860476  18.905484  #>                                                                               #>  18.917504  18.992504  18.972724  18.869280  18.701083  18.646374  18.710246  #>                                                                               #>  18.065798  17.880538  17.813997  20.033497  22.009771  22.969823  26.770158  #>                                                                               #>  31.291484  31.369947  31.351110  31.670018  31.283237  31.394077  27.967940  #>                                                                               #>  27.454733  27.316806  26.646918  26.847548  27.504919  27.564514  27.325053  #>                                                                               #>  27.351975  27.326415  27.191177  27.071840  27.022785  26.983566  27.039523  #>                                                                               #>  27.433873  28.065810  28.210092  28.192010  28.564226  28.416715  26.598168  #>                                                                               #>  24.443759  26.306434  21.943462  15.206707  15.193338  15.352710  15.439404  #>                                                                               #>  15.449921  15.572110  15.081063  15.235228  19.696230  24.178548  23.555629  #>                                                                               #>  23.513293  23.475757  23.577448  23.508335  23.559440  23.681577  23.753625  #>                                                                               #>  23.470141  23.520726  23.540613  23.562287  23.611202  24.148180  24.912250  #>                                                                               #>  25.519190  25.885769  26.837714  27.865133  24.877379  25.863676  27.225069  #>                                                                    #>  28.491020  29.505218  30.948508  32.591042  33.507015  35.699287  # \\donttest{ roll_dispersion_CI(dat.PoR$azi.PoR, y = 135, w = 1 / dat$unc, R = 10) #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #> Warning: extreme order statistics used as endpoints #>               [,1]       [,2] #>    [1,] 0.10769621 0.31182092 #>    [2,] 0.14387120 0.27768474 #>    [3,] 0.13950132 0.21604789 #>    [4,] 0.16571973 0.29530935 #>    [5,] 0.13324309 0.31718206 #>    [6,] 0.17136845 0.37802644 #>    [7,] 0.10143062 0.34594101 #>    [8,] 0.17297821 0.34748885 #>    [9,] 0.09698737 0.24247690 #>   [10,] 0.15044989 0.34888166 #>   [11,] 0.12624147 0.26316985 #>   [12,] 0.13802118 0.27768415 #>   [13,] 0.18189065 0.32818810 #>   [14,] 0.14782745 0.27795420 #>   [15,] 0.13946084 0.20914206 #>   [16,] 0.08620527 0.31910128 #>   [17,] 0.12602686 0.34989513 #>   [18,] 0.10566011 0.34399369 #>   [19,] 0.11045331 0.30115084 #>   [20,] 0.12854834 0.27852029 #>   [21,] 0.22666913 0.37909653 #>   [22,] 0.19273506 0.35574756 #>   [23,] 0.16960631 0.36652305 #>   [24,] 0.19992221 0.42344184 #>   [25,] 0.25997929 0.41746651 #>   [26,] 0.23232193 0.52052593 #>   [27,] 0.32107421 0.59507880 #>   [28,] 0.25254663 0.71544389 #>   [29,] 0.35376824 0.64926860 #>   [30,] 0.31087642 0.95859219 #>   [31,] 0.28516965 0.80479703 #>   [32,] 0.41248631 0.74721368 #>   [33,] 0.47627579 0.74353793 #>   [34,] 0.44259867 0.81927539 #>   [35,] 0.55517294 0.86695219 #>   [36,] 0.41092310 0.86675189 #>   [37,] 0.45215254 0.89208607 #>   [38,] 0.62333896 0.90865959 #>   [39,] 0.52588350 0.88645330 #>   [40,] 0.46638005 0.86147162 #>   [41,] 0.47179171 0.91991107 #>   [42,] 0.52530577 0.97404229 #>   [43,] 0.53397317 0.92993620 #>   [44,] 0.66115918 0.86810568 #>   [45,] 0.27708726 0.89460493 #>   [46,] 0.48122004 0.92133698 #>   [47,] 0.53880147 0.97227050 #>   [48,] 0.52748059 0.94279655 #>   [49,] 0.50612076 0.86048506 #>   [50,] 0.42950146 0.51318235 #>   [51,] 0.21651633 0.48217510 #>   [52,] 0.23850730 0.58850250 #>   [53,] 0.24125046 0.65279290 #>   [54,] 0.25481223 0.55622234 #>   [55,] 0.30669107 0.63327005 #>   [56,] 0.28224002 0.67651914 #>   [57,] 0.42781295 0.83465439 #>   [58,] 0.44802986 0.62275197 #>   [59,] 0.42490015 0.78442155 #>   [60,] 0.46829411 0.77670710 #>   [61,] 0.56017004 0.75245857 #>   [62,] 0.62470874 0.91618407 #>   [63,] 0.50806642 0.93659475 #>   [64,] 0.39923654 0.74519923 #>   [65,] 0.49146438 0.84218755 #>   [66,] 0.39093052 0.98324514 #>   [67,] 0.58523182 0.91484464 #>   [68,] 0.55052120 0.84229489 #>   [69,] 0.62715362 0.87855421 #>   [70,] 0.69444273 0.91046681 #>   [71,] 0.68866843 0.92941006 #>   [72,] 0.59571550 0.93457885 #>   [73,] 0.63008863 0.86038552 #>   [74,] 0.51397205 0.88691763 #>   [75,] 0.54959803 0.85887500 #>   [76,] 0.51291741 0.86494234 #>   [77,] 0.46930906 0.82929703 #>   [78,] 0.40110740 0.79417940 #>   [79,] 0.59278236 0.76621441 #>   [80,] 0.36872516 0.73677989 #>   [81,] 0.25187805 0.69965380 #>   [82,] 0.27148851 0.46421717 #>   [83,] 0.20870842 0.39395624 #>   [84,] 0.18856447 0.36119987 #>   [85,] 0.18184046 0.41355097 #>   [86,] 0.13170897 0.37923650 #>   [87,] 0.16873298 0.36986558 #>   [88,] 0.16613883 0.38644998 #>   [89,] 0.10332984 0.32462276 #>   [90,] 0.17838462 0.33127040 #>   [91,] 0.13992927 0.37777134 #>   [92,] 0.08254917 0.25678201 #>   [93,] 0.10446816 0.19080262 #>   [94,] 0.10919499 0.23156600 #>   [95,] 0.09363551 0.15766113 #>   [96,] 0.06727328 0.25224853 #>   [97,] 0.06867669 0.17952927 #>   [98,] 0.07637443 0.24675753 #>   [99,] 0.06452024 0.10430835 #>  [100,] 0.06435050 0.12292531 #>  [101,] 0.06628873 0.12190218 #>  [102,] 0.06955081 0.11704602 #>  [103,] 0.06714166 0.12473268 #>  [104,] 0.06323500 0.10847936 #>  [105,] 0.06805671 0.12359765 #>  [106,] 0.04753984 0.11173891 #>  [107,] 0.04079635 0.09139809 #>  [108,] 0.04432373 0.09212097 #>  [109,] 0.03160202 0.12116664 #>  [110,] 0.04825992 0.11719903 #>  [111,] 0.08150182 0.10215037 #>  [112,] 0.02621701 0.11601266 #>  [113,] 0.03906024 0.10053922 #>  [114,] 0.05959824 0.11102190 #>  [115,] 0.05921422 0.15987127 #>  [116,] 0.08092841 0.11656024 #>  [117,] 0.07230802 0.11777349 #>  [118,] 0.05937161 0.13319191 #>  [119,] 0.07177086 0.12720938 #>  [120,] 0.08321670 0.15641433 #>  [121,] 0.05976080 0.12560828 #>  [122,] 0.06937890 0.11750080 #>  [123,] 0.07131103 0.16401485 #>  [124,] 0.05863637 0.22142495 #>  [125,] 0.06815191 0.23001264 #>  [126,] 0.10177123 0.36164316 #>  [127,] 0.08362491 0.24927619 #>  [128,] 0.06126264 0.32706908 #>  [129,] 0.06048965 0.28341074 #>  [130,] 0.09665552 0.31275004 #>  [131,] 0.07639115 0.16442517 #>  [132,] 0.07129149 0.22129058 #>  [133,] 0.10530979 0.28228287 #>  [134,] 0.10387223 0.23191643 #>  [135,] 0.08888462 0.30855726 #>  [136,] 0.07201686 0.16893806 #>  [137,] 0.08821487 0.17761735 #>  [138,] 0.06091759 0.20174454 #>  [139,] 0.12176741 0.23488469 #>  [140,] 0.13358218 0.25575472 #>  [141,] 0.09590321 0.22673618 #>  [142,] 0.12909094 0.22055032 #>  [143,] 0.07890256 0.24234210 #>  [144,] 0.11697127 0.29697494 #>  [145,] 0.12208610 0.27619625 #>  [146,] 0.17048460 0.30928749 #>  [147,] 0.17887918 0.29737424 #>  [148,] 0.10820040 0.24471995 #>  [149,] 0.12094535 0.31240402 #>  [150,] 0.13446138 0.22360211 #>  [151,] 0.07644381 0.25961701 #>  [152,] 0.12997431 0.27489212 #>  [153,] 0.10024859 0.37507842 #>  [154,] 0.15058956 0.27592934 #>  [155,] 0.11581850 0.22551384 #>  [156,] 0.14052864 0.24346429 #>  [157,] 0.13487604 0.47139061 #>  [158,] 0.16844707 0.52760152 #>  [159,] 0.22888450 0.34493595 #>  [160,] 0.07004623 0.37035072 #>  [161,] 0.13421291 0.32294982 #>  [162,] 0.19373100 0.33881324 #>  [163,] 0.18551806 0.46093283 #>  [164,] 0.17623354 0.50486525 #>  [165,] 0.25228216 0.45688299 #>  [166,] 0.16908931 0.64496700 #>  [167,] 0.16619964 0.36190409 #>  [168,] 0.22386999 0.53174669 #>  [169,] 0.19920642 0.52991043 #>  [170,] 0.13567322 0.46768617 #>  [171,] 0.09484765 0.43146890 #>  [172,] 0.22201632 0.43293817 #>  [173,] 0.22410717 0.43970372 #>  [174,] 0.16676193 0.49920435 #>  [175,] 0.13229426 0.41083558 #>  [176,] 0.21650355 0.41932893 #>  [177,] 0.25757449 0.53081195 #>  [178,] 0.14258742 0.54508409 #>  [179,] 0.13388290 0.52591966 #>  [180,] 0.23442645 0.51063201 #>  [181,] 0.21019404 0.53978922 #>  [182,] 0.21367911 0.67149835 #>  [183,] 0.20042150 0.66201487 #>  [184,] 0.44658601 0.72408496 #>  [185,] 0.42382480 0.87220099 #>  [186,] 0.32232648 0.90637058 #>  [187,] 0.44751248 0.84640681 #>  [188,] 0.26534518 0.60907600 #>  [189,] 0.25436509 0.66267036 #>  [190,] 0.23509116 0.73150148 #>  [191,] 0.38005663 0.78147886 #>  [192,] 0.21769235 0.66257331 #>  [193,] 0.27334071 0.68125660 #>  [194,] 0.44545528 0.79042389 #>  [195,] 0.24784521 0.59697685 #>  [196,] 0.34219061 0.74144877 #>  [197,] 0.36749149 0.72774976 #>  [198,] 0.34364644 0.72491782 #>  [199,] 0.26512259 0.55043861 #>  [200,] 0.30284127 0.66773439 #>  [201,] 0.39817431 0.76685596 #>  [202,] 0.30997988 0.53614739 #>  [203,] 0.27032557 0.65194475 #>  [204,] 0.24349948 0.66707991 #>  [205,] 0.28927849 0.63940432 #>  [206,] 0.19373725 0.71178359 #>  [207,] 0.42415692 0.70625070 #>  [208,] 0.22875790 0.75886811 #>  [209,] 0.27956109 0.74978294 #>  [210,] 0.29499417 0.66840396 #>  [211,] 0.24659638 0.49247319 #>  [212,] 0.33056175 0.60688666 #>  [213,] 0.26469894 0.53767928 #>  [214,] 0.36953806 0.65559343 #>  [215,] 0.21922642 0.53170695 #>  [216,] 0.21464618 0.56671149 #>  [217,] 0.21777445 0.43611849 #>  [218,] 0.17309438 0.52219997 #>  [219,] 0.20404762 0.41290329 #>  [220,] 0.22061697 0.48139495 #>  [221,] 0.16377409 0.52467552 #>  [222,] 0.18232697 0.45476325 #>  [223,] 0.12010237 0.37709782 #>  [224,] 0.17850550 0.37120220 #>  [225,] 0.12346981 0.39105402 #>  [226,] 0.19947370 0.32446119 #>  [227,] 0.19924309 0.30868953 #>  [228,] 0.19009445 0.41265371 #>  [229,] 0.19531222 0.38078567 #>  [230,] 0.20820008 0.41231807 #>  [231,] 0.18176535 0.35414411 #>  [232,] 0.20772056 0.32904900 #>  [233,] 0.20231419 0.38751884 #>  [234,] 0.18297076 0.40755408 #>  [235,] 0.17871136 0.41986370 #>  [236,] 0.22930843 0.47112778 #>  [237,] 0.17257674 0.41536563 #>  [238,] 0.13354569 0.30480255 #>  [239,] 0.12713307 0.41474823 #>  [240,] 0.13962327 0.26157529 #>  [241,] 0.13348872 0.36868935 #>  [242,] 0.12120334 0.36530850 #>  [243,] 0.12090668 0.35155954 #>  [244,] 0.14423409 0.28964375 #>  [245,] 0.17448165 0.30134580 #>  [246,] 0.16803931 0.30864550 #>  [247,] 0.19250887 0.36583955 #>  [248,] 0.18581485 0.38354639 #>  [249,] 0.15460807 0.35586234 #>  [250,] 0.20044620 0.32279462 #>  [251,] 0.11562160 0.37846806 #>  [252,] 0.11334090 0.33809201 #>  [253,] 0.09094732 0.25567053 #>  [254,] 0.05319429 0.23652161 #>  [255,] 0.11670829 0.25790774 #>  [256,] 0.12062373 0.24181063 #>  [257,] 0.06479573 0.21214496 #>  [258,] 0.09334258 0.22164665 #>  [259,] 0.09222443 0.19070200 #>  [260,] 0.05851171 0.24990480 #>  [261,] 0.07264307 0.19029334 #>  [262,] 0.05853913 0.13236711 #>  [263,] 0.07294210 0.15657162 #>  [264,] 0.08475215 0.17255359 #>  [265,] 0.07037974 0.08863416 #>  [266,] 0.05736672 0.17985923 #>  [267,] 0.04240671 0.11736536 #>  [268,] 0.04558817 0.09363636 #>  [269,] 0.04133424 0.11508976 #>  [270,] 0.04852718 0.11010157 #>  [271,] 0.05806655 0.10951745 #>  [272,] 0.05269619 0.16865922 #>  [273,] 0.06217559 0.11042574 #>  [274,] 0.05600663 0.15452708 #>  [275,] 0.06325809 0.39422376 #>  [276,] 0.03822718 0.21172837 #>  [277,] 0.07074041 0.60692373 #>  [278,] 0.11687963 0.48514807 #>  [279,] 0.05433328 0.28253573 #>  [280,] 0.09538924 0.52838718 #>  [281,] 0.05320536 0.35243341 #>  [282,] 0.07686467 0.28389985 #>  [283,] 0.04019769 0.43062090 #>  [284,] 0.09045510 0.29841558 #>  [285,] 0.05849053 0.52787689 #>  [286,] 0.06726626 0.29263110 #>  [287,] 0.07321777 0.41712539 #>  [288,] 0.07692500 0.62753651 #>  [289,] 0.09186937 0.41397513 #>  [290,] 0.14284357 0.56953866 #>  [291,] 0.09133474 0.34041608 #>  [292,] 0.07917487 0.52023385 #>  [293,] 0.14779645 0.40964798 #>  [294,] 0.11806798 0.60524144 #>  [295,] 0.12748177 0.63119469 #>  [296,] 0.14099696 0.47601319 #>  [297,] 0.13468632 0.77483997 #>  [298,] 0.19820716 0.81330841 #>  [299,] 0.15536363 0.49672699 #>  [300,] 0.15121504 0.48617110 #>  [301,] 0.21846048 0.59701537 #>  [302,] 0.15675454 0.63234458 #>  [303,] 0.12538827 0.67188200 #>  [304,] 0.13306416 0.48658930 #>  [305,] 0.13849070 0.69770705 #>  [306,] 0.11809047 0.23213081 #>  [307,] 0.11616894 0.20453636 #>  [308,] 0.08971909 0.26290473 #>  [309,] 0.12280588 0.25057888 #>  [310,] 0.14275279 0.29913985 #>  [311,] 0.15030055 0.28642772 #>  [312,] 0.13817352 0.28104229 #>  [313,] 0.15451528 0.32880430 #>  [314,] 0.10438223 0.47909187 #>  [315,] 0.18822558 0.41844782 #>  [316,] 0.22160467 0.43482100 #>  [317,] 0.16288414 0.48283555 #>  [318,] 0.14285359 0.38618880 #>  [319,] 0.17631718 0.58882720 #>  [320,] 0.26863022 0.55912155 #>  [321,] 0.28783260 0.60896375 #>  [322,] 0.23501404 0.53031045 #>  [323,] 0.18889675 0.58258502 #>  [324,] 0.20320414 0.54862598 #>  [325,] 0.19601531 0.48318234 #>  [326,] 0.22419493 0.50834863 #>  [327,] 0.06944136 0.50493348 #>  [328,] 0.19207017 0.47764869 #>  [329,] 0.24527799 0.61890102 #>  [330,] 0.23617517 0.56741639 #>  [331,] 0.13735308 0.66153663 #>  [332,] 0.20025587 0.51302931 #>  [333,] 0.14097441 0.50941200 #>  [334,] 0.12287173 0.64099511 #>  [335,] 0.20094791 0.58071105 #>  [336,] 0.16557193 0.51036792 #>  [337,] 0.16419334 0.55867281 #>  [338,] 0.29877925 0.56198862 #>  [339,] 0.13690918 0.47599426 #>  [340,] 0.14028621 0.42772583 #>  [341,] 0.12116722 0.32042264 #>  [342,] 0.16669325 0.35365330 #>  [343,] 0.15778550 0.44712569 #>  [344,] 0.15654845 0.42396901 #>  [345,] 0.11346905 0.39484954 #>  [346,] 0.15221867 0.40275853 #>  [347,] 0.06535192 0.36250508 #>  [348,] 0.16436913 0.35488141 #>  [349,] 0.15682181 0.41288603 #>  [350,] 0.10518780 0.32754696 #>  [351,] 0.10173211 0.30660924 #>  [352,] 0.11064822 0.30745969 #>  [353,] 0.11940911 0.33400598 #>  [354,] 0.16955941 0.34873962 #>  [355,] 0.19759904 0.58376259 #>  [356,] 0.15501532 0.38793136 #>  [357,] 0.11208510 0.61128932 #>  [358,] 0.17245251 0.50004255 #>  [359,] 0.12959606 0.33727817 #>  [360,] 0.09921731 0.56902707 #>  [361,] 0.13979724 0.54142547 #>  [362,] 0.23482309 0.60685283 #>  [363,] 0.18115073 0.65827433 #>  [364,] 0.13291125 0.60016465 #>  [365,] 0.13963665 0.59908340 #>  [366,] 0.16712573 0.65545366 #>  [367,] 0.09172408 0.61906147 #>  [368,] 0.19681082 0.51806858 #>  [369,] 0.14507051 0.65603963 #>  [370,] 0.31113996 0.56805850 #>  [371,] 0.22740376 0.51198683 #>  [372,] 0.30242791 0.76428303 #>  [373,] 0.29427096 0.56657110 #>  [374,] 0.28166856 0.66086170 #>  [375,] 0.22707964 0.53523147 #>  [376,] 0.20485112 0.57646903 #>  [377,] 0.16162619 0.42845580 #>  [378,] 0.24728074 0.58615822 #>  [379,] 0.25429621 0.53140743 #>  [380,] 0.23682028 0.50209081 #>  [381,] 0.33900587 0.55699021 #>  [382,] 0.26970166 0.58395807 #>  [383,] 0.22856543 0.63236131 #>  [384,] 0.24376825 0.55509085 #>  [385,] 0.30309736 0.65309042 #>  [386,] 0.21828359 0.51135538 #>  [387,] 0.31983312 0.49728255 #>  [388,] 0.25573926 0.45295501 #>  [389,] 0.20961347 0.47773012 #>  [390,] 0.26706177 0.54980377 #>  [391,] 0.12131609 0.38635014 #>  [392,] 0.12761758 0.30243462 #>  [393,] 0.13621808 0.35971631 #>  [394,] 0.13479893 0.33395328 #>  [395,] 0.13077110 0.33512050 #>  [396,] 0.11269336 0.34792815 #>  [397,] 0.16092870 0.34339299 #>  [398,] 0.08925423 0.24892368 #>  [399,] 0.11827335 0.37248197 #>  [400,] 0.15048424 0.29653432 #>  [401,] 0.12800948 0.30587421 #>  [402,] 0.11610227 0.27435991 #>  [403,] 0.13082576 0.32994035 #>  [404,] 0.08389929 0.29424174 #>  [405,] 0.10570942 0.23053166 #>  [406,] 0.11522015 0.25451362 #>  [407,] 0.13577196 0.21757494 #>  [408,] 0.12222018 0.23700003 #>  [409,] 0.08789546 0.22699749 #>  [410,] 0.06893566 0.18243872 #>  [411,] 0.10366747 0.29589680 #>  [412,] 0.10646942 0.41770150 #>  [413,] 0.11941829 0.38319269 #>  [414,] 0.09055480 0.38912117 #>  [415,] 0.09656121 0.30655173 #>  [416,] 0.09651358 0.30332227 #>  [417,] 0.05243151 0.28263915 #>  [418,] 0.08782524 0.30890291 #>  [419,] 0.10579679 0.31700060 #>  [420,] 0.04184404 0.25503601 #>  [421,] 0.04147626 0.30549884 #>  [422,] 0.06368135 0.31490774 #>  [423,] 0.05801864 0.46482943 #>  [424,] 0.07970452 0.42019892 #>  [425,] 0.09196680 0.24125794 #>  [426,] 0.04912025 0.29719574 #>  [427,] 0.04800309 0.36471682 #>  [428,] 0.05428953 0.28282042 #>  [429,] 0.04816206 0.24976407 #>  [430,] 0.03628430 0.28375020 #>  [431,] 0.05089060 0.27452319 #>  [432,] 0.05069044 0.22913665 #>  [433,] 0.07539367 0.39872190 #>  [434,] 0.04762066 0.23250723 #>  [435,] 0.04587197 0.31526799 #>  [436,] 0.02893313 0.24595860 #>  [437,] 0.03499522 0.26239736 #>  [438,] 0.03179400 0.33986330 #>  [439,] 0.02408983 0.31627787 #>  [440,] 0.02639172 0.24679072 #>  [441,] 0.05929595 0.18870747 #>  [442,] 0.04137296 0.11260551 #>  [443,] 0.05970792 0.14783377 #>  [444,] 0.07495462 0.13753256 #>  [445,] 0.04396816 0.15319078 #>  [446,] 0.07467771 0.12097564 #>  [447,] 0.09388180 0.16098007 #>  [448,] 0.11234155 0.18542499 #>  [449,] 0.11633640 0.21630634 #>  [450,] 0.06704007 0.18809692 #>  [451,] 0.08377365 0.18559074 #>  [452,] 0.06902291 0.16922840 #>  [453,] 0.06029721 0.14585312 #>  [454,] 0.07234882 0.13992073 #>  [455,] 0.12087726 0.20490376 #>  [456,] 0.07608310 0.21326205 #>  [457,] 0.10993900 0.22251092 #>  [458,] 0.11005660 0.21712151 #>  [459,] 0.08722293 0.17787535 #>  [460,] 0.11371772 0.19482537 #>  [461,] 0.06526920 0.19443034 #>  [462,] 0.12892568 0.21523803 #>  [463,] 0.12441600 0.20233715 #>  [464,] 0.08047760 0.26502709 #>  [465,] 0.07746376 0.19701482 #>  [466,] 0.07110628 0.22899614 #>  [467,] 0.06538569 0.20296953 #>  [468,] 0.12794801 0.21165259 #>  [469,] 0.11465783 0.18732113 #>  [470,] 0.12823946 0.30033236 #>  [471,] 0.12754502 0.25262025 #>  [472,] 0.11901803 0.25693488 #>  [473,] 0.09528028 0.30340871 #>  [474,] 0.15576432 0.31034913 #>  [475,] 0.10828906 0.32661728 #>  [476,] 0.17447959 0.27182425 #>  [477,] 0.17834342 0.26955944 #>  [478,] 0.16602938 0.26691614 #>  [479,] 0.04057388 0.20650244 #>  [480,] 0.14794050 0.26390709 #>  [481,] 0.09102905 0.25386438 #>  [482,] 0.11802769 0.23978415 #>  [483,] 0.11600677 0.20519083 #>  [484,] 0.10846964 0.21034848 #>  [485,] 0.13888923 0.23791328 #>  [486,] 0.07891972 0.24128040 #>  [487,] 0.08891864 0.22153672 #>  [488,] 0.11350162 0.24189184 #>  [489,] 0.13121476 0.22716697 #>  [490,] 0.14606972 0.25688395 #>  [491,] 0.12622717 0.24627925 #>  [492,] 0.10014293 0.23247761 #>  [493,] 0.11105196 0.22450242 #>  [494,] 0.15089349 0.24648408 #>  [495,] 0.09770264 0.25138194 #>  [496,] 0.11955465 0.23023816 #>  [497,] 0.12940696 0.21552360 #>  [498,] 0.08351634 0.23390538 #>  [499,] 0.12660059 0.22415487 #>  [500,] 0.15157292 0.23727007 #>  [501,] 0.09497095 0.20619500 #>  [502,] 0.05848578 0.21469351 #>  [503,] 0.05218166 0.20137882 #>  [504,] 0.04720293 0.17300061 #>  [505,] 0.04517240 0.13836503 #>  [506,] 0.13346210 0.29257375 #>  [507,] 0.09402384 0.36219794 #>  [508,] 0.07712363 0.29524128 #>  [509,] 0.12399957 0.29220191 #>  [510,] 0.13534948 0.31204447 #>  [511,] 0.06685418 0.23160641 #>  [512,] 0.16628092 0.25643227 #>  [513,] 0.16088019 0.34645803 #>  [514,] 0.19159679 0.41920376 #>  [515,] 0.18331622 0.38318256 #>  [516,] 0.08255197 0.38717003 #>  [517,] 0.17021684 0.35429782 #>  [518,] 0.17127821 0.37387066 #>  [519,] 0.16170910 0.40400560 #>  [520,] 0.12529983 0.46224076 #>  [521,] 0.10420365 0.32908265 #>  [522,] 0.11736437 0.44397020 #>  [523,] 0.10210807 0.46655662 #>  [524,] 0.11669115 0.30230756 #>  [525,] 0.13656509 0.37421485 #>  [526,] 0.22958974 0.39690700 #>  [527,] 0.11384785 0.38582065 #>  [528,] 0.13934529 0.47920254 #>  [529,] 0.17167257 0.35392301 #>  [530,] 0.13964162 0.40524304 #>  [531,] 0.15800332 0.33054045 #>  [532,] 0.13835035 0.34392619 #>  [533,] 0.15762596 0.38547575 #>  [534,] 0.10903535 0.47628777 #>  [535,] 0.15539021 0.40207996 #>  [536,] 0.15073808 0.46952163 #>  [537,] 0.21358371 0.40509908 #>  [538,] 0.15352757 0.36770074 #>  [539,] 0.17461883 0.40341193 #>  [540,] 0.16645723 0.36484994 #>  [541,] 0.17935742 0.30856692 #>  [542,] 0.11894637 0.32106473 #>  [543,] 0.09466684 0.32654903 #>  [544,] 0.15260827 0.27576671 #>  [545,] 0.12998109 0.30805588 #>  [546,] 0.14617060 0.26833658 #>  [547,] 0.17696101 0.30693170 #>  [548,] 0.11720765 0.29498079 #>  [549,] 0.05249026 0.25523649 #>  [550,] 0.06826852 0.22728064 #>  [551,] 0.05825928 0.10606105 #>  [552,] 0.04455985 0.12564773 #>  [553,] 0.07063088 0.09934341 #>  [554,] 0.06251553 0.10804369 #>  [555,] 0.05435300 0.10618503 #>  [556,] 0.07292115 0.13680049 #>  [557,] 0.04032323 0.12504218 #>  [558,] 0.06460216 0.11076552 #>  [559,] 0.02262832 0.12526998 #>  [560,] 0.04223413 0.12588589 #>  [561,] 0.05137078 0.10954571 #>  [562,] 0.06242024 0.12235276 #>  [563,] 0.06380185 0.12656453 #>  [564,] 0.06244141 0.12975696 #>  [565,] 0.05793546 0.11417854 #>  [566,] 0.02827529 0.14959102 #>  [567,] 0.04421894 0.15019668 #>  [568,] 0.04857733 0.10300588 #>  [569,] 0.04103412 0.11953238 #>  [570,] 0.04035896 0.18171151 #>  [571,] 0.04538214 0.12138130 #>  [572,] 0.06005127 0.13555347 #>  [573,] 0.04464901 0.11783958 #>  [574,] 0.07533775 0.13801589 #>  [575,] 0.06054333 0.15422102 #>  [576,] 0.06074879 0.12411840 #>  [577,] 0.04951509 0.13158532 #>  [578,] 0.06829429 0.14751099 #>  [579,] 0.05458123 0.11216535 #>  [580,] 0.05113875 0.15104782 #>  [581,] 0.04426049 0.15991218 #>  [582,] 0.04798371 0.12324991 #>  [583,] 0.05102270 0.10677881 #>  [584,] 0.01800254 0.13968209 #>  [585,] 0.03751390 0.09929493 #>  [586,] 0.01383303 0.10411927 #>  [587,] 0.02786924 0.08001539 #>  [588,] 0.03430347 0.09558590 #>  [589,] 0.04158291 0.10567677 #>  [590,] 0.04178563 0.11427711 #>  [591,] 0.03072759 0.10269681 #>  [592,] 0.03051730 0.08152743 #>  [593,] 0.02836294 0.07029495 #>  [594,] 0.02205894 0.07017135 #>  [595,] 0.02576243 0.09477509 #>  [596,] 0.03483017 0.08442285 #>  [597,] 0.02669746 0.07214884 #>  [598,] 0.03608479 0.13304313 #>  [599,] 0.02730292 0.08427193 #>  [600,] 0.03787297 0.09652277 #>  [601,] 0.01898569 0.08091532 #>  [602,] 0.03175092 0.09175187 #>  [603,] 0.03879352 0.08759439 #>  [604,] 0.03919016 0.08788542 #>  [605,] 0.03403850 0.08600023 #>  [606,] 0.02000687 0.09830146 #>  [607,] 0.04088158 0.08135078 #>  [608,] 0.02022857 0.08290758 #>  [609,] 0.02651996 0.06937489 #>  [610,] 0.03817434 0.06585503 #>  [611,] 0.01591057 0.05998741 #>  [612,] 0.02275261 0.06593338 #>  [613,] 0.04945545 0.07743116 #>  [614,] 0.03900012 0.08050619 #>  [615,] 0.03947439 0.09641106 #>  [616,] 0.03424144 0.08784706 #>  [617,] 0.06537674 0.09798130 #>  [618,] 0.04308341 0.11511989 #>  [619,] 0.07903294 0.11014207 #>  [620,] 0.05996032 0.10062318 #>  [621,] 0.05705963 0.13003044 #>  [622,] 0.06623295 0.15657908 #>  [623,] 0.07251049 0.12494254 #>  [624,] 0.06909967 0.12128882 #>  [625,] 0.05916653 0.14089919 #>  [626,] 0.08284533 0.14189756 #>  [627,] 0.04355647 0.14328063 #>  [628,] 0.09388829 0.14754191 #>  [629,] 0.08213801 0.13736936 #>  [630,] 0.07217175 0.15797508 #>  [631,] 0.09767888 0.14208641 #>  [632,] 0.08665839 0.13434287 #>  [633,] 0.06628568 0.12510431 #>  [634,] 0.07175066 0.17701503 #>  [635,] 0.09455802 0.18501290 #>  [636,] 0.06651458 0.14149915 #>  [637,] 0.09246944 0.15999558 #>  [638,] 0.08652999 0.15132702 #>  [639,] 0.06634671 0.13752829 #>  [640,] 0.06418991 0.16416254 #>  [641,] 0.06862788 0.17222497 #>  [642,] 0.05910716 0.12197387 #>  [643,] 0.09049213 0.13244127 #>  [644,] 0.05850533 0.12747595 #>  [645,] 0.06647948 0.17703217 #>  [646,] 0.06335968 0.11053284 #>  [647,] 0.06138207 0.15529881 #>  [648,] 0.04096214 0.10793814 #>  [649,] 0.04869249 0.12560597 #>  [650,] 0.03544866 0.07539356 #>  [651,] 0.04780923 0.09575254 #>  [652,] 0.05680922 0.12555787 #>  [653,] 0.02555840 0.13338805 #>  [654,] 0.02436708 0.07736937 #>  [655,] 0.02883693 0.06821712 #>  [656,] 0.03155273 0.05372984 #>  [657,] 0.02025140 0.03579308 #>  [658,] 0.01360958 0.03653863 #>  [659,] 0.01351640 0.03605463 #>  [660,] 0.02130818 0.03881012 #>  [661,] 0.01445043 0.03758476 #>  [662,] 0.01958645 0.03481905 #>  [663,] 0.01793912 0.04857721 #>  [664,] 0.01835493 0.03710355 #>  [665,] 0.01816002 0.04100871 #>  [666,] 0.03141358 0.05524559 #>  [667,] 0.01610998 0.06495195 #>  [668,] 0.03041707 0.05380022 #>  [669,] 0.02100001 0.05740151 #>  [670,] 0.02273508 0.05381451 #>  [671,] 0.02745409 0.04460078 #>  [672,] 0.02980039 0.05242626 #>  [673,] 0.03057400 0.05814684 #>  [674,] 0.02315026 0.05806927 #>  [675,] 0.02670145 0.05105337 #>  [676,] 0.01244783 0.04597520 #>  [677,] 0.02198228 0.04918890 #>  [678,] 0.02132887 0.04651021 #>  [679,] 0.02430131 0.03686761 #>  [680,] 0.01866900 0.04917805 #>  [681,] 0.01503523 0.03694092 #>  [682,] 0.01354809 0.03538723 #>  [683,] 0.01484569 0.04301107 #>  [684,] 0.02588608 0.05862321 #>  [685,] 0.03065698 0.05952346 #>  [686,] 0.02280341 0.06802450 #>  [687,] 0.01877734 0.06819406 #>  [688,] 0.03275340 0.08126158 #>  [689,] 0.02246264 0.05897563 #>  [690,] 0.01985377 0.06835056 #>  [691,] 0.03710383 0.06786168 #>  [692,] 0.04924594 0.08055954 #>  [693,] 0.04735576 0.08672141 #>  [694,] 0.04741192 0.07553340 #>  [695,] 0.02831233 0.09204429 #>  [696,] 0.04099217 0.09192206 #>  [697,] 0.03418536 0.06054332 #>  [698,] 0.05146517 0.08847045 #>  [699,] 0.04835550 0.08467419 #>  [700,] 0.02515743 0.08664180 #>  [701,] 0.01805278 0.07803419 #>  [702,] 0.02944638 0.08173470 #>  [703,] 0.02773790 0.07510748 #>  [704,] 0.04192520 0.06647684 #>  [705,] 0.04679466 0.08173793 #>  [706,] 0.03058387 0.06298460 #>  [707,] 0.02476913 0.07760023 #>  [708,] 0.03709259 0.07603272 #>  [709,] 0.03159376 0.17862796 #>  [710,] 0.04096617 0.19330806 #>  [711,] 0.03939860 0.16815367 #>  [712,] 0.03821348 0.09253459 #>  [713,] 0.04060185 0.16016047 #>  [714,] 0.02694179 0.13320818 #>  [715,] 0.09982282 0.17609114 #>  [716,] 0.04527608 0.20905361 #>  [717,] 0.04508310 0.16001425 #>  [718,] 0.03980246 0.18143482 #>  [719,] 0.06953179 0.19387144 #>  [720,] 0.10610036 0.30710784 #>  [721,] 0.09181406 0.43796856 #>  [722,] 0.05727228 0.22737230 #>  [723,] 0.05972572 0.42082590 #>  [724,] 0.03197803 0.30065638 #>  [725,] 0.06235330 0.30932804 #>  [726,] 0.03478556 0.27105093 #>  [727,] 0.01903281 0.29402457 #>  [728,] 0.09868163 0.34427794 #>  [729,] 0.03067400 0.26220114 #>  [730,] 0.11607855 0.28484085 #>  [731,] 0.08571438 0.28095004 #>  [732,] 0.03315498 0.25027596 #>  [733,] 0.10941935 0.32880812 #>  [734,] 0.10125478 0.24422739 #>  [735,] 0.10070434 0.27365928 #>  [736,] 0.06593624 0.28009077 #>  [737,] 0.04121670 0.25384753 #>  [738,] 0.03609943 0.37857737 #>  [739,] 0.04463872 0.36658057 #>  [740,] 0.06891314 0.27792697 #>  [741,] 0.05710696 0.31283817 #>  [742,] 0.08698931 0.26746387 #>  [743,] 0.04515627 0.26247991 #>  [744,] 0.01709555 0.21381341 #>  [745,] 0.03457911 0.23904991 #>  [746,] 0.04414691 0.18030585 #>  [747,] 0.05183499 0.21661194 #>  [748,] 0.07079221 0.33556507 #>  [749,] 0.10646204 0.26288011 #>  [750,] 0.03872196 0.18364971 #>  [751,] 0.05984603 0.17244756 #>  [752,] 0.08129230 0.17744319 #>  [753,] 0.08440480 0.18765439 #>  [754,] 0.08224127 0.16174708 #>  [755,] 0.06268578 0.18113319 #>  [756,] 0.09703605 0.21001577 #>  [757,] 0.09402515 0.16861869 #>  [758,] 0.12579977 0.17663247 #>  [759,] 0.09905365 0.17829423 #>  [760,] 0.08908993 0.18643100 #>  [761,] 0.11947785 0.19053197 #>  [762,] 0.10193159 0.20430479 #>  [763,] 0.11181143 0.21150012 #>  [764,] 0.08338856 0.16488174 #>  [765,] 0.10422279 0.16781174 #>  [766,] 0.11688082 0.19042223 #>  [767,] 0.10463212 0.19027280 #>  [768,] 0.11308665 0.19015523 #>  [769,] 0.07922230 0.17962571 #>  [770,] 0.08215839 0.18160123 #>  [771,] 0.08080478 0.18097281 #>  [772,] 0.05144987 0.14754009 #>  [773,] 0.08832835 0.17573155 #>  [774,] 0.07406313 0.17617740 #>  [775,] 0.06346065 0.14433336 #>  [776,] 0.05144109 0.17624023 #>  [777,] 0.06489516 0.16773486 #>  [778,] 0.06831649 0.18133705 #>  [779,] 0.05876383 0.13267775 #>  [780,] 0.04931906 0.13314640 #>  [781,] 0.04124242 0.10737611 #>  [782,] 0.04394022 0.13908079 #>  [783,] 0.05084012 0.11811696 #>  [784,] 0.05866350 0.18595407 #>  [785,] 0.05872394 0.11127320 #>  [786,] 0.03863329 0.11365960 #>  [787,] 0.03732667 0.22031866 #>  [788,] 0.04842496 0.20679933 #>  [789,] 0.04891944 0.24061145 #>  [790,] 0.04542288 0.26145157 #>  [791,] 0.04609928 0.20799062 #>  [792,] 0.05061539 0.22484236 #>  [793,] 0.04683911 0.22885029 #>  [794,] 0.04681590 0.23388022 #>  [795,] 0.08974636 0.24773632 #>  [796,] 0.03953551 0.20608016 #>  [797,] 0.07566553 0.22408882 #>  [798,] 0.06294957 0.27814799 #>  [799,] 0.05008168 0.25342446 #>  [800,] 0.07162830 0.22311644 #>  [801,] 0.08762422 0.30633730 #>  [802,] 0.05907582 0.31186724 #>  [803,] 0.06553558 0.25212012 #>  [804,] 0.06928716 0.26816845 #>  [805,] 0.07354843 0.25145422 #>  [806,] 0.13316791 0.33115404 #>  [807,] 0.06036369 0.30066492 #>  [808,] 0.04830734 0.25435013 #>  [809,] 0.05320516 0.26232676 #>  [810,] 0.03738084 0.26963468 #>  [811,] 0.03384543 0.26466139 #>  [812,] 0.06830690 0.25735916 #>  [813,] 0.16931626 0.25305563 #>  [814,] 0.07550565 0.29286219 #>  [815,] 0.05336961 0.46117885 #>  [816,] 0.07049188 0.30161131 #>  [817,] 0.14633284 0.33278583 #>  [818,] 0.06391262 0.37923066 #>  [819,] 0.05411275 0.27812708 #>  [820,] 0.03611593 0.31317124 #>  [821,] 0.07974063 0.52219629 #>  [822,] 0.06798129 0.43416578 #>  [823,] 0.09276476 0.35296382 #>  [824,] 0.05985278 0.35985610 #>  [825,] 0.11309674 0.41597005 #>  [826,] 0.15211896 0.43634149 #>  [827,] 0.19786494 0.44323644 #>  [828,] 0.24345381 0.53475443 #>  [829,] 0.12396727 0.39402554 #>  [830,] 0.23883981 0.50037877 #>  [831,] 0.14503422 0.45227313 #>  [832,] 0.25479487 0.45305147 #>  [833,] 0.18953352 0.50560265 #>  [834,] 0.20602848 0.51195643 #>  [835,] 0.14520986 0.38792644 #>  [836,] 0.25325994 0.44228596 #>  [837,] 0.08936816 0.42858869 #>  [838,] 0.14363962 0.53774674 #>  [839,] 0.13363206 0.51409564 #>  [840,] 0.13481791 0.53916689 #>  [841,] 0.10678524 0.42506729 #>  [842,] 0.14374563 0.48165473 #>  [843,] 0.09623417 0.48672757 #>  [844,] 0.12426608 0.45329543 #>  [845,] 0.14917563 0.44856667 #>  [846,] 0.06127952 0.24255495 #>  [847,] 0.11734235 0.22041675 #>  [848,] 0.03509745 0.21504988 #>  [849,] 0.10455573 0.20636740 #>  [850,] 0.05129703 0.24058028 #>  [851,] 0.05694823 0.23824723 #>  [852,] 0.05847977 0.15696038 #>  [853,] 0.05795998 0.13660060 #>  [854,] 0.04703416 0.17576696 #>  [855,] 0.06328038 0.13586060 #>  [856,] 0.04651852 0.11251381 #>  [857,] 0.02104612 0.10850187 #>  [858,] 0.04458328 0.12957058 #>  [859,] 0.05379687 0.12354089 #>  [860,] 0.01881169 0.05253459 #>  [861,] 0.01745675 0.26684589 #>  [862,] 0.02235159 0.26860770 #>  [863,] 0.02436662 0.33113937 #>  [864,] 0.09523876 0.50571734 #>  [865,] 0.08896628 0.65934987 #>  [866,] 0.08674390 0.37070105 #>  [867,] 0.08239937 0.49067999 #>  [868,] 0.11031477 0.42867646 #>  [869,] 0.04118706 0.33369172 #>  [870,] 0.04654779 0.59376070 #>  [871,] 0.09944480 0.45285662 #>  [872,] 0.10313091 0.47273928 #>  [873,] 0.16667218 0.48617767 #>  [874,] 0.20593941 0.48717826 #>  [875,] 0.10611136 0.37330105 #>  [876,] 0.12502924 0.60590931 #>  [877,] 0.13162100 0.46912565 #>  [878,] 0.13380357 0.53118099 #>  [879,] 0.19384088 0.64076110 #>  [880,] 0.13159014 0.63889640 #>  [881,] 0.31717992 0.58108308 #>  [882,] 0.31170847 0.59285889 #>  [883,] 0.29943161 0.59047911 #>  [884,] 0.22383721 0.68447189 #>  [885,] 0.19353851 0.63723133 #>  [886,] 0.27623021 0.73642586 #>  [887,] 0.19171420 0.84167170 #>  [888,] 0.35971969 0.60461907 #>  [889,] 0.34023500 0.71240927 #>  [890,] 0.36943369 0.63812957 #>  [891,] 0.29005206 0.83966237 #>  [892,] 0.31637632 0.80443594 #>  [893,] 0.21454280 0.63629896 #>  [894,] 0.23984889 0.71822480 #>  [895,] 0.16953419 0.33461299 #>  [896,] 0.08803705 0.45439316 #>  [897,] 0.12081369 0.37153312 #>  [898,] 0.14561008 0.33196327 #>  [899,] 0.11872194 0.35653223 #>  [900,] 0.14404418 0.39775697 #>  [901,] 0.12555786 0.35216212 #>  [902,] 0.15842673 0.35573193 #>  [903,] 0.20973570 0.47756402 #>  [904,] 0.19698816 0.46115130 #>  [905,] 0.21472245 0.42263483 #>  [906,] 0.11392443 0.47423523 #>  [907,] 0.13951413 0.41030017 #>  [908,] 0.17061172 0.43519762 #>  [909,] 0.10298779 0.41156139 #>  [910,] 0.13387375 0.36404646 #>  [911,] 0.09576558 0.43177978 #>  [912,] 0.11688764 0.21530526 #>  [913,] 0.09390672 0.36453889 #>  [914,] 0.06705924 0.24262534 #>  [915,] 0.06846842 0.24738448 #>  [916,] 0.04572022 0.30242590 #>  [917,] 0.04819049 0.26412443 #>  [918,] 0.08219741 0.23730225 #>  [919,] 0.04010023 0.25020901 #>  [920,] 0.03799114 0.19642094 #>  [921,] 0.05751206 0.15175892 #>  [922,] 0.04358315 0.16980921 #>  [923,] 0.03012618 0.14266371 #>  [924,] 0.02847537 0.10494518 #>  [925,] 0.01987320 0.15091056 #>  [926,] 0.04552587 0.15137568 #>  [927,] 0.04175124 0.13440083 #>  [928,] 0.03445195 0.14848310 #>  [929,] 0.03361368 0.13353682 #>  [930,] 0.03419847 0.13933459 #>  [931,] 0.04490489 0.20385463 #>  [932,] 0.05297547 0.20391001 #>  [933,] 0.02321180 0.14968530 #>  [934,] 0.03638526 0.20082018 #>  [935,] 0.02623058 0.11573846 #>  [936,] 0.04449551 0.21567125 #>  [937,] 0.03471273 0.08844818 #>  [938,] 0.02729075 0.09257694 #>  [939,] 0.02425985 0.11301351 #>  [940,] 0.02758775 0.09820606 #>  [941,] 0.04689868 0.10156744 #>  [942,] 0.03069906 0.11140284 #>  [943,] 0.05444046 0.13068051 #>  [944,] 0.03521404 0.13844802 #>  [945,] 0.02846090 0.14251681 #>  [946,] 0.04298971 0.13464344 #>  [947,] 0.03269636 0.09646684 #>  [948,] 0.03991044 0.11426463 #>  [949,] 0.04691071 0.11689182 #>  [950,] 0.03942319 0.12011487 #>  [951,] 0.02740986 0.12903183 #>  [952,] 0.03803467 0.16143258 #>  [953,] 0.03480807 0.08162376 #>  [954,] 0.03534284 0.08780927 #>  [955,] 0.02566982 0.11514753 #>  [956,] 0.05792757 0.10396145 #>  [957,] 0.03988110 0.09818084 #>  [958,] 0.03446607 0.11925690 #>  [959,] 0.02856083 0.09835200 #>  [960,] 0.04110387 0.11897812 #>  [961,] 0.05264322 0.08544334 #>  [962,] 0.03854716 0.11503204 #>  [963,] 0.03529889 0.08977649 #>  [964,] 0.05772181 0.11644973 #>  [965,] 0.06643068 0.09696316 #>  [966,] 0.05471591 0.10034386 #>  [967,] 0.02727883 0.09525388 #>  [968,] 0.04152046 0.10133982 #>  [969,] 0.05837466 0.10818755 #>  [970,] 0.04840851 0.12119064 #>  [971,] 0.04369669 0.09437644 #>  [972,] 0.05474590 0.09285168 #>  [973,] 0.06024765 0.10847894 #>  [974,] 0.04309852 0.11720733 #>  [975,] 0.03260231 0.10105521 #>  [976,] 0.02693191 0.09542457 #>  [977,] 0.04561084 0.10852086 #>  [978,] 0.03673722 0.10509076 #>  [979,] 0.02717481 0.08556620 #>  [980,] 0.02331698 0.11287124 #>  [981,] 0.03698209 0.09789876 #>  [982,] 0.05506591 0.10546808 #>  [983,] 0.03484880 0.12059154 #>  [984,] 0.02870847 0.11945558 #>  [985,] 0.03885771 0.13370448 #>  [986,] 0.04472919 0.10121248 #>  [987,] 0.06992197 0.13558570 #>  [988,] 0.03983585 0.12922174 #>  [989,] 0.03273041 0.13307123 #>  [990,] 0.04124460 0.14012190 #>  [991,] 0.06466810 0.11982180 #>  [992,] 0.04099687 0.13491425 #>  [993,] 0.04011179 0.13046808 #>  [994,] 0.06429561 0.11646446 #>  [995,] 0.05341566 0.10901153 #>  [996,] 0.02826429 0.09183147 #>  [997,] 0.04459154 0.07504440 #>  [998,] 0.03578589 0.11387926 #>  [999,] 0.05018210 0.11137901 #> [1000,] 0.03951795 0.07889170 #> [1001,] 0.04634470 0.08501634 #> [1002,] 0.04060089 0.11334131 #> [1003,] 0.03039179 0.08962630 #> [1004,] 0.02464568 0.10874306 #> [1005,] 0.03022504 0.08100680 #> [1006,] 0.02152253 0.07218475 #> [1007,] 0.03626719 0.10684017 #> [1008,] 0.03900654 0.12423916 #> [1009,] 0.02874898 0.09389662 #> [1010,] 0.05072840 0.09452572 #> [1011,] 0.04966529 0.12220566 #> [1012,] 0.06507468 0.09578359 #> [1013,] 0.05039176 0.09311066 #> [1014,] 0.03607274 0.10287960 #> [1015,] 0.02580420 0.08305882 #> [1016,] 0.02914008 0.07860512 #> [1017,] 0.03017519 0.05551473 #> [1018,] 0.02949844 0.07793523 #> [1019,] 0.02579641 0.08151646 #> [1020,] 0.04566885 0.09256921 #> [1021,] 0.03302607 0.12896564 #> [1022,] 0.04780461 0.11395390 #> [1023,] 0.05132850 0.12552878 #> [1024,] 0.04394605 0.10947219 #> [1025,] 0.03473945 0.14970993 #> [1026,] 0.05710878 0.12894816 #> [1027,] 0.04676378 0.11999665 #> [1028,] 0.04327525 0.14938938 #> [1029,] 0.07865044 0.14511671 #> [1030,] 0.03708428 0.16072165 #> [1031,] 0.03507605 0.14199527 #> [1032,] 0.05017572 0.21608236 #> [1033,] 0.07801683 0.18759009 #> [1034,] 0.10957858 0.21199518 #> [1035,] 0.09482272 0.20243007 #> [1036,] 0.12291817 0.27537848 #> [1037,] 0.13106125 0.25647953 #> [1038,] 0.09141002 0.22130176 #> [1039,] 0.10995237 0.21984420 #> [1040,] 0.09623339 0.20037443 #> [1041,] 0.11278159 0.21415998 #> [1042,] 0.10836988 0.26323685 #> [1043,] 0.11700459 0.28419182 #> [1044,] 0.12793554 0.27248267 #> [1045,] 0.10332312 0.27284059 #> [1046,] 0.07357800 0.23231812 #> [1047,] 0.10638673 0.25684372 #> [1048,] 0.09885041 0.28349996 #> [1049,] 0.07733635 0.21376303 #> [1050,] 0.11439378 0.22603459 #> [1051,] 0.08849079 0.16416932 #> [1052,] 0.07089075 0.15730492 #> [1053,] 0.07823740 0.14305985 #> [1054,] 0.11160643 0.17977611 #> [1055,] 0.11570420 0.23889151 #> [1056,] 0.07523326 0.30679353 #> [1057,] 0.09616550 0.20514339 #> [1058,] 0.11488568 0.28661824 #> [1059,] 0.13310954 0.33882956 #> [1060,] 0.18118669 0.34116161 #> [1061,] 0.15364858 0.38210719 #> [1062,] 0.16061039 0.30608535 #> [1063,] 0.15202212 0.36278142 #> [1064,] 0.11361387 0.34318937 #> [1065,] 0.17702783 0.34748923 #> [1066,] 0.11894701 0.29024280 #> [1067,] 0.09942214 0.30435939 #> [1068,] 0.13031870 0.31913629 #> [1069,] 0.14868250 0.37258203 #> [1070,] 0.12799608 0.35021801 #> [1071,] 0.12088455 0.33523585 #> [1072,] 0.09650759 0.33352775 #> [1073,] 0.11265662 0.34846909 #> [1074,] 0.13806546 0.31660026 #> [1075,] 0.09721343 0.31385566 #> [1076,] 0.09637745 0.37720187 #> [1077,] 0.07350899 0.33207744 #> [1078,] 0.06677312 0.32287524 #> [1079,] 0.11045992 0.32625766 #> [1080,] 0.17542246 0.36596153 #> [1081,] 0.12284001 0.41551293 #> [1082,] 0.07965443 0.36695232 #> [1083,] 0.12486646 0.39671217 #> [1084,] 0.18044894 0.31074958 #> [1085,] 0.12544468 0.36923428 #> [1086,] 0.09437873 0.24765052 #> [1087,] 0.11572433 0.33658098 #> [1088,] 0.05318241 0.33068466 #> [1089,] 0.06074210 0.15623191 #> [1090,] 0.05413214 0.12264129 #> [1091,] 0.06343706 0.12625956 #> [1092,] 0.03949548 0.12474837 #> [1093,] 0.03914156 0.09823419 #> [1094,] 0.05299738 0.16650359 #> [1095,] 0.04881865 0.12231917 #> [1096,] 0.05077309 0.16689768 #> [1097,] 0.06740517 0.20195987 #> [1098,] 0.07133973 0.19277504 #> [1099,] 0.06386790 0.26514702 #> [1100,] 0.06087834 0.44020850 #> [1101,] 0.05351714 0.18614243 #> [1102,] 0.08968863 0.22270135 #> [1103,] 0.06956727 0.23821916 #> [1104,] 0.05194981 0.26691878 #> [1105,] 0.06779921 0.22990918 #> [1106,] 0.08074341 0.19120813 #> [1107,] 0.10550805 0.28240496 #> [1108,] 0.10846646 0.27498522 #> [1109,] 0.07956221 0.18538135 #> [1110,] 0.08088023 0.24820903 #> [1111,] 0.06650194 0.35873308 #> [1112,] 0.07535288 0.18994267 #> [1113,] 0.09892720 0.21342036 #> [1114,] 0.06055181 0.19660381 #> [1115,] 0.07742856 0.19067457 #> [1116,] 0.10746261 0.33394473 #> [1117,] 0.07471886 0.23001815 #> [1118,] 0.05599061 0.24424006 #> [1119,] 0.09192472 0.24634386 #> [1120,] 0.06852243 0.34084992 #> [1121,] 0.06023128 0.32043224 #> [1122,] 0.06841041 0.44625200 #> [1123,] 0.05251401 0.27654922 #> [1124,] 0.10255623 0.31753199 #> [1125,] 0.02997604 0.49877990 #> [1126,] 0.08940683 0.36406454 # }"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"generic function applying function rolling margins array along additional value.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"","code":"distroll_circstats(   x,   distance,   FUN,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   w = NULL,   sort = TRUE,   ... )  distroll_confidence(   x,   distance,   w = NULL,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   sort = TRUE,   ... )  distroll_dispersion(   x,   y,   w = NULL,   w.y = NULL,   distance,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   sort = TRUE,   ... )  distroll_dispersion_sde(   x,   y,   w = NULL,   w.y = NULL,   distance,   width = NULL,   min_n = 2,   align = c(\"right\", \"center\", \"left\"),   sort = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"x, y vectors numeric values degrees. length(y) either 1 length(x) distance numeric. independent variable along values x sorted, e.g. plate boundary distances FUN function applied width numeric. range across distance FUN applied x. NULL, width number separates distances 10 equal groups. min_n integer. minimum values considered FUN (2 default), otherwise NA. align specifies whether index result left- right-aligned centered (default) compared rolling window observations. argument used width represents widths. w numeric. weighting x sort logical. values sorted distance prior applying function (TRUE default). ... optional arguments FUN w.y numeric. weighting y","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"two-column vectors (sorted) x rolled statistics along distance.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rolling_test_dist.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply Rolling Functions using Circular Statistics — rolling_test_dist","text":"","code":"data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\") data(\"san_andreas\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") san_andreas$distance <- distance_from_pb(   x = san_andreas,   PoR = PoR,   pb = plate_boundary,   tangential = TRUE ) dat <- san_andreas |> cbind(PoR_shmax(san_andreas, PoR, \"right\"))  distroll_circstats(dat$azi.PoR, distance = dat$distance, w = 1 / dat$unc, FUN = circular_mean) #>         distance         x   n #>  [1,] -9.2265048  68.11323   9 #>  [2,] -7.6044815 127.98953  19 #>  [3,] -5.9824582 155.84338  14 #>  [4,] -4.3604350 154.02577  39 #>  [5,] -2.7384117 138.55072 125 #>  [6,] -1.1163884 138.29357 759 #>  [7,]  0.5056349 142.46616 153 #>  [8,]  2.1276582 147.30864   5 #>  [9,]  3.7496815 178.57158   2 #> [10,]  5.3717047        NA   1 distroll_confidence(dat$azi.PoR, distance = dat$distance, w = 1 / dat$unc) #>         distance          x   n #>  [1,] -9.2265048 147.581596   9 #>  [2,] -7.6044815  44.732416  19 #>  [3,] -5.9824582 101.990075  14 #>  [4,] -4.3604350  43.031293  39 #>  [5,] -2.7384117   9.675720 125 #>  [6,] -1.1163884   4.369003 759 #>  [7,]  0.5056349  11.713927 153 #>  [8,]  2.1276582  20.165812   5 #>  [9,]  3.7496815 180.000000   2 #> [10,]  5.3717047         NA   1 distroll_dispersion(dat$azi.PoR, y = 135, distance = dat$distance, w = 1 / dat$unc) #>         distance          x   n #>  [1,] -9.2265048 0.56974161   9 #>  [2,] -7.6044815 0.31555788  19 #>  [3,] -5.9824582 0.39396588  14 #>  [4,] -4.3604350 0.32627346  39 #>  [5,] -2.7384117 0.06582746 125 #>  [6,] -1.1163884 0.09488957 759 #>  [7,]  0.5056349 0.11027106 153 #>  [8,]  2.1276582 0.06141144   5 #>  [9,]  3.7496815 0.47800478   2 #> [10,]  5.3717047         NA   1 distroll_dispersion_sde(dat$azi.PoR, y = 135, distance = dat$distance, w = 1 / dat$unc, R = 100) #>         distance          x   n #>  [1,] -9.2265048 0.19223776   9 #>  [2,] -7.6044815 0.15681826  19 #>  [3,] -5.9824582 0.21465546  14 #>  [4,] -4.3604350 0.11958988  39 #>  [5,] -2.7384117 0.02090297 125 #>  [6,] -1.1163884 0.01176760 759 #>  [7,]  0.5056349 0.02242678 153 #>  [8,]  2.1276582 0.03415107   5 #>  [9,]  3.7496815 0.05898341   2 #> [10,]  5.3717047         NA   1"},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":null,"dir":"Reference","previous_headings":"","what":"Rose Diagram — rose","title":"Rose Diagram — rose","text":"Plots rose diagram (rose directions), analogue histogram density plot angular data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rose Diagram — rose","text":"","code":"rose(   x,   weights = NULL,   binwidth = NULL,   bins = NULL,   axial = TRUE,   equal_area = TRUE,   muci = TRUE,   round_binwidth = 0,   mtext = \"N\",   main = NULL,   sub = NULL,   at = seq(0, 360 - 45, 45),   cborder = TRUE,   labels = TRUE,   col = \"grey\",   dots = FALSE,   dot_pch = 1,   dot_cex = 1,   dot_col = \"slategrey\",   stack = FALSE,   jitter_factor = 0,   grid = FALSE,   grid.lines = seq(0, 135, 45),   grid.circles = seq(0.2, 1, 0.2),   add = FALSE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rose Diagram — rose","text":"x Data plotted. numeric vector containing angles (degrees). weights Optional vector numeric weights associated x. binwidth width bins (degrees). bins number arcs partition circle width. Overridden binwidth. axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). equal_area Logical. Whether radii bins proportional frequencies (equal_area=FALSE, .e. equal-angle) proportional square-root frequencies (equal_area=TRUE, default). muci logical. Whether mean 95% CI added plot . round_binwidth integer. Number decimal places bin width (0 default). mtext character. String drawn top margin plot (\"N\" default) main, sub Character string specifying title subtitle plot. sub = NULL, show bin width. Optional vector angles tick marks plotted. Set =numeric(0) suppress tick marks. cborder logical. Border rose plot. labels Either logical value indicating whether plot labels next tick marks, vector labels tick marks. col fill color bins dots logical. Whether circular dot plot added (FALSE default). dot_cex, dot_pch, dot_col Plotting arguments circular dot plot stack logical. Groups stacks dots TRUE. Default FALSE. jitter_factor Add small amount noise angles' radius added scale. Jitter ignored stack==TRUE). 0, jitter added (default); negative, points fall circle. grid logical. Whether add grid. Default FALSE. grid.lines, grid.circles numeric. Adds sequence straight grid lines circles based angles radii, respectively. Ignored grid=FALSE add logical. ... Additional arguments passed spatstat.explore::rose().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rose Diagram — rose","text":"window (class \"owin\") containing plotted region list calculated frequencies.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Rose Diagram — rose","text":"bins binwidth NULL, optimal bin width calculated using Scott (1979): $$ w_b = \\frac{R}{n^{\\frac{1}{3}}} $$ n length x, range R either 180 360 degree axial directional data, respectively. \"axial\" == TRUE, binwidth adjusted guarantee symmetrical fans.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Rose Diagram — rose","text":"","code":"x <- rvm(100, mean = 90, k = 5) rose(x, axial = FALSE, border = TRUE, grid = TRUE)   data(\"san_andreas\") #' rose(san_andreas$azi, main = \"equal area\")  rose(san_andreas$azi, equal_area = FALSE, main = \"equal angle\")   # weighted frequencies: rose(san_andreas$azi, weights = 1 / san_andreas$unc, main = \"weighted\")   # add dots rose(san_andreas$azi, dots = TRUE, main = \"dot plot\", jitter = .2)  rose(san_andreas$azi,   dots = TRUE, stack = TRUE, dot_cex = 0.5, dot_pch = 21,   main = \"stacked dot plot\" )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_bw.html","id":null,"dir":"Reference","previous_headings":"","what":"Selecting optimal number of bins and width for rose diagrams — rose_bw","title":"Selecting optimal number of bins and width for rose diagrams — rose_bw","text":"Selecting optimal number bins width rose diagrams","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_bw.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Selecting optimal number of bins and width for rose diagrams — rose_bw","text":"","code":"rose_bins(n, round = FALSE)  rose_binwidth(n, axial = TRUE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_bw.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Selecting optimal number of bins and width for rose diagrams — rose_bw","text":"n Integer. number data round Logical. Whether bin width round zero digits (round=TRUE, default) (FALSE). axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). ... Additional arguments passed rose_bw().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":null,"dir":"Reference","previous_headings":"","what":"Direction Lines and Fans in Circular Diagram — rose_geom","title":"Direction Lines and Fans in Circular Diagram — rose_geom","text":"Direction Lines Fans Circular Diagram","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Direction Lines and Fans in Circular Diagram — rose_geom","text":"","code":"rose_line(x, radius = 1, axial = TRUE, add = TRUE, ...)  rose_fan(x, d, radius = 1, axial = TRUE, add = TRUE, ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Direction Lines and Fans in Circular Diagram — rose_geom","text":"x angles degrees radius plotted circle axial Logical. Whether x uniaxial (axial=FALSE) biaxial (TRUE, default). add logical. Add existing plot? ... optional arguments passed graphics::segments() graphics::polygon() d width fan (degrees)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Direction Lines and Fans in Circular Diagram — rose_geom","text":"return value, called side effects","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_geom.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Direction Lines and Fans in Circular Diagram — rose_geom","text":"","code":"angles <- c(0, 10, 45) radius <- c(.7, 1, .2) lwd <- c(2, 1, .75) col <- c(1, 2, 3) rose_line(angles, radius = radius, axial = FALSE, add = FALSE, lwd = lwd, col = col)"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":null,"dir":"Reference","previous_headings":"","what":"Show Average Direction and Spread in Rose Diagram — rose_stats","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"Adds average direction (spread) existing rose diagram.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"","code":"rose_stats(   x,   weights = NULL,   axial = TRUE,   avg = c(\"mean\", \"median\", \"sample_median\"),   spread = c(\"CI\", \"fisher\", \"sd\", \"IQR\", \"mdev\"),   f = 1,   avg.col = \"#B63679FF\",   avg.lty = 2,   avg.lwd = 1.5,   spread.col = ggplot2::alpha(\"#B63679FF\", 0.2),   spread.border = FALSE,   spread.lty = NULL,   spread.lwd = NULL,   add = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"x Data plotted. numeric vector containing angles (degrees). weights Optional vector numeric weights associated x. axial Logical. Whether data uniaxial (axial=FALSE) biaxial (TRUE, default). avg character. average estimate x. Either circular mean (\"mean\", default), circular Quasi Median (\"median\"), sample median (\"sample_median\"). spread character. measure spread plotted fan. Either 95% confidence interval (\"CI\", default), Fishers confidence interval (\"fisher\"), circular standard deviation (\"sd\"), Quasi interquartile range circle (\"IQR\"), sampke median deviation (\"mdev\"). NULL fan drawn. f factor applied spread. 1 default. avg.col color average line avg.lty line type average line avg.lwd line width average line spread.col color spread fan spread.border logical. Whether draw border fan . spread.lty line type spread fan's border spread.lwd line width spread fan's border add logical. ... optional arguments circular_plot() add FALSE.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"return value, called side effects","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/rose_stats.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show Average Direction and Spread in Rose Diagram — rose_stats","text":"","code":"data(\"san_andreas\") rose(san_andreas$azi, weights = 1 / san_andreas$unc, muci = FALSE) rose_stats(san_andreas$azi, weights = 1 / san_andreas$unc, avg = \"sample_median\", spread = \"mdev\")"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotate Lines — rotate_lines","title":"Rotate Lines — rotate_lines","text":"Rotates set straight lines around angle","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotate Lines — rotate_lines","text":"","code":"rotate_lines(theta, p, centre)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotate Lines — rotate_lines","text":"theta Angle rotation (degree) p Coordinates lines end points centre Coordinates center point rotation","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotate_lines.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotate Lines — rotate_lines","text":"matrix","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":null,"dir":"Reference","previous_headings":"","what":"Rotation of a vector by a quaternion — rotation_Q4","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"Rotation vector quaternion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"","code":"rotation_Q4(q, p)"},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"q object class \"quaternion\" p three-column vector (Cartesian coordinates) unit length","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/rotation_Q4.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Rotation of a vector by a quaternion — rotation_Q4","text":"three-column vector (Cartesian coordinates) unit length","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/sample_median.html","id":null,"dir":"Reference","previous_headings":"","what":"Circular Sample Median and Deviation — sample_median","title":"Circular Sample Median and Deviation — sample_median","text":"Sample median direction vector circular data","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/sample_median.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Circular Sample Median and Deviation — sample_median","text":"","code":"circular_sample_median(x, axial = TRUE, na.rm = TRUE)  circular_sample_median_deviation(x, axial = TRUE, na.rm = TRUE)"},{"path":"https://tobiste.github.io/tectonicr/reference/sample_median.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Circular Sample Median and Deviation — sample_median","text":"x numeric vector. Values degrees. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/sample_median.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Circular Sample Median and Deviation — sample_median","text":"numeric","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/sample_median.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Circular Sample Median and Deviation — sample_median","text":"N.. Fisher (1993) Statistical Analysis Circular Data, Cambridge University Press.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/sample_median.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Circular Sample Median and Deviation — sample_median","text":"","code":"x <- rvm(n = 100, mean = 0, kappa = 1) circular_sample_median(x) #> [1] 14.97726 circular_sample_median_deviation(x) #> [1] 40.77448  data(\"san_andreas\") circular_sample_median(san_andreas$azi) #> [1] 9 circular_sample_median_deviation(san_andreas$azi) #> [1] 19.77709"},{"path":"https://tobiste.github.io/tectonicr/reference/second_central_moment.html","id":null,"dir":"Reference","previous_headings":"","what":"Second Central Momentum — second_central_moment","title":"Second Central Momentum — second_central_moment","text":"Measures skewness (measure asymmetry probability distribution) kurtosis (measure \"tailedness\" probability distribution). Standardized versions skewness kurtosis normalized mean resultant length, Mardia 1972).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/second_central_moment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Second Central Momentum — second_central_moment","text":"","code":"second_central_moment(x, w = NULL, axial = TRUE, na.rm = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/second_central_moment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Second Central Momentum — second_central_moment","text":"x numeric vector. Values degrees. w (optional) Weights. vector positive numbers length x. axial logical. Whether data axial, .e. pi-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). na.rm logical value indicating whether NA values x stripped computation proceeds.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/second_central_moment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Second Central Momentum — second_central_moment","text":"list containing skewness second central sine momentum, .e. skewness std_skewness standardized skewness kurtosis second central cosine momentum, .e. kurtosis std_kurtosis standardized kurtosis","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/second_central_moment.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Second Central Momentum — second_central_moment","text":"Negative values skewness indicate skewed data counterclockwise direction. Large kurtosis values indicate tailed, values close 0 indicate packed data.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/second_central_moment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Second Central Momentum — second_central_moment","text":"","code":"data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") second_central_moment(sa.por$azi.PoR) #> $skewness #> [1] -0.02661796 #>  #> $std_skewness #> [1] -0.1758456 #>  #> $kurtosis #> [1] 0.3800558 #>  #> $std_kurtosis #> [1] 1.453805 #>  second_central_moment(sa.por$azi.PoR, w = 1 / san_andreas$unc) #> $skewness #> [1] -0.05113199 #>  #> $std_skewness #> [1] -0.3377921 #>  #> $kurtosis #> [1] 0.4875562 #>  #> $std_kurtosis #> [1] 2.786361 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":null,"dir":"Reference","previous_headings":"","what":"Quadrant-specific inverse of the tangent — spec_atan","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"Returns quadrant specific inverse tangent","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"","code":"atan2_spec(x, y)  atan2d_spec(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"x, y dividend divisor comprise sum sines cosines, respectively.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"numeric.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spec_atan.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Quadrant-specific inverse of the tangent — spec_atan","text":"Jammalamadaka, S. Rao, Ambar Sengupta (2001). Topics circular statistics. Vol. 5. world scientific.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":null,"dir":"Reference","previous_headings":"","what":"Angle along great circle on spherical surface — spherical_angle","title":"Angle along great circle on spherical surface — spherical_angle","text":"Smallest angle two points surface sphere, measured along surface sphere","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Angle along great circle on spherical surface — spherical_angle","text":"","code":"orthodrome(lat1, lon1, lat2, lon2)  haversine(lat1, lon1, lat2, lon2)  vincenty(lat1, lon1, lat2, lon2)"},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Angle along great circle on spherical surface — spherical_angle","text":"lat1, lat2 numeric vector. latitudes point 1 2 (radians) lon1, lon2 numeric vector. longitudes point 1 2 (radians)","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Angle along great circle on spherical surface — spherical_angle","text":"numeric. angle radians","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Angle along great circle on spherical surface — spherical_angle","text":"\"orthodrome\" based spherical law cosines \"haversine\" uses haversine formula optimized 64-bit floating-point numbers \"vincenty\" uses Vincenty formula ellipsoid equal major minor axes","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Angle along great circle on spherical surface — spherical_angle","text":"Imboden, C. & Imboden, D. (1972). Formel fuer Orthodrome und Loxodrome bei der Berechnung von Richtung und Distanz zwischen Beringungs- und Wiederfundort. Die Vogelwarte 26, 336-346. Sinnott, Roger W. (1984). Virtues Haversine. Sky telescope 68(2), 158. Vincenty, T. (1975). Direct inverse solutions geodesics ellipsoid application nested equations. Survey Review, 23(176), 88<U+2013>93. doi:10.1179/sre.1975.23.176.88 . http://www.movable-type.co.uk/scripts/latlong.html http://www.edwilliams.org/avform147.htm","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/spherical_angle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Angle along great circle on spherical surface — spherical_angle","text":"","code":"berlin <- c(52.52, 13.41) |> deg2rad() calgary <- c(51.04, -114.072) |> deg2rad() orthodrome(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 1.176404 haversine(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 1.176404 vincenty(berlin[1], berlin[2], calgary[1], calgary[2]) #> [1] 1.176404"},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":null,"dir":"Reference","previous_headings":"","what":"Spatial interpolation of SHmax — stress2grid","title":"Spatial interpolation of SHmax — stress2grid","text":"Stress field interpolation wavelength analysis using kernel (weighted) mean/median standard deviation/IQR stress data","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Spatial interpolation of SHmax — stress2grid","text":"","code":"stress2grid(   x,   stat = c(\"mean\", \"median\"),   grid = NULL,   lon_range = NULL,   lat_range = NULL,   gridsize = 2,   min_data = 3L,   threshold = 25,   arte_thres = 200,   method_weighting = FALSE,   quality_weighting = TRUE,   dist_weight = c(\"inverse\", \"linear\", \"none\"),   idp = 1,   qp = 1,   mp = 1,   dist_threshold = 0.1,   R_range = seq(50, 1000, 50),   ... )  stress2grid_stats(   x,   grid = NULL,   lon_range = NULL,   lat_range = NULL,   gridsize = 2,   min_data = 4L,   threshold = 25,   arte_thres = 200,   method_weighting = FALSE,   quality_weighting = TRUE,   dist_weight = c(\"inverse\", \"linear\", \"none\"),   idp = 1,   qp = 1,   mp = 1,   dist_threshold = 0.1,   R_range = seq(50, 1000, 50),   kappa = 2,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Spatial interpolation of SHmax — stress2grid","text":"https://github.com/MorZieg/Stress2Grid","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Spatial interpolation of SHmax — stress2grid","text":"x sf object containing azi SHmax degree unc (optional) Uncertainties SHmax degree type (optional) Methods used determination direction SHmax stat whether direction interpolated SHmax based circular mean standard deviation (\"mean\", default) circular median interquartile range (\"median\") grid (optional) Point object class sf. lon_range, lat_range (optional) numeric vector specifying minimum maximum longitudes latitudes (ignored grid specified). gridsize numeric. Target spacing regular grid decimal degree. Default 2.5. (ignored grid specified) min_data integer. Minimum number data per bin. Default 3 stress2grid()4 stress2grid_stats(). threshold numeric. Threshold deviation direction. Default 25 arte_thres numeric. Maximum distance (km) grid point next data point. Default 200 method_weighting logical. method weighting applied: Default FALSE. FALSE, overwrites mp. quality_weighting logical. quality weighting applied: Default TRUE. FALSE, overwrites qp. dist_weight Distance weighting method used. One \"none\", \"linear\", \"inverse\" (default). idp, qp, mp numeric. weighting power inverse distance, quality method. Default 1. higher value, weight put. set 0, weighting applied. idp effective inverse distance weighting (dist_weight=\"inverse\") applied. dist_threshold numeric. Distance weight prevent overweight data nearby (0 1). Default 0.1 R_range numeric value vector specifying kernel half-width(s), .e. search radius (km). Default seq(50, 1000, 50) ... (optional) arguments dist_greatcircle() kappa numeric. von Mises distribution concentration parameter used circular mode.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Spatial interpolation of SHmax — stress2grid","text":"sf object containing lon,lat longitude latitude degrees azi Mean SHmax degree sd Standard deviation SHmax degrees R Search radius km mdr Mean distance datapoints per search radius N Number data points search radius stress2grid_stats(), azi sd replaced output circular_summary().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Spatial interpolation of SHmax — stress2grid","text":"stress2grid() modified version MATLAB script \"stress2grid\" Ziegler Heidbach (2019). stress2grid_stats() based stress2grid() yields circular summary statistics (see circular_summary()).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Spatial interpolation of SHmax — stress2grid","text":"Ziegler, M. Heidbach, O. (2019). Matlab Script Stress2Grid v1.1. GFZ Data Services. doi:10.5880/wsm.2019.002","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress2grid.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Spatial interpolation of SHmax — stress2grid","text":"","code":"data(\"san_andreas\") stress2grid(san_andreas, stat = \"median\") #> Simple feature collection with 1070 features and 7 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -124.82 ymin: 24.08 xmax: -108.82 ymax: 40.08 #> Geodetic CRS:  WGS 84 #> # A tibble: 1,070 × 8 #>      lon   lat   azi    sd     R     N   mdr        geometry #>  * <dbl> <dbl> <dbl> <dbl> <dbl> <int> <dbl>     <POINT [°]> #>  1 -113.  24.1  141.   3.5   150     4 0.822 (-112.82 24.08) #>  2 -113.  24.1  141.   3.5   200     4 0.617 (-112.82 24.08) #>  3 -113.  24.1  147    3.5   250     7 0.679 (-112.82 24.08) #>  4 -113.  24.1  163    0.5   300    17 0.779 (-112.82 24.08) #>  5 -113.  24.1  163    0     350    73 0.879 (-112.82 24.08) #>  6 -113.  24.1  165    0     400   127 0.840 (-112.82 24.08) #>  7 -113.  24.1  168    0     450   161 0.786 (-112.82 24.08) #>  8 -113.  24.1  168    0     500   169 0.718 (-112.82 24.08) #>  9 -113.  24.1  168    0     550   177 0.667 (-112.82 24.08) #> 10 -113.  24.1  168    0     600   182 0.621 (-112.82 24.08) #> # ℹ 1,060 more rows if (FALSE) { # \\dontrun{ stress2grid_stats(san_andreas) } # }"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":null,"dir":"Reference","previous_headings":"","what":"Quick analysis of a stress data set — stress_analysis","title":"Quick analysis of a stress data set — stress_analysis","text":"Returns converted azimuths, distances plate boundary, statistics model, plots.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Quick analysis of a stress data set — stress_analysis","text":"","code":"stress_analysis(   x,   PoR,   type = c(\"none\", \"in\", \"out\", \"right\", \"left\"),   pb,   plot = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Quick analysis of a stress data set — stress_analysis","text":"x data.frame sf object containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi standard deviation unc (optional) PoR Pole Rotation. data.frame object class \"euler.pole\" containing geographical coordinates Euler pole type Character. Type plate boundary (optional). Can \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. \"none\" (default), PoR-equivalent azimuth returned. pb (optional) sf object plate boundary geometries geographical coordinate system plot (logical). Whether produce plot additional output. ... optional arguments distance_from_pb()","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Quick analysis of a stress data set — stress_analysis","text":"list containing following values: results data.frame showing coordinate azimuth conversions (lat.PoR, lon.PoR, azi.PoR), predicted azimuths (prd), deviation angle predicted (dev), circular distance (cdist), misfit predicted stress direction (nchisq) , given, distance tested plate boundary (distance) stats array circular (weighted) mean, circular standard deviation, circular variance, circular median, skewness, kurtosis, 95% confidence angle, circular dispersion, normalized Chi-squared test statistic test list containing test results (weighted) Rayleigh test uniform distribution predicted orientation.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress_analysis.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Quick analysis of a stress data set — stress_analysis","text":"","code":"# \\donttest{ data(\"nuvel1\") na_pa <- subset(nuvel1, nuvel1$plate.rot == \"na\")  data(\"plates\") plate_boundary <- subset(plates, plates$pair == \"na-pa\")  data(\"san_andreas\") stress_analysis(san_andreas, na_pa, type = \"right\", plate_boundary, plot = TRUE) #> $result #>          azi.PoR prd           dev       nchisq        cdist  lat.PoR   lon.PoR #> 1    173.2401662 135   38.24016619 1.805321e-01 3.831104e-01 59.05548 -85.46364 #> 2      1.0581952 135 -133.94180483 2.214865e+00 5.184648e-01 60.50445 -78.16683 #> 3    147.6095576 135   12.60955757 1.962975e-02 4.765752e-02 59.38025 -84.55317 #> 4    163.6073880 135   28.60738802 1.010349e-01 2.292543e-01 59.73632 -85.74431 #> 5    152.2330167 135   17.23301674 3.666381e-02 8.776909e-02 61.68018 -84.31053 #> 6    150.6113865 135   15.61138646 3.008832e-02 7.242085e-02 63.39714 -80.60932 #> 7    152.5258368 135   17.52583678 3.792036e-02 9.068279e-02 63.82044 -80.32836 #> 8      3.0753175 135 -131.92468249 2.148657e+00 5.535714e-01 61.13839 -80.59498 #> 9    156.9969896 135   21.99698958 5.973673e-02 1.402936e-01 62.38235 -79.55181 #> 10   171.4686188 135   36.46861881 1.641926e-01 3.532905e-01 61.28913 -81.36361 #> 11   155.8559034 135   20.85590343 5.369984e-02 1.267495e-01 61.26967 -85.29329 #> 12   138.3819547 135    3.38195468 1.412052e-03 3.480053e-03 58.83268 -88.62675 #> 13   137.2774450 135    2.27744500 6.403402e-04 1.579144e-03 59.55746 -87.99386 #> 14   122.1702429 135  -12.82975715 2.032132e-02 4.930839e-02 56.77751 -89.64748 #> 15   109.5014808 135  -25.49851918 8.026845e-02 1.853197e-01 58.63401 -88.65754 #> 16   127.0967143 135   -7.90328566 7.711349e-03 1.890662e-02 58.75325 -81.25341 #> 17   130.2802910 135   -4.71970901 2.750081e-03 6.770218e-03 57.16030 -77.54563 #> 18   137.9758681 135    2.97586811 1.093308e-03 2.695203e-03 57.12526 -78.07337 #> 19   129.7343067 135   -5.26569327 3.423151e-03 8.422534e-03 57.25074 -78.36079 #> 20   128.7965940 135   -6.20340599 4.750895e-03 1.167663e-02 57.41224 -78.12052 #> 21     5.5549108 135 -129.44508923 2.068646e+00 5.963451e-01 57.73640 -78.23381 #> 22   131.9302114 135   -3.06978858 1.163408e-03 2.867848e-03 57.76312 -79.22036 #> 23   162.7655456 135   27.76554557 9.517599e-02 2.170205e-01 57.28288 -79.91529 #> 24   137.1992689 135    2.19926892 5.971338e-04 1.472645e-03 57.00815 -81.09338 #> 25   127.2171830 135   -7.78281700 7.478054e-03 1.833815e-02 57.02166 -81.05148 #> 26   141.8573232 135    6.85732324 5.805294e-03 1.425573e-02 56.87963 -81.77633 #> 27   145.1139186 135   10.11391864 1.262856e-02 3.083743e-02 57.39251 -80.87994 #> 28    11.9310274 135 -123.06897259 1.869873e+00 7.022680e-01 56.99873 -81.54368 #> 29   133.0995136 135   -1.90048643 4.459072e-04 1.099829e-03 57.39203 -80.90388 #> 30   145.1330105 135   10.13301052 1.267628e-02 3.095274e-02 57.36089 -80.87780 #> 31   137.1930037 135    2.19300371 5.937365e-04 1.464271e-03 57.03506 -81.07893 #> 32     3.2003019 135 -131.79969808 2.144588e+00 5.557397e-01 56.96299 -81.13326 #> 33   152.4480683 135   17.44806834 3.758458e-02 8.990477e-02 60.23087 -80.87996 #> 34   171.2465401 135   36.24654005 1.621990e-01 3.495895e-01 57.07427 -80.95489 #> 35     1.3337400 135 -133.66626000 2.205762e+00 5.232697e-01 57.08353 -80.80315 #> 36     2.0470904 135 -132.95290957 2.182281e+00 5.356981e-01 58.16478 -73.87963 #> 37    99.0470904 135  -35.95290957 1.595817e-01 3.447101e-01 58.16478 -73.87963 #> 38    21.3005781 135 -113.69942191 1.595995e+00 8.384454e-01 58.00100 -75.20324 #> 39    99.3881335 135  -35.61186649 1.565685e-01 3.390632e-01 57.35759 -88.64064 #> 40    88.0250253 135  -46.97497470 2.724257e-01 5.344425e-01 57.30484 -87.65538 #> 41    68.9263099 135  -66.07369005 5.389793e-01 8.355200e-01 57.16075 -87.97348 #> 42    90.5150269 135  -44.48497311 2.443102e-01 4.910116e-01 57.42836 -83.45550 #> 43    28.1960035 135 -106.80399653 1.408283e+00 9.164220e-01 60.70241 -82.33987 #> 44    64.1187803 135  -70.88121967 6.202651e-01 8.927257e-01 57.36879 -84.16161 #> 45    62.1096766 135  -72.89032339 6.559258e-01 9.134453e-01 57.24079 -82.66440 #> 46   112.9868087 135  -22.01319131 5.982476e-02 1.404901e-01 56.94608 -83.15029 #> 47   165.9868087 135   30.98680869 1.185410e-01 2.650610e-01 56.94608 -83.15029 #> 48    99.0806602 135  -35.91933977 1.592838e-01 3.441532e-01 57.20060 -82.75052 #> 49    69.4799042 135  -65.52009580 5.299855e-01 8.282941e-01 57.11886 -87.10771 #> 50    76.7082112 135  -58.29178884 4.194979e-01 7.237514e-01 57.24381 -86.60016 #> 51   147.0097887 135   12.00978868 1.780679e-02 4.329679e-02 57.46510 -80.98295 #> 52    75.0084431 135  -59.99155687 4.443194e-01 7.498724e-01 57.46053 -80.98935 #> 53    79.1503888 135  -55.84961122 3.850838e-01 6.848671e-01 57.43942 -84.03984 #> 54    96.5775110 135  -38.42248902 1.822577e-01 3.862067e-01 56.54598 -85.88930 #> 55    81.5036471 135  -53.49635293 3.533160e-01 6.461250e-01 56.39018 -84.49953 #> 56    69.9557084 135  -65.04429159 5.223160e-01 8.219856e-01 56.48984 -83.64562 #> 57    58.1133021 135  -76.88669788 7.298228e-01 9.485266e-01 56.91003 -82.97626 #> 58    71.9144766 135  -63.08552342 4.913313e-01 7.950989e-01 56.99941 -81.57030 #> 59   135.9144766 135    0.91447658 1.032429e-04 2.547200e-04 56.99941 -81.57030 #> 60    70.3330663 135  -64.66693366 5.162731e-01 8.169191e-01 56.98154 -80.89757 #> 61    51.1374328 135  -83.86256723 8.682630e-01 9.885695e-01 56.58057 -83.25449 #> 62    18.2927937 135 -116.70720629 1.681552e+00 7.980115e-01 57.10223 -80.85329 #> 63   144.1328023 135    9.13280228 1.029729e-02 2.519310e-02 57.16731 -81.05609 #> 64    87.1788748 135  -47.82112524 2.823284e-01 5.491584e-01 57.16249 -79.34608 #> 65    93.1053884 135  -41.89461157 2.166862e-01 4.459068e-01 57.01858 -79.59386 #> 66    76.1053884 135  -58.89461157 4.282192e-01 7.331101e-01 57.01858 -79.59386 #> 67    94.1460131 135  -40.85398689 2.060553e-01 4.278908e-01 56.75079 -79.76449 #> 68   135.2011297 135    0.20112973 4.994218e-06 1.232269e-05 57.11150 -80.99529 #> 69   122.2086781 135  -12.79132190 2.019974e-02 4.901831e-02 57.04075 -81.04792 #> 70   176.9471514 135   41.94715145 2.172301e-01 4.468185e-01 57.05747 -81.46253 #> 71   140.0831041 135    5.08310412 3.189870e-03 7.850061e-03 57.04293 -81.25242 #> 72   145.1003203 135   10.10032034 1.259463e-02 3.075542e-02 57.00478 -81.25935 #> 73   148.1054013 135   13.10540126 2.120389e-02 5.141244e-02 57.12118 -81.14354 #> 74   145.0716515 135   10.07165149 1.252323e-02 3.058287e-02 57.34592 -80.99176 #> 75    22.3065605 135 -112.69343946 1.567878e+00 8.511580e-01 57.13429 -80.80136 #> 76   142.1926276 135    7.19262763 6.386900e-03 1.567644e-02 57.03376 -81.08075 #> 77   122.2247885 135  -12.77521150 2.014889e-02 4.889697e-02 56.95089 -81.10405 #> 78   176.4790467 135   41.47904674 2.124088e-01 4.387024e-01 57.02611 -82.26220 #> 79   125.2172591 135   -9.78274089 1.181506e-02 2.887031e-02 57.11849 -80.96239 #> 80   142.2228502 135    7.22285015 6.440687e-03 1.580775e-02 57.04122 -81.02418 #> 81   177.0543965 135   42.05439651 2.183423e-01 4.486801e-01 57.38405 -80.98484 #> 82    11.3149806 135 -123.68501937 1.888640e+00 6.923890e-01 57.11520 -80.80500 #> 83   100.3005781 135  -34.69942191 1.486481e-01 3.240697e-01 58.00100 -75.20324 #> 84    14.7147224 135 -120.28527761 1.786240e+00 7.456757e-01 57.66276 -91.02055 #> 85   169.3881335 135   34.38813351 1.459931e-01 3.189946e-01 57.35759 -88.64064 #> 86   166.6540834 135   31.65408343 1.237014e-01 2.754042e-01 57.13218 -88.45253 #> 87     5.0250253 135 -129.97497470 2.085617e+00 5.872542e-01 57.30484 -87.65538 #> 88   165.9846123 135   30.98461228 1.185242e-01 2.650271e-01 57.17297 -87.86435 #> 89    23.2332286 135 -111.76677136 1.542199e+00 8.624856e-01 57.75378 -90.07557 #> 90     3.0023780 135 -131.99762200 2.151034e+00 5.523055e-01 56.35288 -87.05391 #> 91   172.1014918 135   37.10149184 1.699408e-01 3.638849e-01 57.30012 -87.53517 #> 92   160.9263099 135   25.92630995 8.298439e-02 1.911568e-01 57.16075 -87.97348 #> 93   164.9136462 135   29.91364617 1.104724e-01 2.486959e-01 57.19393 -83.03097 #> 94   153.2258251 135   18.22582510 4.100996e-02 9.782074e-02 56.84555 -84.50719 #> 95   179.5150269 135   44.51502689 2.446404e-01 4.915360e-01 57.42836 -83.45550 #> 96     3.9972916 135 -131.00270835 2.118730e+00 5.695397e-01 57.13449 -82.95101 #> 97   172.6049523 135   37.60495229 1.745843e-01 3.723607e-01 57.22674 -86.78765 #> 98   178.1187803 135   43.11878033 2.295345e-01 4.671901e-01 57.36879 -84.16161 #> 99   168.8967021 135   33.89670214 1.418502e-01 3.110263e-01 56.90987 -83.33421 #> 100  167.8111296 135   32.81112961 1.329099e-01 2.936247e-01 56.47653 -83.89999 #> 101  173.1096766 135   38.10967661 1.793022e-01 3.808973e-01 57.24079 -82.66440 #> 102  172.0007294 135   37.00072940 1.690190e-01 3.621936e-01 57.14956 -82.93084 #> 103  153.5967092 135   18.59670921 4.269600e-02 1.017003e-01 56.92334 -87.12319 #> 104  176.0806602 135   41.08066023 2.083482e-01 4.318078e-01 57.20060 -82.75052 #> 105  161.4731918 135   26.47319180 8.652221e-02 1.987189e-01 57.19028 -87.04273 #> 106  158.4721620 135   23.47216203 6.801758e-02 1.586456e-01 57.12217 -87.11693 #> 107  173.4850630 135   38.48506296 1.828519e-01 3.872705e-01 56.36700 -84.55377 #> 108  154.7082112 135   19.70821116 4.795229e-02 1.137242e-01 57.24381 -86.60016 #> 109  178.1503888 135   43.15038878 2.298711e-01 4.677406e-01 57.43942 -84.03984 #> 110  169.8386395 135   34.83863952 1.498433e-01 3.263462e-01 57.18117 -83.16644 #> 111  179.5775110 135   44.57751098 2.453277e-01 4.926264e-01 56.54598 -85.88930 #> 112   14.4537492 135 -120.54625076 1.794000e+00 7.416985e-01 56.69485 -84.27939 #> 113    8.3342911 135 -126.66570885 1.980766e+00 6.434176e-01 57.39112 -85.42172 #> 114  158.6393940 135   23.63939397 6.899024e-02 1.607841e-01 57.24574 -86.71106 #> 115  176.6374060 135   41.63740600 2.140338e-01 4.414463e-01 57.37381 -83.30883 #> 116  169.4393190 135   34.43931899 1.464280e-01 3.198277e-01 56.40926 -84.58812 #> 117  174.5036471 135   39.50364707 1.926590e-01 4.046580e-01 56.39018 -84.49953 #> 118    3.5928923 135 -131.40710765 2.131831e+00 5.625435e-01 56.54246 -85.86726 #> 119    2.9557084 135 -132.04429159 2.152555e+00 5.514954e-01 56.48984 -83.64562 #> 120  150.8218467 135   15.82184671 3.090504e-02 7.433645e-02 56.63636 -82.06321 #> 121  165.5873965 135   30.58739646 1.155048e-01 2.589304e-01 57.21757 -83.54327 #> 122  164.6833521 135   29.68335215 1.087779e-01 2.452292e-01 57.20636 -83.39680 #> 123  169.4079060 135   34.40790597 1.461610e-01 3.193164e-01 56.35670 -84.69332 #> 124  148.5845068 135   13.58450679 2.278257e-02 5.516828e-02 57.61335 -81.53718 #> 125  146.0062488 135   11.00624884 1.495525e-02 3.644894e-02 56.10620 -82.25387 #> 126    5.9495202 135 -129.05047981 2.056053e+00 6.030939e-01 57.22131 -86.22766 #> 127  169.8119433 135   34.81194334 1.496138e-01 3.259094e-01 57.19215 -83.19960 #> 128  147.4349561 135   12.43495610 1.908989e-02 4.636751e-02 56.94852 -82.40849 #> 129    9.5054829 135 -125.49451710 1.944305e+00 6.628746e-01 57.00976 -82.23415 #> 130    2.4907844 135 -132.50921558 2.167740e+00 5.434176e-01 57.01755 -82.25098 #> 131  152.4784040 135   17.47840397 3.771538e-02 9.020790e-02 57.11212 -82.18182 #> 132  164.7928291 135   29.79282910 1.095818e-01 2.468752e-01 56.90301 -81.86091 #> 133  155.8552162 135   20.85521615 5.369630e-02 1.267415e-01 56.95001 -81.71402 #> 134    4.1133021 135 -130.88669788 2.114979e+00 5.715443e-01 56.91003 -82.97626 #> 135  138.9387857 135    3.93878567 1.915313e-03 4.718405e-03 56.94021 -81.58537 #> 136  174.9157935 135   39.91579350 1.967001e-01 4.117289e-01 57.02983 -81.53981 #> 137  153.7436148 135   18.74361485 4.337322e-02 1.032555e-01 57.20037 -81.66354 #> 138  168.8548124 135   33.85481239 1.414998e-01 3.103496e-01 56.99007 -81.67727 #> 139  116.6570651 135  -18.34293492 4.153867e-02 9.903850e-02 57.43216 -81.58843 #> 140  148.6881462 135   13.68814624 2.313152e-02 5.599714e-02 56.98037 -81.96094 #> 141  171.2845696 135   36.28456958 1.625395e-01 3.502226e-01 57.10777 -80.86172 #> 142    5.3556429 135 -129.64435710 2.075020e+00 5.929301e-01 56.98677 -80.85561 #> 143    0.3156904 135 -134.68430964 2.239489e+00 5.055097e-01 56.17380 -81.67094 #> 144  147.1076815 135   12.10768155 1.809827e-02 4.399492e-02 57.11933 -81.14151 #> 145  179.2423630 135   44.24236304 2.416527e-01 4.867783e-01 56.64399 -81.35794 #> 146  171.3617866 135   36.36178664 1.632320e-01 3.515090e-01 56.21548 -81.55502 #> 147  167.3330663 135   32.33306634 1.290651e-01 2.860539e-01 56.98154 -80.89757 #> 148  131.1660496 135   -3.83395043 1.814713e-03 4.470946e-03 57.13615 -81.03021 #> 149  142.1374328 135    7.13743277 6.289253e-03 1.543800e-02 56.58057 -83.25449 #> 150  153.5954848 135   18.59548484 4.269038e-02 1.016874e-01 57.22427 -81.88394 #> 151  146.5939405 135   11.59394053 1.659499e-02 4.039068e-02 57.23972 -81.87194 #> 152  152.5072238 135   17.50722383 3.783986e-02 9.049631e-02 57.21937 -82.03320 #> 153  120.2141194 135  -14.78588064 2.699040e-02 6.513087e-02 57.11258 -80.97298 #> 154  126.8736832 135   -8.12631684 8.152719e-03 1.998150e-02 57.15296 -78.21693 #> 155   17.1398633 135 -117.86013670 1.714940e+00 7.816169e-01 57.04897 -79.51032 #> 156  144.6309830 135    9.63098297 1.145134e-02 2.798993e-02 56.93015 -78.80728 #> 157  171.3705884 135   36.37058837 1.633111e-01 3.516557e-01 56.73157 -81.06474 #> 158  146.7451177 135   11.74511773 1.703059e-02 4.143599e-02 56.92225 -78.62637 #> 159    8.9995358 135 -126.00046419 1.960014e+00 6.545008e-01 56.68739 -80.06332 #> 160  177.6041395 135   42.60413946 2.240880e-01 4.582331e-01 56.93872 -78.84399 #> 161  166.1404455 135   31.14044548 1.197194e-01 2.674313e-01 57.08826 -79.47461 #> 162   10.0022331 135 -124.99776693 1.928943e+00 6.710467e-01 56.69584 -80.05130 #> 163  152.0050307 135   17.00503068 3.570013e-02 8.553032e-02 56.71332 -80.03104 #> 164  144.7366962 135    9.73669616 1.170411e-02 2.860180e-02 56.95365 -78.61309 #> 165  156.9791448 135   21.97914483 5.963985e-02 1.400773e-01 56.69786 -80.08772 #> 166  156.3788362 135   21.37883620 5.642650e-02 1.328842e-01 56.28397 -81.46314 #> 167    3.4413603 135 -131.55863967 2.136750e+00 5.599187e-01 56.16509 -81.46817 #> 168  171.2882661 135   36.28826607 1.625726e-01 3.502842e-01 56.21297 -81.68058 #> 169  136.2801132 135    1.28011324 2.023074e-04 4.990904e-04 56.21787 -81.68970 #> 170  152.4215189 135   17.42151891 3.747029e-02 8.963986e-02 56.90170 -80.82482 #> 171   15.1460131 135 -119.85398689 1.773454e+00 7.522037e-01 56.75079 -79.76449 #> 172   38.5539027 135  -96.44609733 1.148377e+00 9.873958e-01 57.73382 -78.23767 #> 173  119.0783374 135  -15.92166261 3.129621e-02 7.525301e-02 57.40161 -90.73203 #> 174  173.3788593 135   38.37885933 1.818441e-01 3.854654e-01 57.14855 -83.95357 #> 175  142.6571910 135    7.65719096 7.238589e-03 1.775442e-02 56.94097 -82.04905 #> 176  135.3022738 135    0.30227378 1.128018e-05 2.783246e-05 58.12994 -81.50943 #> 177  161.9003993 135   26.90039925 8.933722e-02 2.047028e-01 57.00406 -81.58915 #> 178  108.2570166 135  -26.74298337 8.829471e-02 2.024902e-01 57.53207 -78.89399 #> 179  141.5541988 135    6.55419882 5.303398e-03 1.302863e-02 56.75891 -79.08290 #> 180  103.9981601 135  -31.00183993 1.186561e-01 2.652926e-01 56.94036 -78.19473 #> 181  156.9981601 135   21.99816007 5.974309e-02 1.403078e-01 56.94036 -78.19473 #> 182  168.1325065 135   33.13250649 1.355263e-01 2.987466e-01 56.19568 -80.28201 #> 183   19.4114208 135 -115.58857918 1.649472e+00 8.134572e-01 55.83210 -81.82704 #> 184    4.3094416 135 -130.69055844 2.108645e+00 5.749306e-01 55.84798 -81.98470 #> 185  147.9541543 135   12.95415433 2.071730e-02 5.025279e-02 56.93405 -78.27246 #> 186  148.0801557 135   13.08015566 2.112228e-02 5.121801e-02 56.04296 -82.18900 #> 187  151.7379685 135   16.73796852 3.458760e-02 8.294123e-02 56.21400 -82.60251 #> 188  126.0732362 135   -8.92676385 9.837915e-03 2.407831e-02 56.49050 -80.11709 #> 189  150.2083579 135   15.20835794 2.855483e-02 6.881700e-02 56.54006 -79.84836 #> 190  141.2545507 135    6.25455068 4.829556e-03 1.186919e-02 56.57073 -79.74446 #> 191  149.4902067 135   14.49020666 2.592174e-02 6.260731e-02 57.05119 -77.29366 #> 192  108.0909445 135  -26.90905555 8.939472e-02 2.048247e-01 53.89241 -56.77092 #> 193  147.2343806 135   12.23438063 1.847902e-02 4.490638e-02 57.76173 -70.67948 #> 194  111.9513979 135  -23.04860209 6.558495e-02 1.532815e-01 54.79221 -66.52546 #> 195  146.0737814 135   11.07378138 1.513934e-02 3.689200e-02 60.68131 -64.30760 #> 196  113.7680324 135  -21.23196764 5.565388e-02 1.311488e-01 56.86022 -73.71551 #> 197  101.2535583 135  -33.74644167 1.405953e-01 3.086009e-01 57.71845 -72.28509 #> 198   90.7018246 135  -44.29817540 2.422628e-01 4.877521e-01 54.59597 -60.39465 #> 199   47.5314795 135  -87.46852052 9.445361e-01 9.980492e-01 65.25291 -80.35379 #> 200   47.2344027 135  -87.76559726 9.509630e-01 9.984800e-01 57.63245 -88.58797 #> 201  108.2029055 135  -26.79709449 8.865238e-02 2.032497e-01 57.82656 -88.42528 #> 202  170.0185852 135   35.01858520 1.513952e-01 3.292948e-01 60.52898 -78.20558 #> 203  155.0209489 135   20.02094888 4.948622e-02 1.172129e-01 60.17527 -87.71555 #> 204  167.7920245 135   32.79202453 1.327552e-01 2.933210e-01 60.17833 -86.53381 #> 205  171.2092746 135   36.20927457 1.618656e-01 3.489694e-01 60.60199 -64.15214 #> 206   71.3887240 135  -63.61127595 4.995549e-01 8.024563e-01 65.35651 -80.45134 #> 207   96.5076949 135  -38.49230509 1.829207e-01 3.873936e-01 64.46661 -78.33258 #> 208   47.2303527 135  -87.76964733 9.510507e-01 9.984855e-01 65.86986 -77.43199 #> 209  111.0739299 135  -23.92607011 7.067368e-02 1.644769e-01 58.77807 -81.26625 #> 210  160.8932636 135   25.89326355 8.277297e-02 1.907034e-01 56.80500 -86.75739 #> 211  141.6869898 135    6.68698979 5.520473e-03 1.355949e-02 56.90752 -86.99064 #> 212  144.4171120 135    9.41711202 1.094839e-02 2.677170e-02 56.95217 -87.38937 #> 213  131.5302040 135   -3.46979595 1.486356e-03 3.662955e-03 56.95274 -87.20181 #> 214  172.7588390 135   37.75883896 1.760160e-01 3.749594e-01 56.53158 -83.93308 #> 215  162.8012107 135   27.80121068 9.542066e-02 2.175339e-01 58.36695 -77.29929 #> 216  131.7781031 135   -3.22189687 1.281558e-03 3.158786e-03 57.73850 -76.25649 #> 217  124.8592376 135  -10.14076244 1.269569e-02 3.099962e-02 57.83206 -76.04913 #> 218  116.9791211 135  -18.02087889 4.009285e-02 9.570580e-02 57.79607 -75.88535 #> 219  117.9796613 135  -17.02033874 3.576444e-02 8.567982e-02 57.82297 -75.86261 #> 220  106.0076632 135  -28.99233684 1.037723e-01 2.349270e-01 57.80498 -75.83213 #> 221  106.8166033 135  -28.18339666 9.806220e-02 2.230629e-01 57.81220 -76.13403 #> 222  137.8163778 135    2.81637781 9.792573e-04 2.414275e-03 57.83462 -76.11605 #> 223  122.7823827 135  -12.21761728 1.842842e-02 4.478528e-02 57.80706 -76.19338 #> 224  123.7468095 135  -11.25319052 1.563386e-02 3.808155e-02 57.79230 -76.26282 #> 225  153.7073406 135   18.70734057 4.320551e-02 1.028705e-01 57.63908 -76.45252 #> 226  169.6909542 135   34.69095425 1.485756e-01 3.239314e-01 57.72942 -76.40461 #> 227  146.8043094 135   11.80430940 1.720268e-02 4.184875e-02 57.74621 -76.20789 #> 228  137.6412157 135    2.64121572 8.612371e-04 2.123513e-03 57.77289 -76.44904 #> 229  126.5685520 135   -8.43144805 8.776459e-03 2.149918e-02 57.76564 -76.57223 #> 230  127.5220317 135   -7.47796829 6.903705e-03 1.693771e-02 57.80330 -76.61608 #> 231  138.6360477 135    3.63604768 1.632203e-03 4.021896e-03 57.09295 -75.38541 #> 232  162.7225707 135   27.72257067 9.488160e-02 2.164025e-01 57.05926 -83.47587 #> 233  143.4523592 135    8.45235918 8.820046e-03 2.160518e-02 56.93383 -84.04475 #> 234  175.1597666 135   40.15976661 1.991120e-01 4.159233e-01 57.08444 -86.02437 #> 235    3.9358377 135 -131.06416231 2.120718e+00 5.684774e-01 57.22031 -86.25117 #> 236   14.2310940 135 -120.76890604 1.800633e+00 7.382893e-01 57.63472 -90.21504 #> 237  100.8360977 135  -34.16390234 1.440953e-01 3.153521e-01 57.54912 -90.95570 #> 238  162.6057650 135   27.60576505 9.408374e-02 2.147258e-01 56.99864 -83.72769 #> 239    2.2440688 135 -132.75593116 2.175819e+00 5.391263e-01 56.16743 -81.79705 #> 240  139.3585417 135    4.35854173 2.345295e-03 5.775629e-03 56.73963 -86.05342 #> 241  135.0851954 135    0.08519538 8.960805e-07 2.210988e-06 56.72849 -86.51922 #> 242  145.9635527 135   10.96355272 1.483944e-02 3.617015e-02 56.75627 -83.37289 #> 243  127.2791677 135   -7.72083232 7.359414e-03 1.804898e-02 57.85521 -75.35454 #> 244  173.0091188 135   38.00911885 1.783572e-01 3.791935e-01 61.58218 -74.30225 #> 245   77.5919293 135  -57.40807072 4.068749e-01 7.098539e-01 61.05607 -73.85321 #> 246  163.0886728 135   28.08867276 9.740414e-02 2.216879e-01 61.03000 -80.67661 #> 247  152.5448321 135   17.54483209 3.800261e-02 9.087328e-02 60.03307 -87.06721 #> 248  125.2937569 135   -9.70624310 1.163101e-02 2.842488e-02 59.32024 -83.54462 #> 249   30.7936784 135 -104.20632163 1.340612e+00 9.397718e-01 59.86656 -80.68822 #> 250  141.2417645 135    6.24176450 4.809830e-03 1.182091e-02 56.05960 -85.27242 #> 251  121.5386118 135  -13.46138817 2.237148e-02 5.419120e-02 56.15472 -84.67611 #> 252  175.9368517 135   40.93685167 2.068921e-01 4.293222e-01 56.29796 -80.51733 #> 253  130.5955891 135   -4.40441087 2.394918e-03 5.897593e-03 57.03955 -67.36673 #> 254  135.7830320 135    0.78303202 7.569619e-05 1.867612e-04 55.39602 -55.00817 #> 255  119.5335638 135  -15.46643622 2.953218e-02 7.111494e-02 55.32261 -57.05826 #> 256  135.5077682 135    0.50776823 3.183069e-05 7.853702e-05 56.52477 -59.75213 #> 257  130.5307753 135   -4.46922468 2.465922e-03 6.072089e-03 56.58010 -59.68735 #> 258  126.2337377 135   -8.76626235 9.487328e-03 2.322695e-02 56.96731 -67.99832 #> 259  129.4896166 135   -5.51038341 3.748682e-03 9.221020e-03 56.92729 -64.38210 #> 260  126.9888833 135   -8.01111673 7.923209e-03 1.942267e-02 56.82849 -62.02910 #> 261  131.6551734 135   -3.34482660 1.381218e-03 3.404149e-03 56.65590 -61.05242 #> 262  166.2329468 135   31.23294685 1.204317e-01 2.688617e-01 57.71066 -70.71800 #> 263  154.2052050 135   19.20520502 4.553579e-02 1.082097e-01 57.83956 -70.67099 #> 264  139.1952407 135    4.19524072 2.172845e-03 5.351706e-03 56.22375 -57.19329 #> 265  159.1781815 135   24.17818149 7.217092e-02 1.677522e-01 56.35107 -58.76295 #> 266  133.0831016 135   -1.91689841 4.536419e-04 1.118899e-03 55.99949 -57.47690 #> 267  137.1622217 135    2.16222169 5.771855e-04 1.423472e-03 56.27434 -57.22275 #> 268  113.3387487 135  -21.66125130 5.792714e-02 1.362483e-01 56.88408 -72.76432 #> 269  117.1861178 135  -17.81388224 3.917709e-02 9.359071e-02 57.82113 -85.22281 #> 270  145.3289288 135   10.32892884 1.317121e-02 3.214812e-02 59.34175 -83.46837 #> 271  149.7841047 135   14.78410473 2.698392e-02 6.511557e-02 60.11246 -86.61582 #> 272  143.9450580 135    8.94505805 9.878279e-03 2.417629e-02 56.10023 -84.04572 #> 273  154.5684720 135   19.56847197 4.727470e-02 1.121802e-01 64.57625 -82.35469 #> 274  145.9138176 135   10.91381760 1.470511e-02 3.584670e-02 56.96378 -78.31328 #> 275  153.4514961 135   18.45149613 4.203182e-02 1.001733e-01 60.98074 -83.19241 #> 276  164.8537943 135   29.85379430 1.100307e-01 2.477934e-01 59.48755 -82.50680 #> 277  155.2848525 135   20.28485252 5.079941e-02 1.201924e-01 60.27499 -81.08872 #> 278  160.3634902 135   25.36349023 7.942057e-02 1.834918e-01 63.62246 -67.80125 #> 279  167.0784130 135   32.07841305 1.270401e-01 2.820453e-01 62.95165 -68.70475 #> 280  156.1631418 135   21.16314184 5.529365e-02 1.303389e-01 64.00431 -69.24641 #> 281  150.4248514 135   15.42485142 2.937359e-02 7.074231e-02 63.74769 -69.06308 #> 282  173.8469326 135   38.84693258 1.863067e-01 3.934325e-01 63.10892 -68.92667 #> 283  135.8467075 135    0.84670749 8.850785e-05 2.183685e-04 63.61943 -80.06097 #> 284  158.6629794 135   23.66297938 6.912797e-02 1.610867e-01 63.18255 -80.73991 #> 285  150.2587026 135   15.25870261 2.874420e-02 6.926253e-02 62.09931 -79.42806 #> 286   91.4294782 135  -43.57052177 2.343692e-01 4.750613e-01 65.35556 -80.39599 #> 287   57.2594294 135  -77.74057060 7.461230e-01 9.549124e-01 66.24219 -79.77706 #> 288  113.7598661 135  -21.24013393 5.569670e-02 1.312450e-01 64.38452 -79.46341 #> 289  138.5522078 135    3.55220782 1.557800e-03 3.838795e-03 63.23432 -80.85004 #> 290   52.5263137 135  -82.47368632 8.397418e-01 9.828438e-01 66.80636 -78.87857 #> 291  128.0394411 135   -6.96055892 5.981405e-03 1.468606e-02 57.28660 -77.83209 #> 292  150.6142690 135   15.61426898 3.009943e-02 7.244693e-02 56.92730 -78.83725 #> 293  151.6735382 135   16.67353821 3.432184e-02 8.232201e-02 57.08909 -78.59970 #> 294  162.7655456 135   27.76554557 9.517599e-02 2.170205e-01 57.28288 -79.91529 #> 295  169.1455228 135   34.14552282 1.439403e-01 3.150540e-01 57.69187 -78.93478 #> 296  159.0990430 135   24.09904300 7.169924e-02 1.667213e-01 57.89330 -85.28979 #> 297  122.6455233 135  -12.35447673 1.884359e-02 4.577857e-02 57.47395 -84.82916 #> 298  120.8148369 135  -14.18516308 2.484183e-02 6.005261e-02 57.70008 -76.22869 #> 299  122.0296749 135  -12.97032510 2.076905e-02 5.037617e-02 57.94755 -77.28823 #> 300  116.8139607 135  -18.18603932 4.083111e-02 9.740856e-02 57.75279 -77.80116 #> 301  126.1578872 135   -8.84211284 9.652217e-03 2.362743e-02 57.45935 -79.11892 #> 302  112.4026605 135  -22.59733952 6.304194e-02 1.476499e-01 56.93726 -80.82343 #> 303  165.2368257 135   30.23682574 1.128723e-01 2.535881e-01 57.09457 -87.53397 #> 304  143.2939974 135    8.29399736 8.492641e-03 2.080879e-02 57.00825 -87.53254 #> 305  133.5128533 135   -1.48714674 2.730377e-04 6.735423e-04 58.17624 -89.14835 #> 306   99.0541204 135  -35.94587956 1.595193e-01 3.445934e-01 58.72856 -84.51298 #> 307  122.8991507 135  -12.10084934 1.807785e-02 4.394602e-02 56.59195 -85.30574 #> 308  131.4806467 135   -3.51935329 1.529117e-03 3.768202e-03 58.63709 -87.10207 #> 309  127.6802735 135   -7.31972647 6.614617e-03 1.623231e-02 58.81686 -86.59500 #> 310  126.5517926 135   -8.44820742 8.811384e-03 2.158411e-02 58.55768 -85.48446 #> 311  154.1919283 135   19.19192828 4.547285e-02 1.080658e-01 59.05505 -83.96787 #> 312  140.2566263 135    5.25662630 3.411373e-03 8.393635e-03 58.44311 -84.47882 #> 313  143.2719551 135    8.27195509 8.447561e-03 2.069910e-02 58.52521 -84.37183 #> 314  149.5743711 135   14.57437109 2.622374e-02 6.332091e-02 58.39801 -84.01700 #> 315  165.9945062 135   30.99450616 1.185999e-01 2.651796e-01 58.48706 -83.25903 #> 316  172.0322435 135   37.03224351 1.693070e-01 3.627224e-01 58.65086 -83.03899 #> 317  169.3269262 135   34.32692618 1.454738e-01 3.179992e-01 58.34309 -82.86881 #> 318  172.1803123 135   37.18031231 1.706637e-01 3.652092e-01 58.49710 -82.95324 #> 319  137.2277947 135    2.22779466 6.127246e-04 1.511076e-03 58.69351 -82.68730 #> 320  171.3675412 135   36.36754118 1.632837e-01 3.516049e-01 59.22711 -80.38694 #> 321  150.4013637 135   15.40136365 2.928420e-02 7.053224e-02 58.46911 -81.03441 #> 322  164.1836542 135   29.18365417 1.051464e-01 2.377641e-01 57.16387 -79.33703 #> 323  138.8114400 135    3.81144003 1.793466e-03 4.418677e-03 58.07968 -74.32262 #> 324  139.4886028 135    4.48860276 2.487352e-03 6.124751e-03 62.62628 -69.80980 #> 325   82.9574873 135  -52.04251274 3.343732e-01 6.216808e-01 61.87102 -74.14280 #> 326  126.8519103 135   -8.14808972 8.196465e-03 2.008800e-02 61.76811 -77.36395 #> 327  162.9679875 135   27.96798749 9.656893e-02 2.199405e-01 60.52765 -78.28396 #> 328  163.7567626 135   28.75676256 1.020928e-01 2.314497e-01 62.35394 -74.04404 #> 329   74.4711742 135  -60.52882579 4.523134e-01 7.579502e-01 63.06172 -72.42366 #> 330   69.2002128 135  -65.79978721 5.345200e-01 8.319603e-01 62.16523 -73.54300 #> 331   74.2346807 135  -60.76531928 4.558548e-01 7.614772e-01 61.71573 -73.85637 #> 332  161.4692040 135   26.46920402 8.649614e-02 1.986634e-01 60.60527 -74.40366 #> 333  158.3225503 135   23.32255025 6.715325e-02 1.567423e-01 61.88510 -70.61228 #> 334   56.5936741 135  -78.40632589 7.589570e-01 9.596112e-01 62.53564 -69.72308 #> 335  115.2026347 135  -19.79736531 4.838712e-02 1.147141e-01 60.52162 -70.30105 #> 336  132.5352366 135   -2.46476338 7.500072e-04 1.849427e-03 58.80776 -71.03810 #> 337  163.4253497 135   28.42534971 9.975315e-02 2.265887e-01 60.91414 -65.13952 #> 338  131.0300197 135   -3.96998031 1.945771e-03 4.793319e-03 56.51478 -78.50652 #> 339  150.0903371 135   15.09033710 2.811337e-02 6.777779e-02 56.67638 -78.26833 #> 340  157.1521421 135   22.15214208 6.058239e-02 1.421797e-01 56.83783 -78.02879 #> 341  138.7942067 135    3.79420673 1.777285e-03 4.378867e-03 56.64041 -78.78906 #> 342  142.8532702 135    7.85327017 7.614056e-03 1.866957e-02 56.80216 -78.55184 #> 343  109.0603110 135  -25.93968902 8.307006e-02 1.913405e-01 55.93624 -62.39722 #> 344  141.0603110 135    6.06031098 4.534243e-03 1.114614e-02 55.93624 -62.39722 #> 345  102.2190378 135  -32.78096219 1.326656e-01 2.931452e-01 54.80362 -56.17234 #> 346  138.9513979 135    3.95139791 1.927598e-03 4.748622e-03 54.79221 -66.52546 #> 347  137.7865034 135    2.78650344 9.585928e-04 2.363369e-03 57.91255 -71.28865 #> 348  163.4214690 135   28.42146900 9.972591e-02 2.265320e-01 54.76868 -65.75303 #> 349  111.5713623 135  -23.42863773 6.776556e-02 1.580910e-01 56.54355 -66.09599 #> 350  108.2828975 135  -26.71710250 8.812390e-02 2.021273e-01 56.16182 -63.53769 #> 351  139.2828975 135    4.28289750 2.264594e-03 5.577262e-03 56.16182 -63.53769 #> 352  140.4388081 135    5.43880810 3.651930e-03 8.983744e-03 56.11345 -63.31120 #> 353   99.6108326 135  -35.38916743 1.546164e-01 3.353881e-01 54.39376 -55.70635 #> 354  116.4306344 135  -18.56936556 4.257054e-02 1.014120e-01 55.84837 -61.84148 #> 355  139.4306344 135    4.43063444 2.423521e-03 5.967889e-03 55.84837 -61.84148 #> 356  138.6178744 135    3.61787438 1.615928e-03 3.981846e-03 55.83262 -61.54513 #> 357  100.2153972 135  -34.78460282 1.493788e-01 3.254621e-01 56.19247 -66.89235 #> 358  126.0341549 135   -8.96584509 9.924244e-03 2.428787e-02 55.70380 -60.93456 #> 359   90.2902414 135  -44.70975857 2.467855e-01 4.949344e-01 56.28952 -66.70990 #> 360  110.2989586 135  -24.70104141 7.532610e-02 1.746267e-01 56.36027 -68.28591 #> 361   89.4423345 135  -45.55766555 2.562347e-01 5.097325e-01 56.12021 -71.50271 #> 362  119.9761409 135  -15.02385915 2.786622e-02 6.719566e-02 57.13081 -73.17161 #> 363  109.0992776 135  -25.90072243 8.282067e-02 1.908057e-01 54.67807 -58.05670 #> 364  122.8030274 135  -12.19697261 1.836619e-02 4.463634e-02 56.98119 -73.56659 #> 365  114.6935938 135  -20.30640617 5.090742e-02 1.204371e-01 57.08609 -73.66549 #> 366   98.0402871 135  -36.95971290 1.686445e-01 3.615056e-01 56.46264 -67.01008 #> 367  118.3162770 135  -16.68372304 3.436378e-02 8.241975e-02 55.47427 -63.86774 #> 368  103.1303293 135  -31.86967070 1.253921e-01 2.787722e-01 62.11521 -79.60289 #> 369  116.0167927 135  -18.98320729 4.448916e-02 1.058142e-01 64.39352 -81.90750 #> 370    8.7670576 135 -126.23294244 1.967254e+00 6.506368e-01 62.66625 -79.62485 #> 371  119.3335208 135  -15.66647924 3.030106e-02 7.292008e-02 57.86345 -84.94132 #> 372  148.8043094 135   13.80430940 2.352580e-02 5.693306e-02 57.74621 -76.20789 #> 373  118.8654972 135  -16.13450277 3.213854e-02 7.722461e-02 57.73789 -76.11598 #> 374  112.3035026 135  -22.69649736 6.359642e-02 1.488799e-01 57.97609 -89.70961 #> 375  104.8381659 135  -30.16183413 1.123131e-01 2.524501e-01 59.93575 -85.18176 #> 376   48.0604946 135  -86.93950544 9.331454e-01 9.971495e-01 59.43239 -85.35594 #> 377  135.3970423 135    0.39704232 1.946205e-05 4.801992e-05 64.52644 -82.64399 #> 378  128.4427420 135   -6.55725796 5.308350e-03 1.304074e-02 64.87222 -80.84435 #> 379  141.6571910 135    6.65719096 5.471382e-03 1.343945e-02 56.94097 -82.04905 #> 380  134.0330245 135   -0.96697548 1.154372e-04 2.848029e-04 56.73575 -86.59830 #> 381   52.6635911 135  -82.33640893 8.369487e-01 9.822161e-01 62.34254 -75.66487 #> 382  114.6320249 135  -20.36797514 5.121659e-02 1.211375e-01 59.98847 -86.98117 #> 383  149.8647265 135   14.86472652 2.727902e-02 6.581165e-02 63.66492 -79.99223 #> 384    4.6648200 135 -130.33517995 2.097192e+00 5.810572e-01 51.34628 -83.80554 #> 385  144.4537958 135    9.45379581 1.103386e-02 2.697878e-02 58.44535 -80.97289 #> 386  145.4421861 135   10.44218608 1.346164e-02 3.284913e-02 58.25804 -81.16546 #> 387  126.0851267 135   -8.91487326 9.811724e-03 2.401472e-02 55.33374 -57.78048 #> 388  120.0924228 135  -14.90757719 2.743653e-02 6.618301e-02 55.26079 -57.80207 #> 389  137.6956868 135    2.69568680 8.971268e-04 2.211939e-03 56.38364 -59.52136 #> 390  157.0402587 135   22.04025875 5.997198e-02 1.408186e-01 56.55130 -60.48878 #> 391  141.9731794 135    6.97317942 6.003115e-03 1.473910e-02 56.52384 -57.40854 #> 392   61.8681831 135  -73.13181687 6.602793e-01 9.158009e-01 58.75520 -84.78047 #> 393    2.8305297 135 -132.16947030 2.156638e+00 5.493217e-01 58.70719 -84.88890 #> 394   78.8682989 135  -56.13170113 3.889837e-01 6.894326e-01 58.75585 -84.77962 #> 395   12.3939009 135 -122.60609907 1.855834e+00 7.096294e-01 56.06259 -81.64269 #> 396  163.6488001 135   28.64880011 1.013276e-01 2.298622e-01 55.77124 -81.48170 #> 397  163.5243814 135   28.52438142 1.004494e-01 2.280375e-01 55.64358 -81.81066 #> 398  179.8487560 135   44.84875596 2.483223e-01 4.973603e-01 55.92301 -82.69263 #> 399  165.0866851 135   30.08668509 1.117542e-01 2.513114e-01 56.40505 -86.85729 #> 400  104.5148290 135  -30.48517100 1.147340e-01 2.573689e-01 56.39275 -87.82897 #> 401  128.0035267 135   -6.99647328 6.043289e-03 1.483725e-02 56.57900 -85.14494 #> 402  111.8825937 135  -23.11740631 6.597710e-02 1.541477e-01 58.41182 -85.10719 #> 403  136.0128652 135    1.01286525 1.266538e-04 3.124732e-04 58.49861 -84.81118 #> 404  166.3157061 135   31.31570610 1.210708e-01 2.701435e-01 55.63354 -55.65902 #> 405  137.8613460 135    2.86134599 1.010778e-03 2.491922e-03 55.47430 -54.84935 #> 406  148.1659036 135   13.16590360 2.140013e-02 5.187984e-02 56.65132 -58.63606 #> 407  149.5289587 135   14.52895870 2.606057e-02 6.293540e-02 56.71710 -67.68100 #> 408  147.9751700 135   12.97517001 2.078457e-02 5.041317e-02 56.79741 -81.65830 #> 409  134.9579050 135   -0.04209499 2.187640e-07 5.397784e-07 56.78967 -81.69409 #> 410  179.3703407 135   44.37034071 2.430527e-01 4.890113e-01 56.91528 -82.54677 #> 411    0.3278169 135 -134.67218307 2.239086e+00 5.057214e-01 56.92764 -82.60517 #> 412  162.2848047 135   27.28480473 9.190871e-02 2.101433e-01 56.93219 -82.67182 #> 413  147.5483583 135   12.54835827 1.943967e-02 4.720345e-02 56.83750 -82.32657 #> 414  142.5024885 135    7.50248853 6.949054e-03 1.704833e-02 56.83555 -82.40427 #> 415  166.4583889 135   31.45838885 1.221766e-01 2.723579e-01 56.84078 -82.47223 #> 416  139.7044566 135    4.70445663 2.732335e-03 6.726629e-03 56.80121 -82.10264 #> 417  134.8491839 135   -0.15081608 2.808085e-06 6.928657e-06 58.62800 -89.69737 #> 418  150.3338188 135   15.33381881 2.902790e-02 6.992975e-02 58.72711 -77.73428 #> 419  167.2544667 135   32.25446668 1.284383e-01 2.848148e-01 59.88027 -83.05346 #> 420  144.4988985 135    9.49889853 1.113939e-02 2.723445e-02 58.54366 -80.81001 #> 421  158.8342066 135   23.83420661 7.013203e-02 1.632899e-01 55.83043 -56.34665 #> 422  153.3563707 135   18.35637073 4.159955e-02 9.917864e-02 56.17034 -58.56433 #> 423  135.2367561 135    0.23675612 6.920181e-06 1.707476e-05 55.52223 -55.83423 #> 424  134.3929539 135   -0.60704615 4.549445e-05 1.122488e-04 55.71233 -55.50092 #> 425  137.7629120 135    2.76291205 9.424300e-04 2.323551e-03 56.24225 -61.09585 #> 426   95.3434634 135  -39.65653657 1.941532e-01 4.072788e-01 57.88004 -73.62502 #> 427  130.8804406 135   -4.11955938 2.095157e-03 5.160690e-03 57.91356 -72.73848 #> 428  147.7223931 135   12.72239307 1.998263e-02 4.850013e-02 57.69347 -73.15817 #> 429  136.7221955 135    1.72219545 3.661676e-04 9.032102e-04 57.78372 -77.92292 #> 430  135.5831322 135    0.58313221 4.198064e-05 1.035795e-04 55.17254 -53.81157 #> 431  134.6336080 135   -0.36639204 1.657323e-05 4.089224e-05 55.05091 -53.77881 #> 432  145.6927395 135   10.69273945 1.411539e-02 3.442587e-02 56.27845 -57.97273 #> 433  135.8356502 135    0.83565016 8.621126e-05 2.127027e-04 56.40164 -60.89543 #> 434  149.5511919 135   14.55119194 2.614039e-02 6.312401e-02 58.16210 -76.27269 #> 435  151.4173114 135   16.41731143 3.327508e-02 7.988045e-02 56.44219 -86.26468 #> 436  137.0915642 135    2.09156417 5.400791e-04 1.332000e-03 57.86988 -72.43276 #> 437  166.5621113 135   31.56211133 1.229836e-01 2.739712e-01 58.87777 -75.66724 #> 438  136.0646019 135    1.06460191 1.399231e-04 3.452067e-04 58.02712 -73.95846 #> 439  139.6260497 135    4.62604973 2.642017e-03 6.504762e-03 58.22039 -74.50817 #> 440  139.9044019 135    4.90440190 2.969526e-03 7.309133e-03 58.01972 -74.22074 #> 441  150.7448385 135   15.74483847 3.060493e-02 7.363286e-02 58.08363 -74.42607 #> 442  150.8040420 135   15.80404201 3.083552e-02 7.417350e-02 58.05100 -74.35695 #> 443  142.4848216 135    7.48482161 6.916365e-03 1.696859e-02 58.17754 -74.76757 #> 444  149.5444826 135   14.54448265 2.611629e-02 6.306706e-02 58.14507 -74.69799 #> 445  150.6052337 135   15.60523372 3.006461e-02 7.236520e-02 58.11191 -74.62709 #> 446  143.6646318 135    8.66463181 9.268623e-03 2.269560e-02 58.07936 -74.55777 #> 447  143.3848350 135    8.38483496 8.679686e-03 2.126382e-02 58.20770 -74.90327 #> 448  137.7445836 135    2.74458362 9.299678e-04 2.292849e-03 58.01202 -74.48278 #> 449  122.8625351 135  -12.13746490 1.818741e-02 4.420837e-02 57.94671 -74.34495 #> 450  152.4642460 135   17.46424598 3.765431e-02 9.006637e-02 58.14062 -74.82978 #> 451  147.5250625 135   12.52506249 1.936755e-02 4.703114e-02 58.10751 -74.75881 #> 452  150.5845248 135   15.58452485 2.998487e-02 7.217802e-02 58.07501 -74.68941 #> 453  150.2243091 135   15.22430905 2.861476e-02 6.895802e-02 58.19843 -75.16704 #> 454  149.3440804 135   14.34408042 2.540156e-02 6.137731e-02 58.13379 -75.02736 #> 455  119.5848229 135  -15.41517706 2.933675e-02 7.065575e-02 58.00338 -74.74563 #> 456  119.6635454 135  -15.33645456 2.903788e-02 6.995321e-02 57.93676 -74.67204 #> 457  119.5839889 135  -15.41601108 2.933993e-02 7.066321e-02 57.93239 -74.80319 #> 458  103.6442060 135  -31.35579405 1.213810e-01 2.707651e-01 57.89920 -74.73276 #> 459  118.5648136 135  -16.43518642 3.334757e-02 8.004969e-02 57.89481 -74.86377 #> 460  155.4937963 135   20.49379627 5.185132e-02 1.225742e-01 58.43969 -76.13539 #> 461  166.7408774 135   31.74087739 1.243807e-01 2.767586e-01 58.31215 -75.84653 #> 462  114.2466883 135  -20.75331166 5.317283e-02 1.255604e-01 58.01985 -75.27454 #> 463  116.3065241 135  -18.69347593 4.314149e-02 1.027235e-01 57.98817 -75.20398 #> 464  124.3867506 135  -10.61324942 1.390630e-02 3.392177e-02 57.92049 -75.12935 #> 465  125.8598452 135   -9.14015485 1.031388e-02 2.523334e-02 57.66077 -74.57342 #> 466  119.2865963 135  -15.71340367 3.048285e-02 7.334653e-02 57.95117 -75.26561 #> 467  122.2073799 135  -12.79262007 2.020384e-02 4.902810e-02 57.94645 -75.39659 #> 468  124.2679825 135  -10.73201746 1.421928e-02 3.467628e-02 57.91351 -75.32572 #> 469  169.2542302 135   34.25423018 1.448583e-01 3.168181e-01 58.42200 -76.53129 #> 470  160.3771329 135   25.37713292 7.950603e-02 1.836762e-01 58.35927 -76.38764 #> 471  134.3484152 135   -0.65158478 5.241515e-05 1.293236e-04 57.84650 -75.25013 #> 472  160.5837522 135   25.58375219 8.080597e-02 1.864771e-01 58.22876 -76.16572 #> 473  124.1889307 135  -10.81106933 1.442953e-02 3.518291e-02 57.90877 -75.45655 #> 474  128.6255255 135   -6.37447445 5.016534e-03 1.232682e-02 57.64787 -74.96177 #> 475  127.8599176 135   -7.14008238 6.293923e-03 1.544941e-02 57.51802 -74.68539 #> 476  174.3809267 135   39.38092667 1.914639e-01 4.025563e-01 58.28695 -76.44154 #> 477  168.4431077 135   33.44310774 1.380792e-01 3.037208e-01 58.25457 -76.36909 #> 478  135.5039075 135    0.50390749 3.134849e-05 7.734730e-05 58.22278 -76.29823 #> 479  131.1099807 135   -3.89001925 1.868179e-03 4.602469e-03 57.90395 -75.58732 #> 480  131.1907568 135   -3.80924316 1.791399e-03 4.413592e-03 57.83707 -75.51138 #> 481  136.4284326 135    1.42843258 2.519037e-04 6.214186e-04 57.70835 -75.23171 #> 482  126.1784133 135   -8.82158674 9.607456e-03 2.351872e-02 58.34343 -76.71762 #> 483  156.2396645 135   21.23966454 5.569424e-02 1.312395e-01 58.31181 -76.64631 #> 484  161.3023284 135   26.30232837 8.540895e-02 1.963444e-01 58.28016 -76.57265 #> 485  166.3633168 135   31.36331684 1.214392e-01 2.708818e-01 58.24846 -76.50160 #> 486  171.4244689 135   36.42446889 1.637953e-01 3.525540e-01 58.21736 -76.42967 #> 487  127.0917892 135   -7.90821078 7.720963e-03 1.893004e-02 57.86624 -75.64706 #> 488  176.1614159 135   41.16141588 2.091682e-01 4.332044e-01 58.30553 -76.77642 #> 489  162.3448460 135   27.34484604 9.231365e-02 2.109978e-01 58.21123 -76.56204 #> 490  123.0131059 135  -11.98689409 1.773897e-02 4.313428e-02 57.86132 -75.77763 #> 491  133.0727800 135   -1.92721997 4.585403e-04 1.130976e-03 57.82980 -75.70714 #> 492  153.9354736 135   18.93547362 4.426570e-02 1.053023e-01 58.39652 -77.06029 #> 493  150.0588247 135   15.05882467 2.799607e-02 6.750155e-02 58.33421 -76.91607 #> 494  156.4282608 135   21.42826076 5.668770e-02 1.334704e-01 58.14502 -76.48355 #> 495  124.9139748 135  -10.08602516 1.255900e-02 3.066932e-02 57.89030 -75.91353 #> 496  139.1531345 135    4.15313453 2.129448e-03 5.245006e-03 57.76230 -75.63228 #> 497  117.3905742 135  -17.60942584 3.828295e-02 9.152240e-02 57.63432 -75.35202 #> 498  152.1432565 135   17.14325646 3.628287e-02 8.688454e-02 58.26826 -76.83660 #> 499  152.3277168 135   17.32771681 3.706787e-02 8.870670e-02 58.17336 -76.62093 #> 500  127.9951712 135   -7.00482878 6.057732e-03 1.487253e-02 57.82358 -75.83714 #> 501  134.0547739 135   -0.94522609 1.103028e-04 2.721365e-04 57.79206 -75.76671 #> 502  157.3524978 135   22.35249784 6.168323e-02 1.446309e-01 58.63835 -77.78104 #> 503  121.5490026 135  -13.45099742 2.233695e-02 5.410911e-02 57.49996 -75.20300 #> 504  176.7538806 135   41.75388057 2.152329e-01 4.434657e-01 58.41767 -77.33169 #> 505  169.8156947 135   34.81569470 1.496460e-01 3.259707e-01 58.38633 -77.25978 #> 506  133.8776566 135   -1.12234337 1.555129e-04 3.836637e-04 58.35560 -77.18700 #> 507  150.9407508 135   15.94075085 3.137130e-02 7.542887e-02 58.32419 -77.11288 #> 508  140.0637459 135    5.06374592 3.165620e-03 7.790539e-03 58.26187 -76.96897 #> 509  146.1261605 135   11.12616046 1.528289e-02 3.723742e-02 58.22970 -76.89622 #> 510  152.1874751 135   17.18747511 3.647028e-02 8.731979e-02 58.19876 -76.82409 #> 511  124.7961349 135  -10.20386509 1.285418e-02 3.138252e-02 57.88265 -76.10932 #> 512  130.8569703 135   -4.14302973 2.119098e-03 5.219559e-03 57.84999 -76.03813 #> 513  140.9167547 135    5.91675466 4.321974e-03 1.062619e-02 57.81857 -75.96750 #> 514  137.9761126 135    2.97611263 1.093487e-03 2.695646e-03 57.78647 -75.89801 #> 515  135.0368601 135    0.03686012 1.677369e-07 4.138741e-07 57.75432 -75.82619 #> 516  165.5260331 135   30.52603309 1.150418e-01 2.579927e-01 58.50766 -77.61760 #> 517  148.2712224 135   13.27122242 2.174387e-02 5.269821e-02 58.13269 -76.74525 #> 518  131.1161918 135   -3.88380818 1.862218e-03 4.587806e-03 57.68813 -75.75183 #> 519  145.2353382 135   10.23533820 1.293360e-02 3.157435e-02 57.62363 -75.61145 #> 520  124.3539758 135  -10.64602418 1.399232e-02 3.412918e-02 57.55896 -75.47158 #> 521    0.6119380 135 -134.38806197 2.229648e+00 5.106795e-01 58.44154 -77.53741 #> 522  163.6742114 135   28.67421138 1.015075e-01 2.302355e-01 58.41094 -77.46432 #> 523  167.7993608 135   32.79936079 1.328146e-01 2.934376e-01 58.34835 -77.31801 #> 524  148.8612451 135   13.86124510 2.372026e-02 5.739445e-02 58.31763 -77.24530 #> 525  175.9227227 135   40.92272275 2.067493e-01 4.290781e-01 58.28622 -77.17371 #> 526    3.9856064 135 -131.01439362 2.119108e+00 5.693378e-01 58.25478 -77.09978 #> 527  137.0468222 135    2.04682219 5.172199e-04 1.275646e-03 58.22329 -77.02844 #> 528  109.7786005 135  -25.22139952 7.853321e-02 1.815759e-01 57.84485 -76.16849 #> 529  127.8381437 135   -7.16185634 6.332369e-03 1.554329e-02 57.81284 -76.09880 #> 530  163.9390160 135   28.93901602 1.033909e-01 2.341383e-01 58.74564 -78.34319 #> 531  159.3435676 135   24.34356759 7.316164e-02 1.699148e-01 58.52734 -77.89080 #> 532  170.4698792 135   35.46987916 1.553225e-01 3.367189e-01 58.46520 -77.74332 #> 533  175.5323336 135   40.53233358 2.028235e-01 4.223402e-01 58.43469 -77.67003 #> 534  175.5959300 135   40.59593000 2.034604e-01 4.234369e-01 58.40352 -77.59538 #> 535  172.6578529 135   37.65785288 1.750758e-01 3.732536e-01 58.37229 -77.52333 #> 536  107.1524478 135  -27.84755221 9.573903e-02 2.182017e-01 58.12291 -76.94367 #> 537  121.2147296 135  -13.78527040 2.346095e-02 5.677916e-02 58.09132 -76.87031 #> 538  147.7611577 135   12.76115772 2.010459e-02 4.879123e-02 57.80705 -76.22759 #> 539  130.8209262 135   -4.17907380 2.156131e-03 5.310611e-03 57.77569 -76.15695 #> 540  132.9908700 135   -2.00912999 4.983461e-04 1.229116e-03 58.18243 -77.15235 #> 541  128.3587915 135   -6.64120855 5.445142e-03 1.337529e-02 57.99416 -76.72024 #> 542  162.3277059 135   27.32770586 9.219796e-02 2.107537e-01 58.48863 -77.94941 #> 543  138.3903408 135    3.39034084 1.419063e-03 3.497313e-03 58.45822 -77.87593 #> 544  130.4541214 135   -4.54587855 2.551236e-03 6.281725e-03 58.42715 -77.80108 #> 545  116.1358385 135  -18.86416148 4.393291e-02 1.045394e-01 58.08498 -77.00210 #> 546  121.1968004 135  -13.80319956 2.352201e-02 5.692408e-02 58.05403 -76.93027 #> 547  131.8035025 135   -3.19649746 1.261432e-03 3.109230e-03 57.73788 -76.21602 #> 548  142.0028175 135    7.00281751 6.054253e-03 1.486404e-02 57.60768 -76.00033 #> 549  138.2405768 135    3.24057681 1.296461e-03 3.195481e-03 57.47945 -75.71921 #> 550  132.3121993 135   -2.68780066 8.918855e-04 2.199025e-03 58.45055 -78.00696 #> 551  103.3744911 135  -31.62550894 1.234781e-01 2.749587e-01 58.41950 -77.93452 #> 552  128.9961966 135   -6.00380337 4.450081e-03 1.094001e-02 58.11006 -77.20485 #> 553  124.0583076 135  -10.94169239 1.478032e-02 3.602781e-02 58.07794 -77.13235 #> 554  120.1193200 135  -14.88068000 2.733761e-02 6.594979e-02 58.04704 -77.06045 #> 555  124.1802064 135  -10.81979358 1.445283e-02 3.523904e-02 58.01610 -76.98868 #> 556  147.6655776 135   12.66557759 1.980455e-02 4.807498e-02 57.76333 -76.41762 #> 557  138.7097580 135    3.70975804 1.699050e-03 4.186383e-03 58.23066 -77.56118 #> 558  131.4456263 135   -3.55437371 1.559700e-03 3.843472e-03 57.85554 -76.69586 #> 559   98.2952458 135  -36.70475424 1.663258e-01 3.572353e-01 58.41244 -78.06690 #> 560  141.7947092 135    6.79470922 5.699762e-03 1.399779e-02 58.16501 -77.48111 #> 561  124.9184543 135  -10.08154567 1.254785e-02 3.064237e-02 58.10225 -77.33607 #> 562  124.0407104 135  -10.95928960 1.482790e-02 3.614237e-02 58.04061 -77.19202 #> 563  130.1634239 135   -4.83657605 2.887959e-03 7.108844e-03 57.97752 -77.04799 #> 564  134.2241082 135   -0.77589180 7.432199e-05 1.833709e-04 57.94656 -76.97641 #> 565  135.5278171 135    0.52781705 3.439393e-05 8.486122e-05 57.78922 -76.61842 #> 566  135.5877465 135    0.58774652 4.264765e-05 1.052252e-04 57.75801 -76.54758 #> 567  149.6472630 135   14.64726299 2.648671e-02 6.394199e-02 57.72612 -76.47785 #> 568  140.7160017 135    5.71600169 4.033664e-03 9.919691e-03 58.15829 -77.61288 #> 569  138.7787549 135    3.77875489 1.762838e-03 4.343326e-03 58.12699 -77.53900 #> 570  124.8398545 135  -10.16014550 1.274427e-02 3.111699e-02 58.09564 -77.46770 #> 571  123.0853132 135  -11.91468678 1.752590e-02 4.262367e-02 57.97176 -77.17837 #> 572  133.1470122 135   -1.85298783 4.238968e-04 1.045559e-03 57.93958 -77.10624 #> 573  130.2076213 135   -4.79237867 2.835419e-03 6.979816e-03 57.90862 -77.03471 #> 574  118.4497525 135  -16.55024750 3.381613e-02 8.114300e-02 57.78313 -76.74937 #> 575  138.5109581 135    3.51095811 1.521830e-03 3.750269e-03 57.75134 -76.67701 #> 576  166.6305470 135   31.63054703 1.235175e-01 2.750372e-01 57.68891 -76.53556 #> 577  159.6910826 135   24.69108264 7.526538e-02 1.744947e-01 57.65635 -76.46457 #> 578  151.9252350 135   16.92523504 3.536587e-02 8.475294e-02 58.52282 -78.55991 #> 579  125.2905109 135   -9.70948913 1.163879e-02 2.844371e-02 57.84251 -76.95658 #> 580  145.7724508 135   10.77245083 1.432663e-02 3.493497e-02 57.59045 -76.38717 #> 581  132.8905579 135   -2.10944213 5.493514e-04 1.354858e-03 57.52704 -76.24788 #> 582  137.0096655 135    2.00966551 4.986118e-04 1.229771e-03 57.46347 -76.10664 #> 583  130.6999491 135   -4.30005085 2.282770e-03 5.621942e-03 58.11961 -77.67159 #> 584  132.7626221 135   -2.23737790 6.180074e-04 1.524097e-03 58.08833 -77.59778 #> 585  125.8239143 135   -9.17608566 1.039513e-02 2.543041e-02 58.05763 -77.52556 #> 586  111.8850808 135  -23.11491920 6.596290e-02 1.541164e-01 58.02689 -77.45347 #> 587  125.9473661 135   -9.05263390 1.011731e-02 2.475642e-02 57.99548 -77.38003 #> 588  113.0687922 135  -21.93120783 5.937998e-02 1.394971e-01 57.93315 -77.23745 #> 589  127.1306903 135   -7.86930967 7.645189e-03 1.874543e-02 57.90162 -77.16440 #> 590  127.1912244 135   -7.80877555 7.528022e-03 1.845993e-02 57.87068 -77.09293 #> 591  140.4330587 135    5.43305867 3.644213e-03 8.964817e-03 57.74523 -76.80782 #> 592  155.6136323 135   20.61363235 5.245949e-02 1.239493e-01 57.65104 -76.59418 #> 593  162.6728818 135   27.67288181 9.454178e-02 2.156887e-01 57.61913 -76.52469 #> 594  133.4757588 135   -1.52424123 2.868286e-04 7.075542e-04 58.20819 -77.95477 #> 595  147.8706163 135   12.87061625 2.045096e-02 4.961765e-02 58.47996 -78.68441 #> 596  129.6227849 135   -5.37721510 3.569684e-03 8.782014e-03 58.11218 -77.80166 #> 597  130.6842542 135   -4.31574577 2.299464e-03 5.662979e-03 58.08157 -77.72925 #> 598  120.7468483 135  -14.25315168 2.508053e-02 6.061769e-02 58.05030 -77.65549 #> 599  121.8080636 135  -13.19193640 2.148484e-02 5.208156e-02 58.01961 -77.58334 #> 600  121.8691534 135  -13.13084657 2.128631e-02 5.160877e-02 57.98888 -77.51130 #> 601  126.9310904 135   -8.06890963 8.037939e-03 1.970205e-02 57.95684 -77.43891 #> 602  109.0526368 135  -25.94736315 8.311922e-02 1.914458e-01 57.89518 -77.29547 #> 603  126.1132230 135   -8.88677702 9.749976e-03 2.386480e-02 57.86429 -77.22393 #> 604  130.2576726 135   -4.74232736 2.776502e-03 6.835115e-03 57.76664 -77.07303 #> 605  131.3777686 135   -3.62223135 1.619822e-03 3.991429e-03 57.70454 -76.93100 #> 606  140.7372296 135    5.73722964 4.063679e-03 9.993260e-03 57.51539 -76.50597 #> 607  129.8565506 135   -5.14344940 3.266058e-03 8.037052e-03 57.45203 -76.36446 #> 608  152.7282786 135   17.72827865 3.880146e-02 9.272221e-02 58.50180 -78.89173 #> 609  149.7927498 135   14.79274976 2.701549e-02 6.519005e-02 58.47118 -78.81610 #> 610  156.8558020 135   21.85580202 5.897236e-02 1.385864e-01 58.44113 -78.74212 #> 611  143.9187263 135    8.91872633 9.820207e-03 2.403532e-02 58.41104 -78.66826 #> 612  130.6072566 135   -4.39274342 2.382246e-03 5.866449e-03 58.07412 -77.85917 #> 613  124.6686483 135  -10.33135166 1.317739e-02 3.216304e-02 58.04353 -77.78682 #> 614  133.9139346 135   -1.08606539 1.456220e-04 3.592648e-04 57.91946 -77.49819 #> 615  122.0365709 135  -12.96342915 2.074697e-02 5.032354e-02 57.85719 -77.35341 #> 616  135.0970817 135    0.09708171 1.163563e-06 2.870973e-06 57.82631 -77.28193 #> 617  155.7137239 135   20.71372392 5.297017e-02 1.251029e-01 58.46294 -78.94921 #> 618  145.7781097 135   10.77810974 1.434169e-02 3.497125e-02 58.43234 -78.87366 #> 619  116.8981107 135  -18.10188934 4.045412e-02 9.653932e-02 57.88145 -77.55593 #> 620  124.9600343 135  -10.03996573 1.244456e-02 3.039272e-02 57.85003 -77.48280 #> 621  129.0205939 135   -5.97940608 4.413987e-03 1.085160e-02 57.81920 -77.41126 #> 622  146.0810295 135   11.08102954 1.515916e-02 3.693971e-02 57.78833 -77.33984 #> 623  117.6137672 135  -17.38623275 3.731865e-02 8.928831e-02 58.00108 -77.91134 #> 624  127.2251918 135   -7.77480820 7.462672e-03 1.830066e-02 57.69073 -77.18915 #> 625  122.6985525 135  -12.30144752 1.868217e-02 4.539246e-02 57.93614 -77.83060 #> 626  134.0044372 135   -0.99556276 1.223636e-04 3.018897e-04 57.78056 -77.47002 #> 627  142.1262601 135    7.12626006 6.269578e-03 1.538996e-02 57.71817 -77.32597 #> 628  117.4130133 135  -17.58698673 3.818544e-02 9.129667e-02 58.05515 -78.18729 #> 629  130.6278589 135   -4.37214110 2.359953e-03 5.811657e-03 57.43305 -76.75145 #> 630  150.9282317 135   15.92823169 3.132205e-02 7.531351e-02 57.77335 -77.59913 #> 631  144.9886391 135    9.98863909 1.231764e-02 3.008591e-02 57.74255 -77.52771 #> 632  115.5831697 135  -19.41683031 4.654485e-02 1.105151e-01 57.92492 -78.02594 #> 633  111.7064033 135  -23.29359669 6.698662e-02 1.563751e-01 57.86310 -77.88046 #> 634  143.0718443 135    8.07184426 8.043786e-03 1.971629e-02 57.67726 -77.44845 #> 635  144.9125972 135    9.91259718 1.213081e-02 2.963414e-02 57.73533 -77.65668 #> 636  149.9729292 135   14.97292917 2.767761e-02 6.675125e-02 57.70453 -77.58532 #> 637  159.8970506 135   24.89705058 7.652631e-02 1.772318e-01 57.69729 -77.71416 #> 638  165.9573072 135   30.95730721 1.183154e-01 2.646066e-01 57.66650 -77.64286 #> 639  115.7593678 135  -19.24063223 4.570394e-02 1.085942e-01 57.72066 -77.91683 #> 640  158.8197958 135   23.81979575 7.004724e-02 1.631040e-01 57.68996 -77.84534 #> 641  164.8813304 135   29.88133036 1.102338e-01 2.482085e-01 57.65860 -77.77252 #> 642  156.0944719 135   21.09447191 5.493540e-02 1.295329e-01 58.50340 -79.89906 #> 643  132.0843407 135   -2.91565931 1.049515e-03 2.587339e-03 57.53170 -77.55126 #> 644  136.7441507 135    1.74415068 3.755632e-04 9.263788e-04 57.68258 -77.97402 #> 645  132.6451285 135   -2.35487145 6.846197e-04 1.688280e-03 57.70948 -78.11113 #> 646  137.7290206 135    2.72902058 9.194510e-04 2.266939e-03 57.64450 -78.03114 #> 647  132.7905257 135   -2.20947432 6.026885e-04 1.486337e-03 57.61320 -77.95832 #> 648  151.7032354 135   16.70323537 3.444421e-02 8.260716e-02 58.12612 -79.26432 #> 649  142.2007702 135    7.20077016 6.401369e-03 1.571176e-02 57.88446 -78.67700 #> 650  128.5929583 135   -6.40704167 5.067924e-03 1.245257e-02 57.66698 -78.23211 #> 651  128.6534018 135   -6.34659822 4.972754e-03 1.221968e-02 57.63639 -78.16057 #> 652  136.7137230 135    1.71372298 3.625736e-04 8.943478e-04 57.60577 -78.08914 #> 653  131.7751494 135   -3.22485057 1.283909e-03 3.164574e-03 57.57447 -78.01638 #> 654  125.6039230 135   -9.39607705 1.089954e-02 2.665331e-02 58.59128 -80.59909 #> 655  135.7340287 135    0.73402865 6.651828e-05 1.641183e-04 58.53281 -80.44591 #> 656  136.8634077 135    1.86340771 4.286776e-04 1.057347e-03 58.47351 -80.29418 #> 657  137.8201161 135    2.82011607 9.818586e-04 2.420683e-03 57.50569 -78.00227 #> 658  126.8814715 135   -8.11852853 8.137099e-03 1.994348e-02 57.47497 -77.92885 #> 659  126.0428734 135   -8.95712663 9.904953e-03 2.424104e-02 58.34552 -80.12443 #> 660  125.0237162 135   -9.97628375 1.228719e-02 3.001228e-02 57.37893 -77.77927 #> 661  138.2288366 135    3.22883662 1.287085e-03 3.172394e-03 58.69163 -81.10158 #> 662  139.6181894 135    4.61818936 2.633046e-03 6.482724e-03 58.51778 -80.64407 #> 663  126.6836574 135   -8.31634262 8.538464e-03 2.092028e-02 58.48793 -80.56729 #> 664  132.7476878 135   -2.25231216 6.262852e-04 1.544501e-03 58.45864 -80.49217 #> 665  143.8050942 135    8.80509420 9.571566e-03 2.343156e-02 57.46760 -78.05927 #> 666  146.8661164 135   11.86611635 1.738330e-02 4.228184e-02 57.43625 -77.98688 #> 667  134.3208863 135   -0.67911371 5.693771e-05 1.404816e-04 58.62829 -81.01447 #> 668  141.4501320 135    6.45013203 5.136321e-03 1.261992e-02 58.57016 -80.86305 #> 669  137.8378407 135    2.83784070 9.942395e-04 2.451182e-03 58.39479 -80.40688 #> 670  146.2209748 135   11.22097481 1.554448e-02 3.786661e-02 58.21783 -79.95523 #> 671  136.4645187 135    1.46451869 2.647920e-04 6.532057e-04 57.61677 -78.48354 #> 672  134.5864954 135   -0.41350456 2.110938e-05 5.208442e-05 57.55511 -78.33906 #> 673  128.7070027 135   -6.29299731 4.889113e-03 1.201497e-02 57.49455 -78.19555 #> 674  105.1519382 135  -29.84806181 1.099885e-01 2.477070e-01 58.68079 -81.23366 #> 675  131.2168987 135   -3.78310129 1.766896e-03 4.353309e-03 58.65186 -81.15761 #> 676  137.5415062 135    2.54150616 7.974387e-04 1.966311e-03 58.50725 -80.77585 #> 677  126.2050491 135   -8.79495093 9.549526e-03 2.337803e-02 58.61208 -81.21356 #> 678  133.2699857 135   -1.73001431 3.694999e-04 9.114275e-04 58.58377 -81.13679 #> 679  132.3359190 135   -2.66408100 8.762133e-04 2.160412e-03 58.55417 -81.05952 #> 680  147.4004054 135   12.40040536 1.898396e-02 4.611423e-02 58.52511 -80.98392 #> 681  150.4649644 135   15.46496444 2.952656e-02 7.110173e-02 58.49666 -80.90753 #> 682  141.5305084 135    6.53050837 5.265128e-03 1.293502e-02 58.46692 -80.83064 #> 683  133.5946136 135   -1.40538640 2.438409e-04 6.015325e-04 58.43773 -80.75542 #> 684  133.6587965 135   -1.34120352 2.220774e-04 5.478539e-04 58.40915 -80.67939 #> 685  139.7239524 135    4.72395244 2.755028e-03 6.782370e-03 58.37928 -80.60289 #> 686  129.6553924 135   -5.34460760 3.526522e-03 8.676136e-03 57.45205 -78.31601 #> 687  132.7165062 135   -2.28349380 6.437462e-04 1.587539e-03 57.42080 -78.24349 #> 688  118.9186732 135  -16.08132678 3.192705e-02 7.672984e-02 57.29490 -78.02201 #> 689  131.0386414 135   -3.96135858 1.937329e-03 4.772555e-03 57.23327 -77.87873 #> 690  143.2594495 135    8.25944949 8.422038e-03 2.063700e-02 58.54340 -81.19119 #> 691  146.3239720 135   11.32397200 1.583115e-02 3.855584e-02 58.51440 -81.11554 #> 692  143.3885645 135    8.38856450 8.687409e-03 2.128260e-02 58.48600 -81.03910 #> 693  134.5184873 135   -0.48151271 2.862401e-05 7.062525e-05 58.42783 -80.88596 #> 694  135.6476984 135    0.64769838 5.179175e-05 1.277856e-04 58.36883 -80.73426 #> 695  137.9595659 135    2.95956588 1.081362e-03 2.665781e-03 58.65336 -81.56465 #> 696  147.9928868 135   12.99288681 2.084137e-02 5.054857e-02 58.18819 -80.34761 #> 697  135.2459672 135    0.24596724 7.469122e-06 1.842921e-05 58.07061 -80.04824 #> 698  123.2393099 135  -11.76069006 1.707578e-02 4.154439e-02 57.59152 -78.87071 #> 699  137.4837793 135    2.48377930 7.616246e-04 1.878057e-03 57.46993 -78.57961 #> 700  139.1169275 135    4.11692752 2.092481e-03 5.154109e-03 58.56141 -81.40105 #> 701  149.1831229 135   14.18312291 2.483469e-02 6.003569e-02 58.53257 -81.32277 #> 702  153.2476811 135   18.24768112 4.110838e-02 9.804750e-02 58.50362 -81.24706 #> 703  139.4048156 135    4.40481558 2.395358e-03 5.898674e-03 58.41126 -81.08267 #> 704  125.0095525 135   -9.99044754 1.232210e-02 3.009669e-02 57.15585 -77.99217 #> 705  147.1715330 135   12.17153299 1.828966e-02 4.445315e-02 58.49278 -81.37848 #> 706  155.3018455 135   20.30184545 5.088456e-02 1.203853e-01 58.43491 -81.22490 #> 707  176.5433206 135   41.54332061 2.130676e-01 4.398158e-01 58.74406 -82.13861 #> 708  152.1228496 135   17.12284962 3.619654e-02 8.668400e-02 58.44755 -81.49849 #> 709  152.2530103 135   17.25301026 3.674893e-02 8.796667e-02 58.38975 -81.34501 #> 710  155.3813595 135   20.38135946 5.128393e-02 1.212900e-01 58.33236 -81.19356 #> 711  128.5371250 135   -6.46287498 5.156636e-03 1.266962e-02 58.23977 -81.03042 #> 712  134.6006587 135   -0.39934130 1.968808e-05 4.857761e-05 58.21058 -80.95568 #> 713  139.9174992 135    4.91749920 2.985407e-03 7.348128e-03 58.49287 -81.78303 #> 714  134.1974447 135   -0.80255534 7.951791e-05 1.961897e-04 57.91335 -80.26887 #> 715  141.1858945 135    6.18589449 4.724110e-03 1.161105e-02 57.43612 -79.09375 #> 716  125.4278584 135   -9.57214163 1.131184e-02 2.765214e-02 57.31530 -78.80512 #> 717  137.5901797 135    2.59017973 8.282754e-04 2.042296e-03 58.17088 -81.00925 #> 718  126.6536966 135   -8.34630343 8.600096e-03 2.107022e-02 58.14230 -80.93379 #> 719  125.6911375 135   -9.30886254 1.069814e-02 2.616515e-02 57.15945 -78.51007 #> 720  136.5943137 135    1.59431368 3.138069e-04 7.740877e-04 57.18626 -78.64530 #> 721  146.6417227 135   11.64172274 1.673206e-02 4.071969e-02 58.10254 -80.98979 #> 722  130.6780864 135   -4.32191361 2.306042e-03 5.679146e-03 57.12067 -78.56494 #> 723  118.7046299 135  -16.29537008 3.278260e-02 7.873027e-02 58.91792 -83.29608 #> 724  174.2102636 135   39.21026360 1.898080e-01 3.996365e-01 58.23000 -81.56312 #> 725  144.3378813 135    9.33788125 1.076494e-02 2.632709e-02 58.17267 -81.41227 #> 726  133.7207587 135   -1.27924132 2.020319e-04 4.984109e-04 57.99974 -80.95777 #> 727  138.8476988 135    3.84769876 1.827751e-03 4.503020e-03 57.94111 -80.80735 #> 728  133.6868527 135   -1.31314729 2.128834e-04 5.251769e-04 57.04748 -78.61384 #> 729  119.8769525 135  -15.12304746 2.823538e-02 6.806508e-02 58.33295 -81.99931 #> 730  103.1500529 135  -31.84994707 1.252369e-01 2.784636e-01 57.75535 -80.48922 #> 731  118.3986156 135  -16.60138443 3.402543e-02 8.163107e-02 57.63799 -80.19310 #> 732  140.1338130 135    5.13381298 3.253832e-03 8.007045e-03 57.28061 -79.31558 #> 733  153.3747348 135   18.37473482 4.168282e-02 9.937032e-02 57.16058 -79.02702 #> 734  172.2261118 135   37.22611178 1.710844e-01 3.659791e-01 58.15582 -81.60739 #> 735  136.2898764 135    1.28987635 2.054051e-04 5.067311e-04 58.12750 -81.53163 #> 736  141.3548143 135    6.35481428 4.985638e-03 1.225121e-02 58.09853 -81.45446 #> 737  117.4183356 135  -17.58166442 3.816234e-02 9.124317e-02 58.07012 -81.37893 #> 738  127.4815482 135   -7.51845181 6.978657e-03 1.712054e-02 58.04101 -81.30444 #> 739  137.6723086 135    2.67230862 8.816337e-04 2.173767e-03 57.95477 -81.07743 #> 740  130.7363108 135   -4.26368917 2.244327e-03 5.527440e-03 57.92488 -81.00191 #> 741  135.7991051 135    0.79910514 7.883568e-05 1.945066e-04 57.89621 -80.92710 #> 742  134.8617801 135   -0.13821990 2.358610e-06 5.819626e-06 57.86748 -80.85242 #> 743  174.0602558 135   39.06025575 1.883585e-01 3.970731e-01 58.20747 -81.82474 #> 744  154.6599591 135   19.65995914 4.771778e-02 1.131900e-01 56.97050 -78.72464 #> 745  135.4715679 135    0.47156790 2.745386e-05 6.773816e-05 58.00127 -81.35756 #> 746  123.5347570 135  -11.46524301 1.622862e-02 3.951089e-02 57.97277 -81.28235 #> 747  142.5989184 135    7.59891843 7.128835e-03 1.748680e-02 57.94299 -81.20666 #> 748  123.7246913 135  -11.27530866 1.569538e-02 3.822945e-02 57.88578 -81.05683 #> 749  132.7886735 135   -2.21132651 6.036994e-04 1.488829e-03 57.85651 -80.98060 #> 750  129.5245782 135   -5.47542181 3.701265e-03 9.104738e-03 57.93239 -81.33638 #> 751  125.8393541 135   -9.16064592 1.036018e-02 2.534564e-02 57.78804 -80.96189 #> 752  145.2517458 135   10.25174583 1.297510e-02 3.167458e-02 57.10863 -79.27411 #> 753  157.3126264 135   22.31262635 6.146337e-02 1.441417e-01 57.07830 -79.20092 #> 754  151.3721776 135   16.37217758 3.309237e-02 7.945385e-02 57.04855 -79.12930 #> 755  111.6779027 135  -23.32209730 6.715064e-02 1.567366e-01 57.84019 -81.17464 #> 756  119.9287919 135  -15.07120806 2.804214e-02 6.761004e-02 57.72413 -80.87603 #> 757  131.1560325 135   -3.84396752 1.824208e-03 4.494304e-03 57.13367 -79.40893 #> 758  124.0165800 135  -10.98341999 1.489327e-02 3.629975e-02 57.66073 -80.79202 #> 759  142.2396566 135    7.23965656 6.470695e-03 1.588101e-02 57.06975 -79.32816 #> 760  163.3597001 135   28.35970005 9.929291e-02 2.256301e-01 57.00904 -79.18442 #> 761  136.3507361 135    1.35073607 2.252454e-04 5.556679e-04 57.94416 -81.60569 #> 762  133.3513861 135   -1.64861392 3.355466e-04 8.276997e-04 57.48067 -80.41243 #> 763  109.8415298 135  -25.15847018 7.814181e-02 1.807298e-01 57.24423 -79.82563 #> 764  112.0060371 135  -22.99396293 6.527436e-02 1.525950e-01 57.62104 -80.84558 #> 765  119.0678835 135  -15.93211648 3.133733e-02 7.534930e-02 57.59218 -80.77166 #> 766  149.1665866 135   14.16658661 2.477681e-02 5.989864e-02 57.06049 -79.45626 #> 767  152.2274225 135   17.22742252 3.664001e-02 8.771384e-02 57.03022 -79.38309 #> 768  143.2869304 135    8.28693038 8.478175e-03 2.077359e-02 57.00053 -79.31147 #> 769  152.3463238 135   17.34632380 3.714752e-02 8.889146e-02 56.97080 -79.23997 #> 770  156.4068069 135   21.40680688 5.657424e-02 1.332158e-01 56.94041 -79.16714 #> 771  118.6563278 135  -16.34367215 3.297724e-02 7.918495e-02 57.76068 -81.28338 #> 772  104.9067054 135  -30.09329462 1.118033e-01 2.514115e-01 57.64533 -80.98443 #> 773  117.1549833 135  -17.84501666 3.931415e-02 9.390749e-02 57.52865 -80.68828 #> 774  102.9943158 135  -32.00568423 1.264647e-01 2.809036e-01 57.58195 -80.90056 #> 775  108.0573327 135  -26.94266727 8.961819e-02 2.052984e-01 57.55250 -80.82522 #> 776  147.0950779 135   12.09507791 1.806061e-02 4.390473e-02 57.05120 -79.58188 #> 777  148.1547373 135   13.15473726 2.136384e-02 5.179342e-02 57.02160 -79.51010 #> 778  152.2142822 135   17.21428217 3.658414e-02 8.758413e-02 56.99195 -79.43844 #> 779  139.2749199 135    4.27491989 2.256165e-03 5.556543e-03 56.96165 -79.36544 #> 780  147.3340093 135   12.33400934 1.878121e-02 4.562936e-02 56.93128 -79.29495 #> 781  149.3932081 135   14.39320815 2.557586e-02 6.178957e-02 56.90151 -79.22362 #> 782  141.1427466 135    6.14274663 4.658437e-03 1.145026e-02 56.98204 -79.56481 #> 783  148.2022104 135   13.20221038 2.151832e-02 5.216127e-02 56.95241 -79.49321 #> 784  151.2615601 135   16.26156013 3.264671e-02 7.841272e-02 56.92273 -79.42172 #> 785  142.3219992 135    7.32199919 6.618725e-03 1.624234e-02 56.89240 -79.34891 #> 786  139.9866168 135    4.98661677 3.069919e-03 7.555616e-03 57.03710 -79.77254 #> 787  131.1310545 135   -3.86894548 1.847992e-03 4.552812e-03 56.94313 -79.61852 #> 788  137.1904385 135    2.19043851 5.923483e-04 1.460849e-03 56.91351 -79.54698 #> 789  141.2497088 135    6.24970880 4.822081e-03 1.185090e-02 56.88384 -79.47555 #> 790  138.3067035 135    3.30670353 1.349912e-03 3.327078e-03 57.32264 -80.62912 #> 791  154.5520854 135   19.55208538 4.719556e-02 1.119998e-01 57.20490 -80.33468 #> 792   88.7943667 135  -46.20563333 2.635754e-01 5.210361e-01 57.08711 -80.04355 #> 793  117.9161376 135  -17.08386245 3.603190e-02 8.630147e-02 57.41793 -81.17914 #> 794  136.3356050 135    1.33560500 2.202272e-04 5.432905e-04 57.17456 -80.71694 #> 795  105.5784791 135  -29.42152089 1.068674e-01 2.413079e-01 57.05800 -80.42432 #> 796  124.9878166 135  -10.01218337 1.237578e-02 3.022646e-02 56.81220 -79.97115 #> 797  135.3148559 135    0.31485592 1.223880e-05 3.019771e-05 57.09583 -80.82291 #> 798  113.4366992 135  -21.56330076 5.740444e-02 1.350775e-01 57.03704 -80.67638 #> 799  106.5857165 135  -28.41428345 9.967549e-02 2.264270e-01 58.26511 -84.13135 #> 800  132.3252019 135   -2.67479808 8.832771e-04 2.177816e-03 56.86831 -81.01431 #> 801  142.8035259 135    7.80352590 7.517903e-03 1.843527e-02 56.63462 -80.43555 #> 802    1.9675579 135 -133.03244212 2.184893e+00 5.343134e-01 57.06287 -84.71575 #> 803  158.9115097 135   23.91150966 7.058769e-02 1.642885e-01 56.18412 -82.33958 #> 804  133.0172261 135   -1.98277392 4.853571e-04 1.197093e-03 57.66836 -74.31364 #> 805  165.6968875 135   30.69688750 1.163332e-01 2.606064e-01 56.56244 -77.36122 #> 806  154.8507037 135   19.85070374 4.864820e-02 1.153081e-01 56.91794 -78.45641 #> 807  163.5616802 135   28.56168021 1.007123e-01 2.285840e-01 56.88395 -78.96153 #> 808  152.7976048 135   17.79760485 3.910552e-02 9.342529e-02 56.76277 -78.67765 #> 809  142.5099155 135    7.50991551 6.962819e-03 1.708191e-02 56.72915 -79.18207 #> 810  153.7460275 135   18.74602751 4.338439e-02 1.032811e-01 56.60813 -78.89679 #> 811  145.4618065 135   10.46180652 1.351227e-02 3.297131e-02 56.57299 -79.39861 #> 812  122.9276078 135  -12.07239223 1.799292e-02 4.374263e-02 56.33250 -78.83369 #> 813  144.3489474 135    9.34894744 1.079047e-02 2.638897e-02 58.10939 -73.44027 #> 814  140.3381412 135    5.33814116 3.517994e-03 8.655215e-03 57.82515 -73.67573 #> 815  131.8196589 135   -3.18034106 1.248712e-03 3.077911e-03 56.71654 -83.65035 #> 816  131.8483695 135   -3.15163047 1.226268e-03 3.022646e-03 56.72451 -83.59491 #> 817  132.9470300 135   -2.05296998 5.203316e-04 1.283317e-03 56.67760 -83.47687 #> 818  129.4221861 135   -5.57781389 3.840989e-03 9.447358e-03 59.08162 -85.15078 #> 819  137.4232728 135    2.42327281 7.249693e-04 1.787724e-03 59.08819 -85.14233 #> 820  140.7098934 135    5.70989341 4.025047e-03 9.898572e-03 56.21051 -84.33240 #> 821  120.5055724 135  -14.49442761 2.593684e-02 6.264300e-02 56.80567 -66.04239 #> 822  141.1288527 135    6.12885267 4.637387e-03 1.139872e-02 55.15639 -71.02889 #> 823  133.6752586 135   -1.32474136 2.166592e-04 5.344899e-04 55.47388 -55.14887 #> 824  133.3017844 135   -1.69821556 3.560415e-04 8.782399e-04 54.29861 -61.20434 #> 825  139.3421132 135    4.34211316 2.327648e-03 5.732254e-03 54.22160 -61.17556 #> 826  160.4664927 135   25.46649268 8.006694e-02 1.848855e-01 55.57531 -55.44158 #> 827  172.4437887 135   37.44378875 1.730910e-01 3.696431e-01 55.48077 -55.51858 #> 828  154.0732789 135   19.07327895 4.491234e-02 1.067833e-01 56.17762 -83.75397 #> 829  134.7334701 135   -0.26652992 8.770148e-06 2.163932e-05 56.90182 -67.23156 #> 830   37.3310081 135  -97.66899193 1.177683e+00 9.821911e-01 54.71560 -83.01469 #> 831  144.9985168 135    9.99851679 1.234202e-02 3.014484e-02 55.63986 -74.25887 #> 832  145.6552048 135   10.65520481 1.401647e-02 3.418739e-02 55.14823 -78.62019 #> 833  133.0113248 135   -1.98867524 4.882505e-04 1.204226e-03 56.69361 -86.67870 #> 834  148.4256404 135   13.42564040 2.225282e-02 5.390904e-02 58.26878 -74.78953 #> 835  152.1441896 135   17.14418960 3.628682e-02 8.689371e-02 56.76836 -89.70109 #> 836   88.2634775 135  -46.73652253 2.696670e-01 5.302895e-01 57.03610 -80.96207 #> 837  161.1839314 135   26.18393143 8.464176e-02 1.947053e-01 57.98359 -85.06064 #> 838  135.5585167 135    0.55851674 3.851123e-05 9.501964e-05 56.70929 -89.07864 #> 839  172.1713155 135   37.17131546 1.705811e-01 3.650580e-01 56.70539 -86.40026 #> 840  101.2397311 135  -33.76026888 1.407106e-01 3.088239e-01 55.44056 -57.48097 #> 841  102.2987499 135  -32.70125008 1.320212e-01 2.918794e-01 55.47714 -57.36877 #> 842  112.2651833 135  -22.73481665 6.381134e-02 1.493564e-01 55.57377 -57.37907 #> 843  111.2924729 135  -23.70752713 6.938850e-02 1.616587e-01 55.47158 -57.38146 #> 844  111.1236120 135  -23.87638797 7.038048e-02 1.638345e-01 55.65423 -57.57096 #> 845  122.1774410 135  -12.82255898 2.029852e-02 4.925400e-02 55.60685 -57.50574 #> 846  123.1908204 135  -11.80917960 1.721688e-02 4.188280e-02 55.53952 -57.51495 #> 847  123.1934885 135  -11.80651146 1.720910e-02 4.186415e-02 55.52605 -57.51679 #> 848  135.5053390 135    0.50533903 3.152686e-05 7.778738e-05 56.20777 -58.30704 #> 849  131.3243847 135   -3.67561530 1.667919e-03 4.109784e-03 56.23086 -60.19572 #> 850  136.0158685 135    1.01586846 1.274060e-04 3.143288e-04 55.43386 -54.61773 #> 851  136.0985756 135    1.09857555 1.489961e-04 3.675880e-04 56.24513 -58.94243 #> 852  133.4836488 135   -1.51635116 2.838668e-04 7.002497e-04 56.23686 -58.32794 #> 853  132.4055830 135   -2.59441700 8.309876e-04 2.048979e-03 55.63153 -55.51540 #> 854  127.5865054 135   -7.41349455 6.785173e-03 1.664852e-02 56.87796 -62.64751 #> 855  132.3444755 135   -2.65552452 8.705939e-04 2.146567e-03 56.32388 -61.72866 #> 856  136.6223926 135    1.62239261 3.249577e-04 8.015868e-04 55.88376 -56.66311 #> 857  134.2394793 135   -0.76052066 7.140638e-05 1.761778e-04 56.44569 -61.83298 #> 858  134.2675435 135   -0.73245648 6.623364e-05 1.634161e-04 56.40375 -61.81019 #> 859  131.2051355 135   -3.79486447 1.777901e-03 4.380383e-03 56.77283 -64.93163 #> 860  132.3785765 135   -2.62142352 8.483779e-04 2.091828e-03 55.51806 -55.60761 #> 861  135.3243847 135    0.32438470 1.299079e-05 3.205316e-05 56.23086 -60.19572 #> 862  137.4206789 135    2.42067891 7.234181e-04 1.783901e-03 56.20556 -60.05329 #> 863  141.2456506 135    6.24565062 4.815821e-03 1.183557e-02 56.27325 -60.30106 #> 864  138.5405466 135    3.54054662 1.547589e-03 3.813665e-03 54.74443 -65.56809 #> 865  141.5451883 135    6.54518833 5.288826e-03 1.299299e-02 54.76983 -65.54565 #> 866  147.3302869 135   12.33028693 1.876987e-02 4.560225e-02 56.23659 -60.18329 #> 867  144.7143932 135    9.71439320 1.165055e-02 2.847217e-02 57.54312 -70.06242 #> 868  148.2125446 135   13.21254465 2.155202e-02 5.224151e-02 56.25800 -60.36220 #> 869  142.4151947 135    7.41519465 6.788285e-03 1.665612e-02 56.82339 -69.42184 #> 870  151.1294181 135   16.12941813 3.211829e-02 7.717724e-02 56.26196 -60.49419 #> 871  149.1199160 135   14.11991603 2.461383e-02 5.951264e-02 57.03739 -69.75615 #> 872  150.1557130 135   15.15571299 2.835749e-02 6.835254e-02 57.18282 -69.59892 #> 873  162.4778253 135   27.47782532 9.321369e-02 2.128948e-01 57.89673 -73.39666 #> 874  125.7597590 135   -9.24024102 1.054099e-02 2.578415e-02 56.59113 -73.93354 #> 875  137.7494133 135    2.74941332 9.332437e-04 2.300920e-03 55.25910 -80.07183 #> 876   69.0268160 135  -65.97318402 5.373409e-01 8.342173e-01 64.12585 -76.48773 #> 877  150.2835345 135   15.28353448 2.883783e-02 6.948277e-02 64.32023 -81.60456 #> 878   46.7758876 135  -88.22411239 9.609252e-01 9.990396e-01 65.11779 -77.36184 #> 879   77.8826330 135  -57.11736704 4.027646e-01 7.052380e-01 63.80396 -78.40840 #> 880  134.1428456 135   -0.85715436 9.070538e-05 2.237899e-04 64.30530 -81.81712 #> 881  125.0696160 135   -9.93038398 1.217439e-02 2.973951e-02 57.93508 -77.23450 #> 882  138.9089205 135    3.90892050 1.886378e-03 4.647234e-03 58.26471 -75.61710 #> 883  161.5541617 135   26.55416172 8.705228e-02 1.998480e-01 58.16851 -76.26266 #> 884  170.1338664 135   35.13386645 1.523937e-01 3.311873e-01 58.15352 -76.94776 #> 885  150.1576805 135   15.15768054 2.836485e-02 6.836987e-02 58.17292 -76.89338 #> 886  142.8433048 135    7.84330480 7.594744e-03 1.862252e-02 57.57067 -84.40960 #> 887  154.3077850 135   19.30778500 4.602353e-02 1.093245e-01 56.83090 -82.73077 #> 888  169.9932136 135   34.99321359 1.511759e-01 3.288786e-01 56.17355 -83.89258 #> 889  169.3122386 135   34.31223860 1.453493e-01 3.177605e-01 56.30605 -83.22808 #> 890  176.7794039 135   41.77940393 2.154961e-01 4.439083e-01 56.51318 -83.91689 #> 891  125.5664779 135   -9.43352214 1.098659e-02 2.686424e-02 56.66409 -84.12255 #> 892  143.4255285 135    8.42552852 8.764140e-03 2.146922e-02 58.24140 -78.00652 #> 893  179.3401916 135   44.34019163 2.427225e-01 4.884852e-01 57.08923 -85.72226 #> 894  144.7672081 135    9.76720809 1.177757e-02 2.877959e-02 57.02811 -86.73046 #> 895  139.9675446 135    4.96754456 3.046481e-03 7.498076e-03 57.03511 -88.04221 #> 896   40.7566811 135  -94.24331887 1.096519e+00 9.945252e-01 57.44841 -89.57113 #> 897  147.6091329 135   12.60913288 1.962842e-02 4.765437e-02 57.38081 -89.88863 #> 898  119.1653933 135  -15.83460675 3.095491e-02 7.445333e-02 58.92379 -84.14088 #> 899  148.4323438 135   13.43234375 2.227504e-02 5.396190e-02 57.02148 -87.29001 #> 900  134.4983598 135   -0.50164018 3.106702e-05 7.665284e-05 56.66973 -85.89335 #> 901  153.7154808 135   18.71548081 4.324311e-02 1.029569e-01 58.42490 -77.38670 #> 902  169.9012412 135   34.90124122 1.503823e-01 3.273712e-01 60.06367 -81.87859 #> 903  178.8945169 135   43.89451691 2.378677e-01 4.807105e-01 60.55123 -78.37511 #> 904   90.8280555 135  -44.17194452 2.408840e-01 4.855497e-01 64.51234 -70.76068 #> 905  154.9538626 135   19.95386259 4.915514e-02 1.164607e-01 55.96354 -84.16566 #> 906  154.0446492 135   19.04464918 4.477761e-02 1.064749e-01 56.09822 -83.87993 #> 907  151.9599475 135   16.95994754 3.551109e-02 8.509072e-02 57.00936 -78.19850 #> 908  137.3787590 135    2.37875896 6.985795e-04 1.722686e-03 56.57524 -79.53439 #> 909  139.3440555 135    4.34405548 2.329731e-03 5.737374e-03 56.24226 -58.54945 #> 910  129.1621316 135   -5.83786844 4.207495e-03 1.034570e-02 56.21496 -58.85498 #> 911  153.4879333 135   18.48793327 4.219798e-02 1.005555e-01 56.09873 -56.78170 #> 912  131.5010083 135   -3.49899165 1.511474e-03 3.724780e-03 56.79256 -64.44255 #> 913  155.5155928 135   20.51559283 5.196167e-02 1.228238e-01 56.81308 -64.40704 #> 914  168.6935026 135   33.69350257 1.401546e-01 3.077477e-01 55.86374 -58.16760 #> 915  130.6308180 135   -4.36918198 2.356759e-03 5.803808e-03 56.79924 -62.62002 #> 916    5.4099837 135 -129.59001635 2.073281e+00 5.938618e-01 56.18489 -58.47117 #> 917  165.8527351 135   30.85273513 1.175174e-01 2.629979e-01 55.33252 -54.92247 #> 918  141.5503026 135    6.55030262 5.297094e-03 1.301321e-02 56.81247 -64.35144 #> 919  120.7092748 135  -14.29072522 2.521294e-02 6.093105e-02 56.78580 -62.50140 #> 920  132.9335469 135   -2.06645315 5.271887e-04 1.300222e-03 55.12421 -54.87874 #> 921  179.8567715 135   44.85677153 2.484111e-01 4.975002e-01 56.60301 -62.36457 #> 922  137.3444931 135    2.34449306 6.785985e-04 1.673440e-03 56.38396 -61.69658 #> 923  125.1636039 135   -9.83639607 1.194502e-02 2.918474e-02 56.82128 -63.35880 #> 924  135.6442335 135    0.64423345 5.123910e-05 1.264221e-04 56.37673 -61.21692 #> 925  126.3088235 135   -8.69117655 9.325500e-03 2.283381e-02 56.82152 -63.12512 #> 926  134.3147584 135   -0.68524163 5.796989e-05 1.430281e-04 56.36218 -61.75621 #> 927  116.2234822 135  -18.77651775 4.352563e-02 1.036052e-01 56.18077 -63.62364 #> 928  136.1189938 135    1.11899382 1.545861e-04 3.813774e-04 56.15071 -63.81053 #> 929  139.2016713 135    4.20167131 2.179511e-03 5.368096e-03 56.16558 -63.66765 #> 930  110.0702284 135  -24.92977162 7.672759e-02 1.776682e-01 56.14786 -63.89150 #> 931  130.1388466 135   -4.86115338 2.917384e-03 7.181102e-03 56.11519 -63.79830 #> 932  125.1369029 135   -9.86309709 1.200996e-02 2.934183e-02 56.13731 -63.78897 #> 933  139.9820253 135    4.98202531 3.064269e-03 7.541744e-03 55.39186 -54.68959 #> 934  124.3466870 135  -10.65331305 1.401149e-02 3.417539e-02 56.34559 -61.71351 #> 935  126.1509269 135   -8.84907310 9.667419e-03 2.366434e-02 56.13074 -63.76985 #> 936  132.0299833 135   -2.97001669 1.089012e-03 2.684624e-03 56.77720 -63.59892 #> 937  127.4407540 135   -7.55924598 7.054593e-03 1.730575e-02 55.37959 -55.56674 #> 938  133.2953495 135   -1.70465048 3.587448e-04 8.849063e-04 56.81065 -63.15291 #> 939  145.0422872 135   10.04228724 1.245031e-02 3.040663e-02 56.45815 -62.14437 #> 940  132.4278335 135   -2.57216650 8.167951e-04 2.014008e-03 57.89129 -73.48102 #> 941  145.4517202 135   10.45172025 1.348623e-02 3.290847e-02 57.87805 -73.45281 #> 942  129.4123560 135   -5.58764404 3.854539e-03 9.480581e-03 57.89158 -73.50563 #> 943  129.4158822 135   -5.58411777 3.849675e-03 9.468656e-03 57.89790 -73.49513 #> 944  127.9821078 135   -7.01789221 6.080347e-03 1.492778e-02 56.84204 -68.48810 #> 945  108.4057017 135  -26.59429834 8.731564e-02 2.004085e-01 56.16063 -68.23988 #> 946  145.5435058 135   10.54350575 1.372414e-02 3.348244e-02 57.81872 -73.35073 #> 947  134.2199393 135   -0.78006068 7.512280e-05 1.853466e-04 59.07315 -88.61557 #> 948  140.3532355 135    5.35323551 3.537917e-03 8.704090e-03 55.72991 -57.16583 #> 949  171.3643795 135   36.36437953 1.632553e-01 3.515522e-01 57.02470 -69.36846 #> 950  120.8954357 135  -14.10456425 2.456034e-02 5.938592e-02 57.29141 -78.06290 #> 951  131.7738716 135   -3.22612844 1.284927e-03 3.167080e-03 56.35736 -61.01807 #> 952  135.8046333 135    0.80463335 7.993023e-05 1.972070e-04 56.40538 -60.94343 #> 953  156.1646029 135   21.16460288 5.530129e-02 1.303560e-01 58.69224 -78.03238 #> 954  138.7544910 135    3.75449099 1.740272e-03 4.287806e-03 55.38786 -55.05756 #> 955  135.5147720 135    0.51477202 3.271484e-05 8.071847e-05 54.81188 -55.68780 #> 956  154.2465726 135   19.24657255 4.573217e-02 1.086587e-01 58.19320 -75.13568 #> 957  141.7471734 135    6.74717335 5.620290e-03 1.380353e-02 56.13390 -57.95377 #> 958  155.8502122 135   20.85021220 5.367054e-02 1.266834e-01 55.96903 -57.86564 #> 959  142.9477381 135    7.94773811 7.798338e-03 1.911853e-02 55.89593 -57.74277 #> 960  132.6356572 135   -2.36434284 6.901379e-04 1.701881e-03 56.70981 -67.51232 #> 961  132.3168007 135   -2.68319935 8.888344e-04 2.191508e-03 57.01933 -66.21573 #> 962  155.2867319 135   20.28673190 5.080883e-02 1.202137e-01 56.88700 -67.96459 #> 963  134.5458303 135   -0.45416975 2.546545e-05 6.283217e-05 56.88909 -67.54345 #> 964  121.5410300 135  -13.45896997 2.236344e-02 5.417209e-02 57.86991 -73.31571 #> 965  139.7680658 135    4.76806581 2.806722e-03 6.909338e-03 58.70678 -81.81793 #> 966  123.7680658 135  -11.23193419 1.557486e-02 3.793966e-02 58.70678 -81.81793 #> 967  131.7680658 135   -3.23193419 1.289555e-03 3.178477e-03 58.70678 -81.81793 #> 968  132.0587958 135   -2.94120415 1.067985e-03 2.632835e-03 55.33412 -54.58995 #> 969  148.6398589 135   13.63985895 2.296861e-02 5.561023e-02 55.30925 -55.27544 #> 970  131.3690211 135   -3.63097886 1.627655e-03 4.010705e-03 56.34177 -60.06756 #> 971  128.3158319 135   -6.68416806 5.515815e-03 1.354810e-02 56.81410 -66.34414 #> 972  144.5050541 135    9.50505406 1.115383e-02 2.726944e-02 57.97290 -73.29492 #> 973  129.6362051 135   -5.36379487 3.551888e-03 8.738361e-03 57.81681 -73.20329 #> 974  123.0151865 135  -11.98481352 1.773281e-02 4.311953e-02 57.73173 -74.26753 #> 975  134.0204322 135   -0.97956783 1.184634e-04 2.922681e-04 57.71246 -74.27409 #> 976  158.1286589 135   23.12865885 6.604134e-02 1.542896e-01 57.77303 -72.44528 #> 977  122.7156136 135  -12.28438641 1.863039e-02 4.526857e-02 57.76395 -73.11575 #> 978  125.1243573 135   -9.87564266 1.204053e-02 2.941578e-02 57.79232 -72.43785 #> 979  125.0084892 135   -9.99151080 1.232473e-02 3.010304e-02 57.71902 -74.28822 #> 980  122.0084892 135  -12.99151080 2.083696e-02 5.053805e-02 57.71902 -74.28822 #> 981  107.0816041 135  -27.91839593 9.622677e-02 2.192239e-01 57.71159 -74.17621 #> 982  137.5578600 135    2.55785999 8.077343e-04 1.991681e-03 56.14174 -58.25419 #> 983  124.9360661 135  -10.06393389 1.250405e-02 3.053650e-02 57.66879 -74.44419 #> 984  154.3321603 135   19.33216033 4.613981e-02 1.095902e-01 55.38817 -55.73824 #> 985  133.8888327 135   -1.11116733 1.524312e-04 3.760618e-04 57.77183 -76.05062 #> 986  127.8472953 135   -7.15270474 6.316196e-03 1.550380e-02 57.74816 -72.91597 #> 987  114.9988411 135  -20.00115888 4.938844e-02 1.169908e-01 56.77692 -68.50369 #> 988  122.4006467 135  -12.59935332 1.959799e-02 4.758167e-02 58.03880 -73.41169 #> 989  137.0083055 135    2.00830548 4.979371e-04 1.228108e-03 55.77608 -56.09098 #> 990  141.8940389 135    6.89403889 5.867626e-03 1.440805e-02 55.78809 -56.26929 #> 991  139.9299846 135    4.92998456 3.000586e-03 7.385396e-03 55.71030 -56.24588 #> 992  147.8709554 135   12.87095543 2.045204e-02 4.962022e-02 56.04682 -56.19149 #> 993  137.7214355 135    2.72143546 9.143470e-04 2.254365e-03 55.87461 -56.50811 #> 994  147.7975999 135   12.79759993 2.021958e-02 4.906564e-02 55.78400 -56.42613 #> 995  130.7555118 135   -4.24448819 2.224158e-03 5.477858e-03 55.81035 -56.48206 #> 996  127.7846268 135   -7.21537318 6.427359e-03 1.577522e-02 55.77300 -56.45189 #> 997  135.5769611 135    0.57696115 4.109681e-05 1.013989e-04 54.96253 -53.90542 #> 998  162.5882622 135   27.58826222 9.396447e-02 2.144750e-01 56.03978 -58.25382 #> 999  114.7927893 135  -20.20721070 5.041128e-02 1.193124e-01 57.76222 -72.99300 #> 1000 136.7296402 135    1.72964021 3.693402e-04 9.110335e-04 56.04835 -59.63357 #> 1001 151.2181165 135   16.21811651 3.247251e-02 7.800555e-02 63.36906 -79.76387 #> 1002 136.1790479 135    1.17904790 1.716239e-04 4.234053e-04 56.40087 -61.95456 #> 1003 125.9818966 135   -9.01810339 1.004027e-02 2.456947e-02 57.76406 -72.68772 #> 1004 133.9478809 135   -1.05211907 1.366611e-04 3.371597e-04 56.21511 -57.59359 #> 1005 153.7563965 135   18.75639650 4.343240e-02 1.033913e-01 56.12605 -57.94266 #> 1006 148.7802385 135   13.78023847 2.344382e-02 5.673852e-02 56.05096 -57.93973 #> 1007 137.6983002 135    2.69830020 8.988672e-04 2.216227e-03 56.24316 -57.98054 #> 1008 132.9097799 135   -2.09022014 5.393852e-04 1.330289e-03 56.18167 -57.67033 #> 1009 117.9000919 135  -17.09990813 3.609961e-02 8.645881e-02 59.26427 -85.78037 #> 1010 125.7064391 135   -9.29356087 1.066300e-02 2.607996e-02 56.85890 -62.46559 #> 1011 129.6769980 135   -5.32300196 3.498068e-03 8.606333e-03 56.70093 -62.60015 #> 1012 127.5260537 135   -7.47394634 6.896281e-03 1.691960e-02 56.66921 -66.09274 #> 1013 132.5275701 135   -2.47242994 7.546802e-04 1.860943e-03 56.74240 -62.81759 #> 1014 121.2410001 135  -13.75899987 2.337161e-02 5.656714e-02 55.88424 -57.27609 #> 1015 141.0373409 135    6.03734090 4.499936e-03 1.106212e-02 56.03243 -57.53516 #> 1016 120.0531564 135  -14.94684357 2.758125e-02 6.652417e-02 56.64067 -84.99982 #> 1017 128.0788970 135   -6.92110297 5.913786e-03 1.452085e-02 58.76343 -89.18186 #> 1018 122.8951716 135  -12.10482845 1.808974e-02 4.397449e-02 55.37109 -61.33220 #> 1019 132.2786481 135   -2.72135187 9.142909e-04 2.254226e-03 57.45163 -69.21790 #> 1020 134.3850008 135   -0.61499916 4.669432e-05 1.152092e-04 56.63541 -66.34227 #> 1021 132.6142001 135   -2.38579992 7.027211e-04 1.732893e-03 55.48442 -55.24267 #> 1022 110.7320878 135  -24.26791222 7.270760e-02 1.689242e-01 57.73801 -73.10888 #> 1023 137.2941255 135    2.29412553 6.497546e-04 1.602349e-03 55.99354 -57.14060 #> 1024 142.6763030 135    7.67630302 7.274769e-03 1.784263e-02 58.11952 -74.50744 #> 1025 138.0476568 135    3.04765677 1.146693e-03 2.826684e-03 57.70568 -74.23550 #> 1026 136.2490194 135    1.24901939 1.925987e-04 4.751430e-04 57.36361 -69.32531 #> 1027 127.8807933 135   -7.11920669 6.257173e-03 1.535967e-02 55.40388 -58.07975 #> 1028 140.0854715 135    5.08547152 3.192842e-03 7.857356e-03 55.22268 -57.83083 #> 1029 128.8986836 135   -6.10131638 4.595810e-03 1.129691e-02 55.38814 -58.05801 #> 1030 137.9951946 135    2.99519463 1.107554e-03 2.730293e-03 55.47699 -54.63306 #> 1031 131.9444389 135   -3.05556110 1.152649e-03 2.841351e-03 55.46624 -54.71911 #> 1032 135.0996499 135    0.09964989 1.225938e-06 3.024878e-06 55.91876 -57.48763 #> 1033 146.0064076 135   11.00640762 1.495568e-02 3.644998e-02 54.03163 -61.83075 #> 1034 142.3804566 135    7.38045655 6.724832e-03 1.650129e-02 56.75114 -84.34509 #> 1035 118.2919555 135  -16.70804453 3.446404e-02 8.265337e-02 55.17108 -57.51863 #> 1036 164.5518806 135   29.55188056 1.078165e-01 2.432575e-01 54.28582 -76.06196 #> 1037 168.2758790 135   33.27587895 1.367017e-01 3.010398e-01 55.46323 -55.79668 #> 1038 135.1210032 135    0.12100316 1.807625e-06 4.460130e-06 56.18361 -58.93639 #> 1039 136.7915326 135    1.79153258 3.962456e-04 9.773781e-04 56.27367 -59.42203 #> 1040 128.9659863 135   -6.03401369 4.494978e-03 1.104997e-02 56.38651 -59.08602 #> 1041 167.4960101 135   32.49601009 1.303692e-01 2.886278e-01 59.50225 -84.60643 #> 1042 157.8660228 135   22.86602284 6.455000e-02 1.509926e-01 56.16947 -80.75203 #> 1043 148.6334033 135   13.63340334 2.294687e-02 5.555860e-02 56.97787 -68.96384 #> 1044 138.4052598 135    3.40525978 1.431580e-03 3.528124e-03 55.58568 -55.53562 #> 1045 138.6970308 135    3.69703078 1.687412e-03 4.157747e-03 56.66862 -59.37676 #> 1046 114.6504765 135  -20.34952346 5.112384e-02 1.209274e-01 56.68864 -72.39795 #> 1047 137.1314498 135    2.13144979 5.608739e-04 1.383262e-03 56.79347 -89.69384 #> 1048  12.5912858 135 -122.40871417 1.849863e+00 7.127520e-01 54.28513 -75.99432 #> 1049 173.2353206 135   38.23532061 1.804864e-01 3.830282e-01 58.25619 -81.49840 #> 1050 164.2789589 135   29.27895886 1.058343e-01 2.391818e-01 57.29167 -69.32586 #> 1051 174.1143224 135   39.11432242 1.888803e-01 3.979967e-01 57.26171 -69.61196 #> 1052 158.3978384 135   23.39783838 6.758751e-02 1.576989e-01 57.32377 -69.11247 #> 1053 131.8848958 135   -3.11510423 1.198009e-03 2.953058e-03 57.22702 -78.13518 #> 1054 149.9545673 135   14.95456726 2.760976e-02 6.659137e-02 61.87966 -66.69981 #> 1055 171.7891116 135   36.78911163 1.670912e-01 3.586470e-01 55.63598 -71.26641 #> 1056 145.4424930 135   10.44249299 1.346243e-02 3.285104e-02 55.58594 -55.47562 #> 1057 132.9563558 135   -2.04364424 5.156150e-04 1.271690e-03 56.06327 -59.26042 #> 1058 125.4364876 135   -9.56351236 1.129145e-02 2.760277e-02 56.80978 -62.92647 #> 1059 145.9702080 135   10.97020796 1.485746e-02 3.621354e-02 56.85819 -88.23076 #> 1060 160.0134053 135   25.01340529 7.724326e-02 1.787855e-01 57.25393 -69.78027 #> 1061 149.0245853 135   14.02458530 2.428259e-02 5.872781e-02 57.24698 -69.76697 #> 1062 140.9715018 135    5.97150185 4.402325e-03 1.082303e-02 57.33276 -69.79377 #> 1063 142.1743545 135    7.17435453 6.354489e-03 1.559730e-02 57.23307 -69.53454 #> 1064 153.0669136 135   18.06691361 4.029795e-02 9.617906e-02 57.30888 -69.65623 #> 1065 137.9083431 135    2.90834306 1.044254e-03 2.574382e-03 55.51204 -54.75803 #> 1066 159.3824303 135   24.38243027 7.339542e-02 1.704246e-01 61.83606 -73.53874 #> 1067 147.9083750 135   12.90837500 2.057113e-02 4.990425e-02 55.87734 -56.20675 #> 1068 132.3225004 135   -2.67749965 8.850623e-04 2.182214e-03 55.94980 -78.50166 #> 1069  75.3082107 135  -59.69178933 4.398901e-01 7.453270e-01 56.40429 -76.47857 #> 1070  77.2414367 135  -57.75856328 4.118582e-01 7.153904e-01 56.38523 -76.60485 #> 1071  96.3089753 135  -38.69102470 1.848142e-01 3.907755e-01 56.28410 -76.57500 #> 1072   6.4540350 135 -128.54596496 2.040008e+00 6.116937e-01 56.20402 -79.73652 #> 1073   5.0192754 135 -129.98072461 2.085801e+00 5.871554e-01 56.61501 -76.78470 #> 1074 152.3615115 135   17.36151147 3.721260e-02 8.904239e-02 56.56802 -84.55931 #> 1075 124.3169967 135  -10.68300326 1.408970e-02 3.436393e-02 57.19209 -72.57189 #> 1076 151.8432550 135   16.84325500 3.502410e-02 8.395763e-02 59.50635 -82.50502 #> 1077 138.9685878 135    3.96858778 1.944406e-03 4.789962e-03 55.23179 -54.77762 #> 1078 128.4191462 135   -6.58085382 5.346622e-03 1.313435e-02 59.83234 -87.47639 #> 1079 117.4191462 135  -17.58085382 3.815882e-02 9.123502e-02 59.83234 -87.47639 #> 1080 141.9988253 135    6.99882527 6.047352e-03 1.484718e-02 62.17127 -73.83609 #> 1081 163.0604081 135   28.06040809 9.720821e-02 2.212782e-01 56.84711 -89.75100 #> 1082 147.0889707 135   12.08897065 1.804237e-02 4.386107e-02 56.83873 -89.71314 #> 1083 170.2057028 135   35.20570276 1.530175e-01 3.323680e-01 56.70056 -89.67546 #> 1084 160.1527524 135   25.15275238 7.810629e-02 1.806531e-01 56.83775 -89.60849 #> 1085 155.0668466 135   20.06684665 4.971337e-02 1.177288e-01 56.83852 -89.75006 #> 1086 143.1591058 135    8.15910581 8.218643e-03 2.014198e-02 56.82519 -89.61213 #> 1087 157.1992548 135   22.19925481 6.084036e-02 1.427546e-01 56.70257 -89.68392 #> 1088 160.0874041 135   25.08740412 7.770097e-02 1.797763e-01 56.80759 -89.75098 #> 1089 140.1552047 135    5.15520468 3.281004e-03 8.073731e-03 56.82547 -89.61828 #> 1090 145.1510148 135   10.15101484 1.272137e-02 3.106168e-02 56.80067 -89.65324 #> 1091 144.1238742 135    9.12387418 1.027717e-02 2.514428e-02 56.81580 -89.68118 #> 1092 141.1007024 135    6.10070243 4.594885e-03 1.129464e-02 56.84055 -89.69163 #> 1093 147.1616628 135   12.16166282 1.826001e-02 4.438217e-02 56.82149 -89.61207 #> 1094 146.1212841 135   11.12128413 1.526950e-02 3.720519e-02 56.81686 -89.68427 #> 1095 139.1367113 135    4.13671126 2.112640e-03 5.203678e-03 56.79992 -89.67782 #> 1096 164.0577926 135   29.05779256 1.042414e-01 2.358963e-01 56.84553 -89.75712 #> 1097 152.0939675 135   17.09396749 3.607453e-02 8.640054e-02 56.81549 -89.73114 #> 1098 117.1287868 135  -17.87121317 3.942966e-02 9.417440e-02 56.78662 -89.70602 #> 1099 160.1837978 135   25.18379776 7.829922e-02 1.810702e-01 56.70962 -89.70166 #> 1100 146.1460460 135   11.14604599 1.533757e-02 3.736896e-02 56.82127 -89.63821 #> 1101 150.1563649 135   15.15636487 2.835993e-02 6.835828e-02 56.81372 -89.62962 #> 1102  39.2164263 135  -95.78357370 1.132653e+00 9.898452e-01 56.82749 -89.51447 #> 1103 152.1476513 135   17.14765135 3.630147e-02 8.692775e-02 56.84648 -89.60710 #> 1104 135.1227582 135    0.12275819 1.860441e-06 4.590447e-06 56.83349 -89.66304 #> 1105 140.1237052 135    5.12370517 3.241031e-03 7.975630e-03 56.79864 -89.70085 #> 1106 119.1265119 135  -15.87348814 3.110711e-02 7.481000e-02 56.81936 -89.67278 #> 1107 134.1680698 135   -0.83193022 8.544542e-05 2.108133e-04 56.81355 -89.61040 #> 1108 139.1552940 135    4.15529403 2.131663e-03 5.250452e-03 56.83273 -89.60994 #> 1109 167.0891010 135   32.08910103 1.271247e-01 2.822132e-01 56.85259 -89.69725 #> 1110 136.1197857 135    1.11978569 1.548049e-04 3.819172e-04 56.79628 -89.71003 #> 1111 130.1489144 135   -4.85108562 2.905313e-03 7.151458e-03 56.84331 -89.60858 #> 1112  36.2164059 135  -98.78359411 1.204716e+00 9.766818e-01 56.82617 -89.51599 #> 1113  27.2164059 135 -107.78359411 1.434235e+00 9.067170e-01 56.82617 -89.51599 #> 1114 153.1576359 135   18.15763585 4.070367e-02 9.711477e-02 56.81121 -89.63035 #> 1115 135.1147696 135    0.11476963 1.626181e-06 4.012436e-06 56.81556 -89.69655 #> 1116 148.0850806 135   13.08508063 2.113819e-02 5.125591e-02 56.84032 -89.71778 #> 1117 125.2392627 135   -9.76073734 1.176197e-02 2.874184e-02 58.51553 -81.24935 #> 1118 148.3092605 135   13.30926050 2.186869e-02 5.299527e-02 58.55505 -81.10110 #> 1119 125.2435291 135   -9.75647091 1.175169e-02 2.871697e-02 58.53503 -81.22434 #> 1120 124.2438828 135  -10.75611724 1.428322e-02 3.483036e-02 58.53118 -81.22738 #> 1121 136.2438828 135    1.24388276 1.910178e-04 4.712435e-04 58.53118 -81.22738 #> 1122 133.2438828 135   -1.75611724 3.807343e-04 9.391301e-04 58.53118 -81.22738 #> 1123 135.2438828 135    0.24388276 7.343062e-06 1.811817e-05 58.53118 -81.22738 #> 1124 131.3092605 135   -3.69073950 1.681674e-03 4.143628e-03 58.55505 -81.10110 #> 1125 150.3092605 135   15.30926050 2.893499e-02 6.971128e-02 58.55505 -81.10110 #> 1126 143.1225002 135    8.12250022 8.145063e-03 1.996287e-02 56.80841 -89.69181 #>          distance #> 1    -2.446541754 #> 2    -2.751949327 #> 3    -2.705483216 #> 4    -3.162091001 #> 5    -4.988116270 #> 6    -6.358817919 #> 7    -6.704567313 #> 8    -4.100073713 #> 9    -5.019177798 #> 10   -4.414001746 #> 11   -4.643374504 #> 12   -2.475414534 #> 13   -3.184963965 #> 14   -0.448039386 #> 15   -2.276737034 #> 16   -1.866688770 #> 17    0.757568934 #> 18    0.651118490 #> 19    0.465936542 #> 20    0.352196872 #> 21    0.004153313 #> 22   -0.277913588 #> 23   -0.033148466 #> 24   -0.110159567 #> 25   -0.112234969 #> 26   -0.038806247 #> 27   -0.446256853 #> 28   -0.135037874 #> 29   -0.445774233 #> 30   -0.396226967 #> 31   -0.125632121 #> 32   -0.064995870 #> 33   -3.284619803 #> 34   -0.146430406 #> 35   -0.100448107 #> 36   -0.167292226 #> 37   -0.167292226 #> 38    0.228084875 #> 39   -1.000315693 #> 40   -0.924050137 #> 41   -0.786588114 #> 42   -0.694827072 #> 43   -3.912959369 #> 44   -0.671545094 #> 45   -0.468256594 #> 46   -0.196096390 #> 47   -0.196096390 #> 48   -0.428067997 #> 49   -0.706293859 #> 50   -0.791048917 #> 51   -0.537254520 #> 52   -0.532692379 #> 53   -0.731808513 #> 54   -0.006451665 #> 55    0.290647883 #> 56    0.233319956 #> 57   -0.148765856 #> 58   -0.135719406 #> 59   -0.135719406 #> 60   -0.035284835 #> 61    0.163779650 #> 62   -0.137561913 #> 63   -0.257877487 #> 64    0.278199564 #> 65    0.329093916 #> 66    0.329093916 #> 67    0.543570338 #> 68   -0.183661915 #> 69   -0.131319731 #> 70   -0.193775533 #> 71   -0.156372000 #> 72   -0.118221591 #> 73   -0.223191312 #> 74   -0.418084101 #> 75   -0.151206114 #> 76   -0.124328316 #> 77   -0.052900400 #> 78   -0.231023141 #> 79   -0.190649070 #> 80   -0.131789791 #> 81   -0.456207496 #> 82   -0.132116716 #> 83    0.228084875 #> 84   -1.263727034 #> 85   -1.000315693 #> 86   -0.770934865 #> 87   -0.924050137 #> 88   -0.797148773 #> 89   -1.399086157 #> 90    0.059682642 #> 91   -0.917666933 #> 92   -0.786588114 #> 93   -0.438309436 #> 94   -0.164724841 #> 95   -0.694827072 #> 96   -0.373232272 #> 97   -0.787381839 #> 98   -0.671545094 #> 99   -0.171161599 #> 100   0.236262830 #> 101  -0.468256594 #> 102  -0.388294551 #> 103  -0.517473138 #> 104  -0.428067997 #> 105  -0.771012821 #> 106  -0.709603388 #> 107   0.307761122 #> 108  -0.791048917 #> 109  -0.731808513 #> 110  -0.431184022 #> 111  -0.006451665 #> 112  -0.002786501 #> 113  -0.782182435 #> 114  -0.799675584 #> 115  -0.629466382 #> 116   0.265503712 #> 117   0.290647883 #> 118   0.014422217 #> 119   0.233319956 #> 120   0.181596494 #> 121  -0.489226270 #> 122  -0.467652245 #> 123   0.312005841 #> 124  -0.749660873 #> 125   0.688885881 #> 126  -0.716494537 #> 127  -0.442165213 #> 128  -0.159068247 #> 129  -0.214670160 #> 130  -0.222461564 #> 131  -0.305597459 #> 132  -0.073623625 #> 133  -0.109189787 #> 134  -0.148765856 #> 135  -0.087953478 #> 136  -0.166137173 #> 137  -0.348115294 #> 138  -0.137814071 #> 139  -0.579898964 #> 140  -0.162414507 #> 141  -0.143105733 #> 142  -0.022106553 #> 143   0.678453252 #> 144  -0.221332700 #> 145   0.231131258 #> 146   0.648208345 #> 147  -0.035284835 #> 148  -0.226723872 #> 149   0.163779650 #> 150  -0.394877477 #> 151  -0.410327372 #> 152  -0.401418000 #> 153  -0.184736877 #> 154   0.587596198 #> 155   0.329709939 #> 156   0.663221881 #> 157   0.177853848 #> 158   0.723776407 #> 159   0.517719667 #> 160   0.641126885 #> 161   0.305915384 #> 162   0.509270020 #> 163   0.491790080 #> 164   0.692373368 #> 165   0.507255914 #> 166   0.579725697 #> 167   0.698603316 #> 168   0.639285134 #> 169   0.634391805 #> 170   0.062965432 #> 171   0.543570338 #> 172   0.006737403 #> 173  -1.014044563 #> 174  -0.440931536 #> 175  -0.123016388 #> 176  -1.266250113 #> 177  -0.151801003 #> 178   0.034263465 #> 179   0.753340260 #> 180   0.812137995 #> 181   0.812137995 #> 182   0.942495590 #> 183   0.997289026 #> 184   0.969974206 #> 185   0.794561342 #> 186   0.763565397 #> 187   0.564168912 #> 188   0.692300664 #> 189   0.731985322 #> 190   0.723625853 #> 191   0.960401568 #> 192   2.008897350 #> 193   0.142350941 #> 194   1.894675705 #> 195  -3.981541444 #> 196   1.136063985 #> 197   0.208927352 #> 198   1.730027774 #> 199  -8.137036435 #> 200  -1.275183622 #> 201  -1.465314610 #> 202  -2.788421095 #> 203  -3.796133613 #> 204  -3.708222390 #> 205  -3.896359674 #> 206  -8.262956575 #> 207  -6.749940163 #> 208  -7.905125742 #> 209  -1.891512974 #> 210  -0.365643323 #> 211  -0.488254806 #> 212  -0.566402484 #> 213  -0.553580347 #> 214   0.181220765 #> 215  -0.378787538 #> 216   0.437717013 #> 217   0.355119040 #> 218   0.402059863 #> 219   0.375162160 #> 220   0.398623306 #> 221   0.374973886 #> 222   0.352553954 #> 223   0.374636205 #> 224   0.383924622 #> 225   0.513591511 #> 226   0.435025066 #> 227   0.435488799 #> 228   0.379774199 #> 229   0.375248898 #> 230   0.325819128 #> 231   1.132566079 #> 232  -0.325727245 #> 233  -0.231400216 #> 234  -0.562269409 #> 235  -0.715493541 #> 236  -1.274978930 #> 237  -1.153903433 #> 238  -0.275479367 #> 239   0.673397881 #> 240  -0.217461874 #> 241  -0.258381582 #> 242  -0.017554470 #> 243   0.375779158 #> 244  -3.582884457 #> 245  -3.058981233 #> 246  -4.010091677 #> 247  -3.620511398 #> 248  -2.591893404 #> 249  -2.846654327 #> 250   0.566686325 #> 251   0.513984468 #> 252   0.777181628 #> 253  -0.272273979 #> 254   0.085561612 #> 255   0.577430030 #> 256  -0.360236979 #> 257  -0.410942105 #> 258  -0.175633576 #> 259  -0.229481333 #> 260  -0.333978818 #> 261  -0.359124240 #> 262   0.196378493 #> 263   0.064521677 #> 264  -0.325193153 #> 265  -0.158092326 #> 266  -0.102752682 #> 267  -0.376527831 #> 268   1.014957291 #> 269  -1.188776440 #> 270  -2.608219439 #> 271  -3.659705101 #> 272   0.602199885 #> 273  -7.786805925 #> 274   0.752888128 #> 275  -4.230749228 #> 276  -2.703741427 #> 277  -3.376996502 #> 278  -6.844720511 #> 279  -5.867767985 #> 280  -6.610601114 #> 281  -6.365733756 #> 282  -6.015273206 #> 283  -6.414315537 #> 284  -6.181054820 #> 285  -4.689632294 #> 286  -8.239686776 #> 287  -8.947832379 #> 288  -6.990342710 #> 289  -6.269653708 #> 290  -9.226504808 #> 291   0.537549811 #> 292   0.652546192 #> 293   0.566722581 #> 294  -0.033148466 #> 295  -0.139063781 #> 296  -1.267004715 #> 297  -0.817359772 #> 298   0.481618977 #> 299   0.064046459 #> 300   0.071357879 #> 301   0.052901334 #> 302   0.027406639 #> 303  -0.712121560 #> 304  -0.625798907 #> 305  -1.834853505 #> 306  -2.047739478 #> 307   0.034342981 #> 308  -2.224525116 #> 309  -2.364100550 #> 310  -1.966094250 #> 311  -2.347438657 #> 312  -1.762287385 #> 313  -1.838323426 #> 314  -1.690399496 #> 315  -1.742714003 #> 316  -1.895231843 #> 317  -1.576195119 #> 318  -1.735837334 #> 319  -1.920974998 #> 320  -2.111239623 #> 321  -1.559678812 #> 322   0.276811525 #> 323  -0.080385435 #> 324  -5.191173371 #> 325  -3.872349050 #> 326  -3.779949064 #> 327  -2.799033629 #> 328  -4.355576755 #> 329  -5.142441204 #> 330  -4.170549410 #> 331  -3.718639628 #> 332  -2.505902087 #> 333  -4.363824595 #> 334  -5.108565164 #> 335  -3.034489271 #> 336  -0.882580702 #> 337  -4.232646383 #> 338   1.160596468 #> 339   1.052238449 #> 340   0.938553029 #> 341   0.952963304 #> 342   0.863430577 #> 343   0.558921692 #> 344   0.558921692 #> 345   0.759315975 #> 346   1.894675705 #> 347   0.024898533 #> 348   1.906117601 #> 349   0.128992354 #> 350   0.564017480 #> 351   0.564017480 #> 352   0.618742055 #> 353   1.134515033 #> 354   0.434970008 #> 355   0.434970008 #> 356   0.454311513 #> 357   0.571648261 #> 358   0.595543634 #> 359   0.475782562 #> 360   0.707796866 #> 361   1.820295453 #> 362   0.743342981 #> 363   1.237043267 #> 364   1.013892704 #> 365   0.909797484 #> 366   0.300302913 #> 367   1.239186827 #> 368  -4.767543033 #> 369  -7.564127304 #> 370  -5.318574573 #> 371  -1.212922100 #> 372   0.435488799 #> 373   0.449288567 #> 374  -1.641573580 #> 375  -3.303402111 #> 376  -2.823453603 #> 377  -7.748267082 #> 378  -7.907553970 #> 379  -0.123016388 #> 380  -0.282986735 #> 381  -4.133463400 #> 382  -3.569203275 #> 383  -6.437498450 #> 384   5.371704747 #> 385  -1.517513555 #> 386  -1.360048273 #> 387   0.576285478 #> 388   0.651132786 #> 389  -0.207553668 #> 390  -0.228505784 #> 391  -0.629006975 #> 392  -2.092548978 #> 393  -2.056659425 #> 394  -2.093206125 #> 395   0.789671591 #> 396   1.092448517 #> 397   1.197242367 #> 398   0.849523652 #> 399   0.027608129 #> 400  -0.016932933 #> 401   0.059412318 #> 402  -1.773405568 #> 403  -1.842019126 #> 404  -0.108029034 #> 405  -0.002085141 #> 406  -0.455008844 #> 407   0.056567473 #> 408   0.054842320 #> 409   0.062591996 #> 410  -0.137105013 #> 411  -0.149466352 #> 412  -0.159653371 #> 413  -0.048047310 #> 414  -0.046105104 #> 415  -0.056971544 #> 416   0.005310529 #> 417  -2.293482927 #> 418  -0.879523445 #> 419  -3.124645933 #> 420  -1.560579648 #> 421   0.040082530 #> 422   0.027626576 #> 423   0.017921519 #> 424  -0.195099658 #> 425   0.053243438 #> 426   0.115438715 #> 427  -0.010471098 #> 428   0.180685469 #> 429   0.016544218 #> 430  -0.175175178 #> 431  -0.041379023 #> 432  -0.363846070 #> 433  -0.101008281 #> 434   0.014118793 #> 435   0.062626400 #> 436   0.049393973 #> 437  -0.668687489 #> 438  -0.029069701 #> 439  -0.121589973 #> 440  -0.020740255 #> 441   0.015622241 #> 442  -0.021535939 #> 443  -0.093269270 #> 444  -0.054769906 #> 445  -0.015581188 #> 446   0.019205274 #> 447   0.017586391 #> 448   0.086887852 #> 449   0.052738091 #> 450  -0.060367686 #> 451  -0.023241856 #> 452   0.015283573 #> 453   0.030020596 #> 454   0.092759470 #> 455   0.082893390 #> 456   0.155549277 #> 457   0.149867724 #> 458   0.187072670 #> 459   0.256631586 #> 460  -0.257991465 #> 461  -0.108547042 #> 462   0.210505695 #> 463   0.240915590 #> 464   0.307964881 #> 465   0.437678252 #> 466   0.279183894 #> 467   0.279062368 #> 468   0.317475687 #> 469  -0.281110404 #> 470  -0.194823709 #> 471   0.383226146 #> 472  -0.047060639 #> 473   0.316742867 #> 474   0.578046467 #> 475   0.572274329 #> 476  -0.134287043 #> 477  -0.090124498 #> 478  -0.046556430 #> 479   0.310607795 #> 480   0.382969772 #> 481   0.521376020 #> 482  -0.226088281 #> 483  -0.182694198 #> 484  -0.139268224 #> 485  -0.107569088 #> 486  -0.064694809 #> 487   0.348320678 #> 488  -0.199968554 #> 489  -0.070340748 #> 490   0.342281954 #> 491   0.379283534 #> 492  -0.326287134 #> 493  -0.252198025 #> 494   0.007643794 #> 495   0.307830525 #> 496   0.452258256 #> 497   0.596671784 #> 498  -0.174470964 #> 499  -0.044245390 #> 500   0.380026731 #> 501   0.411539687 #> 502  -0.790767740 #> 503   0.729122697 #> 504  -0.429503217 #> 505  -0.374735660 #> 506  -0.320570593 #> 507  -0.265735809 #> 508  -0.179863271 #> 509  -0.135913582 #> 510  -0.093196254 #> 511   0.304520567 #> 512   0.342661202 #> 513   0.374083619 #> 514   0.411662062 #> 515   0.449282642 #> 516  -0.613213368 #> 517  -0.027124440 #> 518   0.520948368 #> 519   0.590932976 #> 520   0.661074009 #> 521  -0.523669723 #> 522  -0.469640461 #> 523  -0.360187078 #> 524  -0.306032917 #> 525  -0.251194172 #> 526  -0.196328866 #> 527  -0.153061735 #> 528   0.336843088 #> 529   0.374331479 #> 530  -1.028970751 #> 531  -0.715134712 #> 532  -0.617614327 #> 533  -0.563679988 #> 534  -0.509080095 #> 535  -0.454417254 #> 536  -0.040903334 #> 537   0.002463552 #> 538   0.374652072 #> 539   0.406011567 #> 540  -0.123975672 #> 541   0.123173625 #> 542  -0.688360618 #> 543  -0.646009637 #> 544  -0.602994834 #> 545  -0.014748716 #> 546   0.027974913 #> 547   0.443818677 #> 548   0.584967323 #> 549   0.729631959 #> 550  -0.662223556 #> 551  -0.619237696 #> 552  -0.075039154 #> 553  -0.019480869 #> 554   0.023191340 #> 555   0.065903990 #> 556   0.389333008 #> 557  -0.312782937 #> 558   0.261802723 #> 559  -0.636052478 #> 560  -0.223703117 #> 561  -0.114088366 #> 562  -0.005581317 #> 563   0.092708576 #> 564   0.135450400 #> 565   0.339897947 #> 566   0.382880414 #> 567   0.426543928 #> 568  -0.263846521 #> 569  -0.209121750 #> 570  -0.154337331 #> 571   0.063260642 #> 572   0.118879096 #> 573   0.161610016 #> 574   0.322434947 #> 575   0.366002148 #> 576   0.451984217 #> 577   0.496314462 #> 578  -0.857230773 #> 579   0.239494602 #> 580   0.573993462 #> 581   0.649183317 #> 582   0.723706991 #> 583  -0.248601236 #> 584  -0.193887419 #> 585  -0.139757939 #> 586  -0.085587662 #> 587  -0.030748111 #> 588   0.078440583 #> 589   0.133404579 #> 590   0.187778514 #> 591   0.360336101 #> 592   0.478075379 #> 593   0.521755980 #> 594  -0.407920025 #> 595  -0.853500349 #> 596  -0.288028342 #> 597  -0.233992104 #> 598  -0.179288999 #> 599  -0.125170059 #> 600  -0.071010366 #> 601  -0.015537569 #> 602   0.116416184 #> 603   0.170738349 #> 604   0.303593168 #> 605   0.377464503 #> 606   0.625498760 #> 607   0.712418564 #> 608  -0.935468137 #> 609  -0.877809793 #> 610  -0.824456946 #> 611  -0.774797790 #> 612  -0.261912321 #> 613  -0.219374651 #> 614   0.021839795 #> 615   0.130970073 #> 616   0.185281547 #> 617  -0.910133187 #> 618  -0.852484915 #> 619   0.036423659 #> 620   0.091271934 #> 621   0.145532576 #> 622   0.199833415 #> 623  -0.200811098 #> 624   0.344296714 #> 625  -0.111993472 #> 626   0.160747807 #> 627   0.269999032 #> 628  -0.302649943 #> 629   0.672514291 #> 630   0.121088081 #> 631   0.175327528 #> 632  -0.148539681 #> 633  -0.050888479 #> 634   0.264040133 #> 635   0.135686686 #> 636   0.189915710 #> 637   0.150293646 #> 638   0.227942678 #> 639   0.079608192 #> 640   0.134189251 #> 641   0.188984198 #> 642  -1.253661641 #> 643   0.386173285 #> 644   0.105740611 #> 645   0.054960596 #> 646   0.131881122 #> 647   0.187068364 #> 648  -0.654431959 #> 649  -0.257997473 #> 650   0.073579421 #> 651   0.116107223 #> 652   0.158675352 #> 653   0.213852155 #> 654  -1.552963982 #> 655  -1.439253900 #> 656  -1.335330486 #> 657   0.282637842 #> 658   0.325299395 #> 659  -1.162720179 #> 660   0.468649822 #> 661  -1.793638144 #> 662  -1.497871787 #> 663  -1.431198866 #> 664  -1.383491480 #> 665   0.308782331 #> 666   0.352078942 #> 667  -1.718865260 #> 668  -1.605491105 #> 669  -1.301236061 #> 670  -0.968100383 #> 671   0.068389803 #> 672   0.161563258 #> 673   0.257946492 #> 674  -1.794229754 #> 675  -1.753866681 #> 676  -1.524174035 #> 677  -1.725523315 #> 678  -1.685775674 #> 679  -1.644738789 #> 680  -1.597270174 #> 681  -1.550408807 #> 682  -1.502256246 #> 683  -1.436240926 #> 684  -1.389245809 #> 685  -1.340957578 #> 686   0.264620399 #> 687   0.319757378 #> 688   0.481483088 #> 689   0.578938459 #> 690  -1.645408975 #> 691  -1.616406037 #> 692  -1.576576372 #> 693  -1.481579124 #> 694  -1.367337261 #> 695  -1.789665586 #> 696  -1.072322537 #> 697  -0.865493827 #> 698  -0.011666271 #> 699   0.185882514 #> 700  -1.686289149 #> 701  -1.646012317 #> 702  -1.617062006 #> 703  -1.501828638 #> 704   0.632475416 #> 705  -1.617651350 #> 706  -1.548348347 #> 707  -1.937543958 #> 708  -1.583861915 #> 709  -1.514627096 #> 710  -1.434370022 #> 711  -1.330341828 #> 712  -1.282735163 #> 713  -1.652045586 #> 714  -0.775175229 #> 715   0.076127812 #> 716   0.278068538 #> 717  -1.261448340 #> 718  -1.196043958 #> 719   0.515923856 #> 720   0.449982523 #> 721  -1.174703847 #> 722   0.535137732 #> 723  -2.173572506 #> 724  -1.366307847 #> 725  -1.297544727 #> 726  -1.071899243 #> 727  -0.958030221 #> 728   0.598547768 #> 729  -1.514992747 #> 730  -0.680206451 #> 731  -0.477502475 #> 732   0.175573762 #> 733   0.378705562 #> 734  -1.303567485 #> 735  -1.263806403 #> 736  -1.223408504 #> 737  -1.194992708 #> 738  -1.154446666 #> 739  -1.045341097 #> 740  -1.015456819 #> 741  -0.949952464 #> 742  -0.902818015 #> 743  -1.366651776 #> 744   0.646169592 #> 745  -1.126145626 #> 746  -1.086215311 #> 747  -1.044993155 #> 748  -0.976348086 #> 749  -0.928665968 #> 750  -1.057263474 #> 751  -0.860201757 #> 752   0.363061186 #> 753   0.406909775 #> 754   0.463699501 #> 755  -0.942199067 #> 756  -0.759464112 #> 757   0.276007862 #> 758  -0.677652680 #> 759   0.370932027 #> 760   0.476166084 #> 761  -1.091902904 #> 762  -0.387111983 #> 763   0.027815307 #> 764  -0.656377931 #> 765  -0.609102160 #> 766   0.333686113 #> 767   0.394960353 #> 768   0.455656804 #> 769   0.500891048 #> 770   0.558324429 #> 771  -0.874123872 #> 772  -0.717493473 #> 773  -0.508740257 #> 774  -0.635699189 #> 775  -0.587828944 #> 776   0.311975967 #> 777   0.357080826 #> 778   0.417728185 #> 779   0.463532827 #> 780   0.524909535 #> 781   0.583695439 #> 782   0.381131003 #> 783   0.441770159 #> 784   0.486947122 #> 785   0.548286391 #> 786   0.257251427 #> 787   0.404538776 #> 788   0.449667665 #> 789   0.510338846 #> 790  -0.284322305 #> 791  -0.089034150 #> 792   0.118006838 #> 793  -0.519938192 #> 794  -0.173064076 #> 795   0.035555224 #> 796   0.415221130 #> 797  -0.131167998 #> 798  -0.017134596 #> 799  -1.562681380 #> 800   0.041117943 #> 801   0.458941012 #> 802  -0.400219747 #> 803   0.605331693 #> 804   0.330938907 #> 805   1.425723038 #> 806   0.767220847 #> 807   0.668862833 #> 808   0.863687459 #> 809   0.756064575 #> 810   0.958197866 #> 811   0.852195200 #> 812   1.260870621 #> 813  -0.129169079 #> 814   0.170733138 #> 815   0.006620670 #> 816   0.003838134 #> 817   0.055928032 #> 818  -2.449266021 #> 819  -2.449781909 #> 820   0.481559440 #> 821  -0.134918538 #> 822   2.768784041 #> 823   0.020184587 #> 824   1.994322061 #> 825   2.072608720 #> 826  -0.063596010 #> 827   0.036464534 #> 828   0.540359889 #> 829  -0.137105440 #> 830   2.040027864 #> 831   2.359278694 #> 832   2.497791902 #> 833  -0.247553689 #> 834  -0.186519734 #> 835  -0.433842249 #> 836  -0.108255757 #> 837  -1.339123107 #> 838  -0.363940199 #> 839  -0.217927948 #> 840   0.458070046 #> 841   0.418438804 #> 842   0.321810791 #> 843   0.423996465 #> 844   0.248205965 #> 845   0.291785519 #> 846   0.359114994 #> 847   0.372582089 #> 848  -0.007913940 #> 849  -0.064923379 #> 850   0.023659808 #> 851  -0.054707286 #> 852  -0.036503974 #> 853  -0.114298227 #> 854  -0.104254931 #> 855  -0.039107965 #> 856   0.016959595 #> 857  -0.162346431 #> 858  -0.119691394 #> 859  -0.089570785 #> 860   0.004694528 #> 861  -0.064923379 #> 862  -0.041013061 #> 863   0.054060409 #> 864   1.932796554 #> 865   1.907396532 #> 866  -0.070649020 #> 867  -0.081478820 #> 868   0.068432121 #> 869   0.581858283 #> 870   0.060833311 #> 871   0.392406568 #> 872   0.236068500 #> 873  -0.036011701 #> 874   1.406758166 #> 875   1.946017133 #> 876  -5.973184715 #> 877  -7.467968429 #> 878  -7.129627086 #> 879  -6.099231339 #> 880  -7.464478343 #> 881   0.076509852 #> 882  -0.050155591 #> 883   0.007708582 #> 884  -0.071516206 #> 885  -0.079137315 #> 886  -0.883788054 #> 887  -0.058364134 #> 888   0.539245098 #> 889   0.438294336 #> 890   0.199616268 #> 891   0.038341694 #> 892  -0.453079115 #> 893  -0.514995736 #> 894  -0.588749353 #> 895  -0.662605777 #> 896  -1.114972837 #> 897  -1.036204300 #> 898  -2.221354599 #> 899  -0.629015339 #> 900  -0.130203879 #> 901  -0.460169563 #> 902  -3.234277944 #> 903  -2.846498442 #> 904  -6.602338029 #> 905   0.733714075 #> 906   0.614576870 #> 907   0.731195524 #> 908   0.803436113 #> 909  -0.043464518 #> 910  -0.022830441 #> 911  -0.197229786 #> 912  -0.096204144 #> 913  -0.115270549 #> 914   0.051896293 #> 915  -0.023753416 #> 916   0.016399226 #> 917   0.142809075 #> 918  -0.112699326 #> 919  -0.001411843 #> 920   0.348004103 #> 921  -0.136835176 #> 922  -0.098468214 #> 923  -0.091210950 #> 924  -0.083799599 #> 925  -0.082972608 #> 926  -0.077407010 #> 927   0.540825811 #> 928   0.564695483 #> 929   0.553901046 #> 930   0.565595058 #> 931   0.600213868 #> 932   0.580054225 #> 933   0.069855885 #> 934  -0.060819083 #> 935   0.586624178 #> 936  -0.053476769 #> 937   0.140406376 #> 938  -0.072103531 #> 939   0.026918639 #> 940   0.102987430 #> 941   0.115822180 #> 942   0.102698557 #> 943   0.096371450 #> 944   0.231845120 #> 945   0.906280173 #> 946   0.045354982 #> 947  -2.715875754 #> 948   0.168642988 #> 949   0.377829203 #> 950   0.484973507 #> 951  -0.059292011 #> 952  -0.106038172 #> 953  -0.915853487 #> 954   0.096839836 #> 955   0.716396017 #> 956   0.035252695 #> 957  -0.219560409 #> 958  -0.055208004 #> 959   0.014102297 #> 960   0.060021714 #> 961  -0.343198449 #> 962  -0.098112155 #> 963  -0.117980174 #> 964  -0.005838140 #> 965  -1.865958524 #> 966  -1.865958524 #> 967  -1.865958524 #> 968   0.121303343 #> 969   0.191052411 #> 970  -0.176762493 #> 971  -0.134386917 #> 972  -0.105461555 #> 973   0.053981620 #> 974   0.267410867 #> 975   0.286677273 #> 976   0.146249194 #> 977   0.113559154 #> 978   0.126958706 #> 979   0.280270678 #> 980   0.280270678 #> 981   0.287233474 #> 982  -0.225585808 #> 983   0.430347968 #> 984   0.142860526 #> 985   0.415344492 #> 986   0.142783191 #> 987   0.298123767 #> 988  -0.181440469 #> 989  -0.217700351 #> 990  -0.216039159 #> 991  -0.142807790 #> 992  -0.479323401 #> 993   0.026576417 #> 994   0.118322732 #> 995   0.091120041 #> 996   0.129036609 #> 997   0.032620190 #> 998  -0.123632647 #> 999   0.125370627 #> 1000  0.120807720 #> 1001 -6.074708808 #> 1002 -0.118966044 #> 1003  0.139025821 #> 1004 -0.312681404 #> 1005 -0.211707047 #> 1006 -0.136613459 #> 1007 -0.328562700 #> 1008 -0.275442101 #> 1009 -2.707394210 #> 1010 -0.170926723 #> 1011  0.076333491 #> 1012  0.003328504 #> 1013  0.018583473 #> 1014  0.012824129 #> 1015 -0.131893479 #> 1016  0.003797685 #> 1017 -2.422045506 #> 1018  0.919274117 #> 1019 -0.057917777 #> 1020  0.044298159 #> 1021  0.015887205 #> 1022  0.139498513 #> 1023 -0.094241571 #> 1024 -0.020726490 #> 1025  0.293300284 #> 1026  0.035978337 #> 1027  0.511241631 #> 1028  0.691150688 #> 1029  0.526978122 #> 1030 -0.017366103 #> 1031 -0.002423979 #> 1032 -0.020128365 #> 1033  2.251707179 #> 1034 -0.059072715 #> 1035  0.727549725 #> 1036  3.901349948 #> 1037  0.072361017 #> 1038  0.006821076 #> 1039 -0.095271922 #> 1040 -0.198627974 #> 1041 -2.827489383 #> 1042  0.832025622 #> 1043  0.398211402 #> 1044 -0.068452261 #> 1045 -0.487912951 #> 1046  1.234685386 #> 1047 -0.458958059 #> 1048  3.907522644 #> 1049 -1.392503798 #> 1050  0.107919907 #> 1051  0.157176263 #> 1052  0.064065787 #> 1053  0.537422574 #> 1054 -5.114361826 #> 1055  2.301472355 #> 1056 -0.071467494 #> 1057  0.122062902 #> 1058 -0.057216869 #> 1059 -0.489001253 #> 1060  0.181175266 #> 1061  0.182817360 #> 1062  0.102346767 #> 1063  0.180361214 #> 1064  0.115468395 #> 1065 -0.046126948 #> 1066 -3.841382154 #> 1067 -0.309849913 #> 1068  1.725577990 #> 1069  1.748376513 #> 1070  1.743884020 #> 1071  1.845017369 #> 1072  1.090337794 #> 1073  1.490547176 #> 1074  0.106748639 #> 1075  0.719088946 #> 1076 -2.722540458 #> 1077  0.236227476 #> 1078 -3.448234454 #> 1079 -3.448234454 #> 1080 -4.174179044 #> 1081 -0.512597092 #> 1082 -0.504213940 #> 1083 -0.371095842 #> 1084 -0.508281269 #> 1085 -0.504003892 #> 1086 -0.495722117 #> 1087 -0.373100533 #> 1088 -0.473071095 #> 1089 -0.495999109 #> 1090 -0.471200848 #> 1091 -0.486331077 #> 1092 -0.511076619 #> 1093 -0.492018061 #> 1094 -0.487394542 #> 1095 -0.470454640 #> 1096 -0.511019170 #> 1097 -0.480972821 #> 1098 -0.452103251 #> 1099 -0.375107589 #> 1100 -0.491805700 #> 1101 -0.484249106 #> 1102 -0.494046673 #> 1103 -0.517008513 #> 1104 -0.504019514 #> 1105 -0.464128520 #> 1106 -0.489886647 #> 1107 -0.484077326 #> 1108 -0.503257665 #> 1109 -0.518071313 #> 1110 -0.461764430 #> 1111 -0.513836928 #> 1112 -0.492726953 #> 1113 -0.492726953 #> 1114 -0.481737255 #> 1115 -0.481047791 #> 1116 -0.505807560 #> 1117 -1.628965953 #> 1118 -1.657056337 #> 1119 -1.648470377 #> 1120 -1.644618350 #> 1121 -1.644618350 #> 1122 -1.644618350 #> 1123 -1.644618350 #> 1124 -1.657056337 #> 1125 -1.657056337 #> 1126 -0.478944333 #>  #> $stats #>                      mean #> mean         138.90248502 #> sd            18.57998667 #> var            0.18967312 #> median       138.94509179 #> quasi_median 136.85808363 #> skewness      -0.33779208 #> kurtosis       2.78636137 #> conf95         2.08549562 #> dispersion     0.09858997 #> norm_chisq     0.05290640 #>  #> $test #> $test$C #> [1] 0.8028201 #>  #> $test$statistic #> [1] 38.09802 #>  #> $test$p.value #> [1] 4.600542e-314 #>  #>  # }"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette for stress regime — stress_colors","title":"Color palette for stress regime — stress_colors","text":"Color palette stress regime","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette for stress regime — stress_colors","text":"","code":"stress_colors()"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color palette for stress regime — stress_colors","text":"function","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palette for stress regime — stress_colors","text":"","code":"stress_colors() #>         N        NS         S        TS         T         U  #> \"#D55E00\" \"#E69F00\" \"#009E73\" \"#56B4E9\" \"#0072B2\"  \"grey60\""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example crustal stress dataset — stress_data","title":"Example crustal stress dataset — stress_data","text":"Subsets World Stress Map (WSM) compilation information crustal present-day stress field (Version 1.1. 2019).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example crustal stress dataset — stress_data","text":"","code":"data('san_andreas')  data('tibet')  data('iceland')"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example crustal stress dataset — stress_data","text":"sf object / data.frame 10 columns. row represents different -situ stress measurement: id Measurement identifier lat latitude degrees lon longitude degrees azi SHmax azimuth degrees unc MMeasruement standard eviation (degrees) type Type measurement depth Depth km quality WSM quality rank regime Stress regime object class sf (inherits data.frame) 1126 rows 10 columns. object class sf (inherits data.frame) 1165 rows 10 columns. object class sf (inherits data.frame) 490 rows 10 columns.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example crustal stress dataset — stress_data","text":"https://www.world-stress-map.org/","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Example crustal stress dataset — stress_data","text":"'san_andreas\" contains 407 stress data adjacent San Andreas Fault tested tangentially displaced plate boundary. \"tibet\" contains 947 stress data Himalaya Tibetan plateau tested inward-moving displaced plate boundary. 'iceland contains 201 stress data Iceland tested outward-moving displaced plate boundary.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Example crustal stress dataset — stress_data","text":"Heidbach, O., M. Rajabi, X. Cui, K. Fuchs, B. M<U+00FC>ller, J. Reinecker, K. Reiter, M. Tingay, F. Wenzel, F. Xie, M. O. Ziegler, M.-L. Zoback, M. D. Zoback (2018): World Stress Map database release 2016: Crustal stress pattern across scales. Tectonophysics, 744, 484-498, doi:10.1016/j.tecto.2018.07.007 .","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/stress_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Example crustal stress dataset — stress_data","text":"","code":"data(\"san_andreas\") head(san_andreas) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -118.84 ymin: 35.97 xmax: -112.58 ymax: 39.08 #> Geodetic CRS:  WGS 84 #>         id   lat     lon azi unc type depth quality regime #> 1 wsm00892 38.14 -118.84  50  25  FMS     7       C      S #> 2 wsm00893 35.97 -114.71  54  25  FMS     5       C      S #> 3 wsm00894 37.93 -118.17  24  25  FMS     5       C      S #> 4 wsm00896 38.63 -118.21  41  25  FMS    17       C      N #> 5 wsm00897 39.08 -115.62  30  25  FMS     5       C      N #> 6 wsm00903 38.58 -112.58  27  25  FMS     7       C      N #>                geometry #> 1 POINT (-118.84 38.14) #> 2 POINT (-114.71 35.97) #> 3 POINT (-118.17 37.93) #> 4 POINT (-118.21 38.63) #> 5 POINT (-115.62 39.08) #> 6 POINT (-112.58 38.58)  data(\"tibet\") head(tibet) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: 73.7 ymin: 35.4 xmax: 77.4 ymax: 42.63 #> Geodetic CRS:  WGS 84 #>         id   lat   lon azi unc type depth quality regime            geometry #> 1 wsm01766 35.40 73.70 100  40  FMS     0       D      T   POINT (73.7 35.4) #> 2 wsm01860 42.10 75.98  62  25  FMS    10       C      T  POINT (75.98 42.1) #> 3 wsm01861 42.00 77.40  18  25  FMS     0       C     NS     POINT (77.4 42) #> 4 wsm01869 42.57 75.08   5  25  FMS    10       C      T POINT (75.08 42.57) #> 5 wsm01877 40.90 73.93 177  25  FMS    10       C      T  POINT (73.93 40.9) #> 6 wsm01880 42.63 75.33 167  25  FMS     5       C      T POINT (75.33 42.63)  data(\"iceland\") head(iceland) #> Simple feature collection with 6 features and 9 fields #> Geometry type: POINT #> Dimension:     XY #> Bounding box:  xmin: -16.99 ymin: 64.38 xmax: -15.16 ymax: 66.33 #> Geodetic CRS:  WGS 84 #>         id   lat    lon azi unc type depth quality regime             geometry #> 1 wsm00187 64.38 -15.16 167  25  FMS  26.0       C      N POINT (-15.16 64.38) #> 2 wsm00188 66.33 -16.29 172  25  FMS  33.0       C      S POINT (-16.29 66.33) #> 3 wsm00190 66.20 -16.70 174  25  FMS   0.0       C      S   POINT (-16.7 66.2) #> 4 wsm00191 64.90 -16.94 164  25  FMS  10.0       C      T  POINT (-16.94 64.9) #> 5 wsm00192 64.57 -16.95 140  90  FMS  13.8       E      N POINT (-16.95 64.57) #> 6 wsm00193 64.66 -16.99 129  90  FMS  14.5       E      N POINT (-16.99 64.66)"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Theoretical Plate Tectonic Stress Paths — stress_paths","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Construct \\(\\sigma_{Hmax}\\) lines following small circles, great circles, loxodromes Euler pole relative plate motion.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"eulerpole_paths(x, type = c(\"sc\", \"gc\", \"ld\"), n = 10, angle = 45, cw)  eulerpole_smallcircles(x, n = 10)  eulerpole_greatcircles(x, n = 10)  eulerpole_loxodromes(x, n = 10, angle = 45, cw)"},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"x Either object class \"euler.pole\" \"data.frame\" containing coordinates Euler pole lat, lon, rotation angle (optional). type Character string specifying type curves export. Either \"sm\" small circles (default), \"gc\" great circles, \"ld\" loxodromes. n Number equally spaced curves; n = 10 default (angular distance curves: 180 / n) angle Direction loxodromes; angle = 45 default. cw logical. Sense loxodromes: TRUE clockwise loxodromes (left-lateral displaced plate boundaries). FALSE counterclockwise loxodromes (right-lateral displaced plate boundaries).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"sf object","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Maximum horizontal stress can aligned three types curves related relative plate motion: Small circles Lines constant distance Euler pole. x contains angle, output additionally gives absolute velocity small circle (degree/Myr -> km/Myr). Great circles Paths shortest distance Euler pole antipodal position. Loxodromes Lines constant bearing, .e. curves cutting small circles constant angle.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/stress_paths.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Theoretical Plate Tectonic Stress Paths — stress_paths","text":"","code":"data(\"nuvel1\") por <- subset(nuvel1, nuvel1$plate.rot == \"na\") # North America relative to # Pacific plate  eulerpole_smallcircles(por) #> Simple feature collection with 11 features and 2 fields #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -84.709 xmax: 180 ymax: 84.709 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 3 #>                                                           geometry     d abs_vel #>  *                                                  <GEOMETRY [°]> <dbl>   <dbl> #>  1 LINESTRING (101.833 -48.709, 101.833 -48.709, 101.833 -48.709,…     0     0   #>  2 LINESTRING (101.833 -30.709, 102.4799 -30.71571, 103.1265 -30.…   -18    26.9 #>  3 LINESTRING (101.833 -12.709, 102.9175 -12.72024, 104.0016 -12.…   -36    51.2 #>  4 MULTILINESTRING ((101.833 5.291, 103.2953 5.275842, 104.757 5.…   -54    70.4 #>  5 MULTILINESTRING ((101.833 23.291, 103.6965 23.27168, 105.5586 …   -72    82.8 #>  6 MULTILINESTRING ((101.833 41.291, 104.228 41.26618, 106.6194 4…    90    87.1 #>  7 MULTILINESTRING ((101.833 59.291, 105.1832 59.25627, 108.521 5…    72    82.8 #>  8 MULTILINESTRING ((101.833 77.291, 108.4309 77.22258, 114.9037 …    54    70.4 #>  9 LINESTRING (-78.167 84.709, -89.46284 84.59139, -99.79473 84.2…    36    51.2 #> 10 LINESTRING (-78.167 66.709, -79.57283 66.69442, -80.97315 66.6…    18    26.9 #> 11 LINESTRING (-78.167 48.709, -78.167 48.709, -78.167 48.709, -7…     0     0   eulerpole_greatcircles(por) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -89.991 xmax: 180 ymax: 89.991 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1     0 LINESTRING (101.833 -48.709, 101.833 -48.609, 101.833 -48.509, 101.833… #>  2    36 LINESTRING (101.833 -48.709, 101.7441 -48.62806, 101.6554 -48.54706, 1… #>  3    72 LINESTRING (101.833 -48.709, 101.689 -48.67801, 101.5451 -48.64684, 10… #>  4   108 LINESTRING (101.833 -48.709, 101.6888 -48.73981, 101.5444 -48.77044, 1… #>  5   144 LINESTRING (101.833 -48.709, 101.7438 -48.78987, 101.6543 -48.87067, 1… #>  6     0 LINESTRING (101.833 -48.709, 101.833 -48.809, 101.833 -48.909, 101.833… #>  7    36 MULTILINESTRING ((101.833 -48.709, 101.9222 -48.78987, 102.0117 -48.87… #>  8    72 MULTILINESTRING ((101.833 -48.709, 101.9772 -48.73981, 102.1216 -48.77… #>  9   108 MULTILINESTRING ((101.833 -48.709, 101.977 -48.67801, 102.1209 -48.646… #> 10   144 MULTILINESTRING ((101.833 -48.709, 101.9219 -48.62806, 102.0106 -48.54… #> 11     0 MULTILINESTRING ((101.833 -48.709, 101.833 -48.609, 101.833 -48.509, 1… eulerpole_loxodromes(x = por, angle = 45, n = 10, cw = FALSE) #> Simple feature collection with 15 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -82.82221 xmax: 180 ymax: 82.82221 #> Geodetic CRS:  WGS 84 #> # A tibble: 15 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1   108 LINESTRING (-78.07054 66.58404, -78.01693 66.51323, -77.96404 66.44238… #>  2   144 LINESTRING (101.6024 77.35336, 101.3391 77.42378, 101.0733 77.49398, 1… #>  3     0 LINESTRING (101.833 41.291, 101.7388 41.36167, 101.6444 41.43227, 101.… #>  4    36 LINESTRING (101.3044 5.933699, 101.2458 6.003953, 101.1871 6.074159, 1… #>  5    72 LINESTRING (101.6185 -30.1275, 101.5917 -30.05698, 101.5648 -29.98648,… #>  6   108 LINESTRING (101.7399 -48.5214, 101.7063 -48.4543, 101.6725 -48.38724, … #>  7   144 LINESTRING (101.5909 -48.59325, 101.5042 -48.55193, 101.4174 -48.5107,… #>  8     0 LINESTRING (101.5338 -48.70929, 101.4266 -48.70954, 101.3195 -48.70986… #>  9    36 LINESTRING (101.591 -48.82535, 101.5043 -48.86716, 101.4177 -48.90905,… #> 10    72 MULTILINESTRING ((101.7412 -48.89695, 101.7086 -48.96434, 101.6762 -49… #> 11   108 MULTILINESTRING ((101.9268 -48.89653, 101.961 -48.96356, 101.9956 -49.… #> 12   144 LINESTRING (102.0762 -48.82424, 102.1639 -48.86512, 102.2519 -48.9058,… #> 13     0 LINESTRING (102.1322 -48.70793, 102.2393 -48.70703, 102.3465 -48.70586… #> 14    36 LINESTRING (102.0739 -48.59215, 102.1596 -48.54991, 102.245 -48.50747,… #> 15    72 LINESTRING (101.9241 -48.52098, 101.9561 -48.45352, 101.9878 -48.38601… eulerpole_loxodromes(x = por, angle = 30, cw = TRUE) #> Simple feature collection with 13 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -85.21953 xmax: 180 ymax: 85.21953 #> Geodetic CRS:  WGS 84 #> # A tibble: 13 × 2 #>        d                                                                geometry #>  * <dbl>                                                          <GEOMETRY [°]> #>  1   144 LINESTRING (101.5141 -47.93824, 101.4813 -47.85449, 101.4487 -47.77068… #>  2     0 LINESTRING (100.8943 -48.20753, 100.7944 -48.15215, 100.6949 -48.09657… #>  3    36 LINESTRING (100.6237 -48.6678, 100.4929 -48.66181, 100.3621 -48.65551,… #>  4    72 LINESTRING (100.8139 -49.14575, 100.7018 -49.19187, 100.5894 -49.23775… #>  5   108 LINESTRING (101.4023 -49.45697, 101.3538 -49.53763, 101.3048 -49.61821… #>  6   144 LINESTRING (102.1618 -49.47885, 102.1969 -49.5624, 102.2319 -49.64599,… #>  7     0 MULTILINESTRING ((102.7905 -49.20269, 102.8946 -49.25631, 102.9989 -49… #>  8    36 MULTILINESTRING ((103.044 -48.73753, 103.1752 -48.74063, 103.3065 -48.… #>  9    72 MULTILINESTRING ((102.8344 -48.26342, 102.9424 -48.21527, 103.0504 -48… #> 10   108 MULTILINESTRING ((102.251 -47.95948, 102.2967 -47.87845, 102.3424 -47.… #> 11   144 MULTILINESTRING ((101.833 -21.06283, 101.8579 -20.97623, 101.883 -20.8… #> 12     0 MULTILINESTRING ((101.833 41.291, 101.8996 41.37758, 101.9664 41.46413… #> 13    36 LINESTRING (-78.167 76.35517, -78.26446 76.26854, -78.36015 76.18185, … eulerpole_smallcircles(data.frame(lat = 30, lon = 10)) #> Simple feature collection with 11 features and 1 field #> Geometry type: GEOMETRY #> Dimension:     XY #> Bounding box:  xmin: -180 ymin: -84 xmax: 180 ymax: 84 #> Geodetic CRS:  WGS 84 #> # A tibble: 11 × 2 #>                                                                   geometry     d #>  *                                                          <GEOMETRY [°]> <dbl> #>  1 LINESTRING (-170 -30, -170 -30, -170 -30, -170 -30, -170 -30, -170 -30…     0 #>  2 MULTILINESTRING ((-170 -12, -169.4314 -12.00774, -168.8632 -12.03093, …   -18 #>  3 MULTILINESTRING ((-170 6, -168.9363 5.985529, -167.8735 5.942134, -166…   -36 #>  4 MULTILINESTRING ((-170 24, -168.4063 23.97832, -166.8145 23.91332, -16…   -54 #>  5 MULTILINESTRING ((-170 42, -167.6973 41.96867, -165.3999 41.87482, -16…   -72 #>  6 MULTILINESTRING ((-170 60, -166.4035 59.95107, -162.8282 59.80475, -15…    90 #>  7 MULTILINESTRING ((-170 78, -161.8144 77.88851, -153.9057 77.56006, -14…    72 #>  8 LINESTRING (10 84, -3.638991 83.81339, -15.74781 83.28465, -25.60532 8…    54 #>  9 LINESTRING (10 66, 7.401912 65.96464, 4.822514 65.85889, 2.279844 65.6…    36 #> 10 LINESTRING (10 48, 9.169016 47.98869, 8.339768 47.9548, 7.51398 47.898…    18 #> 11 LINESTRING (10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10 30, 10…     0"},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":null,"dir":"Reference","previous_headings":"","what":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"Calculates \\(\\sigma_{Hmax}\\) direction given coordinates, sourced multiple plate boundaries. first-order approximation circular mean superimposed theoretical directions, weighted rotation rates underlying PoRs.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"","code":"superimposed_shmax(df, PoRs, types, absolute = TRUE, PoR_weighting = NULL)"},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"df data.frame containing coordinates point(s) (lat, lon), direction \\(\\sigma_{Hmax}\\) azi (degrees) PoRs multirow data.frame \"euler.pole\" object must contain lat, lon angle types character vector length equal number rows PoRs. Type plate boundary. Must \"\", \"\", \"right\", \"left\" outward, inward, right-lateral, left-lateral moving plate boundaries, respectively. absolute logical. Whether resultant azimuth weighted using absolute rotation points angular rotation PoRs. PoR_weighting (optional) numeric vector length equal number rows PoRs. Extra weightings used PoRs.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"two column vector. azi resultant azimuth degrees / geographical CRS), R resultant length.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHmax direction resulting from multiple plate boundaries — superimposed_shmax","text":"","code":"data(san_andreas) data(nuvel1) pors <- subset(nuvel1, plate.rot %in% c(\"eu\", \"na\")) res <- superimposed_shmax(san_andreas, pors, types = c(\"in\", \"right\"), PoR_weighting = c(2, 1)) head(res) #>           azi         R #> [1,] 156.6593 0.6609390 #> [2,] 150.5433 0.6532568 #> [3,] 155.9269 0.6555497 #> [4,] 157.0336 0.6434240 #> [5,] 155.9564 0.5960833 #> [6,] 152.3433 0.5636785"},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax_PB.html","id":null,"dir":"Reference","previous_headings":"","what":"SHmax direction resulting from multiple plate boundaries considering distance to plate boundaries — superimposed_shmax_PB","title":"SHmax direction resulting from multiple plate boundaries considering distance to plate boundaries — superimposed_shmax_PB","text":"Calculates \\(\\sigma_{Hmax}\\) direction given coordinates, sourced multiple plate boundaries. first-order approximation circular mean superimposed theoretical directions, weighted rotation rates underlying PoRs, inverse distance plate boundaries, type plate boundary.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax_PB.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"SHmax direction resulting from multiple plate boundaries considering distance to plate boundaries — superimposed_shmax_PB","text":"","code":"superimposed_shmax_PB(   x,   pbs,   model,   rotation_weighting = TRUE,   type_weights = c(divergent = 1, convergent = 3, transform_L = 2, transform_R = 2),   idp = 1 )"},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax_PB.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"SHmax direction resulting from multiple plate boundaries considering distance to plate boundaries — superimposed_shmax_PB","text":"x grid. object sf, sfc 2-column matrix pbs plate boundaries. sf object model data.frame containing Euler pole parameters. See equivalent_rotation() details. rotation_weighting logical. type_weights named vector. idp numeric. Weighting power inverse distance. higher number, less impact far-distant boundaries . set 0, weighting applied.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax_PB.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"SHmax direction resulting from multiple plate boundaries considering distance to plate boundaries — superimposed_shmax_PB","text":"two-column matrix. azi resultant azimuth (degrees), R resultant length.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/superimposed_shmax_PB.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"SHmax direction resulting from multiple plate boundaries considering distance to plate boundaries — superimposed_shmax_PB","text":"","code":"na_grid <- sf::st_make_grid(san_andreas, what = \"centers\", cellsize = 1) na_plate <- subset(plates, plateA == \"na\" | plateB == \"na\") cpm <- cpm_models[[\"NNR-MORVEL56\"]]  # make divergent to ridge-push: na_plate <- transform(na_plate, type = ifelse(na_plate$pair == \"eu-na\", \"convergent\", type))  res <- superimposed_shmax_PB(na_grid, na_plate, model = cpm, idp = 2) head(res) #>           azi        R #> [1,] 36.78752 167.7019 #> [2,] 34.10380 178.7247 #> [3,] 31.98870 189.8442 #> [4,] 29.85757 201.7330 #> [5,] 28.37406 213.9229 #> [6,] 27.33043 226.3990"},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Colors for input variables — tectonicr.colors","title":"Colors for input variables — tectonicr.colors","text":"assigns colors continuous categorical values plotting","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Colors for input variables — tectonicr.colors","text":"","code":"tectonicr.colors(   x,   n = 10,   pal = NULL,   categorical = FALSE,   na.value = \"grey\",   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Colors for input variables — tectonicr.colors","text":"x values color assignment n integer. number colors continuous colors (.e. `categorical = FALSE“). pal either named vector specifying colors categorical values, color function. NULL, default colors RColorBrewer::brewer.pal() (categorical = TRUE) viridis::viridis() (categorical = FALSE). categorical logical. na.value color NA values (categorical). ... optional arguments passed palette function","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Colors for input variables — tectonicr.colors","text":"named color vector","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Colors for input variables — tectonicr.colors","text":"","code":"val1 <- c(\"N\", \"S\", \"T\", \"T\", NA) tectonicr.colors(val1, categorical = TRUE) #>         N         S         T         T      <NA>  #> \"#66C2A5\" \"#FC8D62\" \"#8DA0CB\" \"#8DA0CB\"    \"grey\"  tectonicr.colors(val1, pal = stress_colors(), categorical = TRUE) #>         N         S         T         T      <NA>  #> \"#D55E00\" \"#009E73\" \"#0072B2\" \"#0072B2\"    \"grey\"   val2 <- runif(10) tectonicr.colors(val2, n = 5) #>   (0.6,0.8]     (0.8,1]   (0.4,0.6]   (0.2,0.4]     (0.8,1]     [0,0.2]  #> \"#5DC863FF\" \"#FDE725FF\" \"#21908CFF\" \"#3B528BFF\" \"#FDE725FF\" \"#440154FF\"  #>   (0.2,0.4]   (0.4,0.6]     [0,0.2]     [0,0.2]  #> \"#3B528BFF\" \"#21908CFF\" \"#440154FF\" \"#440154FF\""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":null,"dir":"Reference","previous_headings":"","what":"library(tectonicr) — tectonicr","title":"library(tectonicr) — tectonicr","text":"Modeling Direction Maximum Horizontal Stress using Relative Plate Motion","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"library(tectonicr) — tectonicr","text":"details theoretical background provided Wdowinski (1998) Stephan et al. (2023).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"library(tectonicr) — tectonicr","text":"list documented functions may viewed typing help(package=\"tectonicr\").","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"library(tectonicr) — tectonicr","text":"Wdowinski (1998) \"theory intraplate tectonics\". JGR: Solid Earth, 103(3), 5037<U+2013>5059. Stephan, T., Enkelmann, E., Kroner, U. \"Analyzing horizontal orientation crustal stress adjacent plate boundaries\". Sci Rep 13. 15590 (2023).","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/tectonicr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"library(tectonicr) — tectonicr","text":"Tobias Stephan","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":null,"dir":"Reference","previous_headings":"","what":"Trigonometric Functions in Degrees — trigon","title":"Trigonometric Functions in Degrees — trigon","text":"Trigonometric functions expecting input degrees.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Trigonometric Functions in Degrees — trigon","text":"","code":"sind(x)  cosd(x)  tand(x)  asind(x)  acosd(x)  atand(x)  atan2d(x1, x2)  cot(x)  cotd(x)"},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Trigonometric Functions in Degrees — trigon","text":"x, x1, x2 Numeric complex vectors.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/trigon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Trigonometric Functions in Degrees — trigon","text":"scalar vector numeric values.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":null,"dir":"Reference","previous_headings":"","what":"Vector cross product — vcross","title":"Vector cross product — vcross","text":"Vector cross product","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Vector cross product — vcross","text":"","code":"vcross(x, y)"},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Vector cross product — vcross","text":"x, y numeric vectors length 3","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Vector cross product — vcross","text":"numeric vector length 3","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vcross.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Vector cross product — vcross","text":"","code":"vcross(c(1, 2, 3), c(4, 5, 6)) #> [1] -3  6 -3"},{"path":"https://tobiste.github.io/tectonicr/reference/vm_qqplot.html","id":null,"dir":"Reference","previous_headings":"","what":"von Mises Quantile-Quantile Plot — vm_qqplot","title":"von Mises Quantile-Quantile Plot — vm_qqplot","text":"Produces Q-Q plot data specified von Mises distribution graphically assess goodness fit model.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vm_qqplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"von Mises Quantile-Quantile Plot — vm_qqplot","text":"","code":"vm_qqplot(   x,   w = NULL,   axial = TRUE,   mean = NULL,   kappa = NULL,   xlab = \"von Mises quantile function\",   ylab = \"Empirical quantile function\",   main = \"von Mises Q-Q Plot\",   col = \"#B63679FF\",   add_line = TRUE,   ... )"},{"path":"https://tobiste.github.io/tectonicr/reference/vm_qqplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"von Mises Quantile-Quantile Plot — vm_qqplot","text":"x numeric. Angles degrees w numeric. optional weightings x estimate mean kappa. axial Logical. Whether data uniaxial (axial=FALSE) mean numeric. Circular mean von Mises distribution. NULL, estimated x. kappa numeric. Concentration parameter von Mises distribution. NULL, estimated x. xlab, ylab, main plot labels. col color dots. add_line logical. Whether connect points straight lines? ... graphical parameters","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vm_qqplot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"von Mises Quantile-Quantile Plot — vm_qqplot","text":"plot","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vm_qqplot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"von Mises Quantile-Quantile Plot — vm_qqplot","text":"","code":"# von Mises distribution x_vm <- rvm(100, mean = 0, kappa = 4) vm_qqplot(x_vm, axial = FALSE, pch = 20)   # uniform distribution x_unif <- runif(100, 0, 360) vm_qqplot(x_unif, axial = FALSE, pch = 20)"},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":null,"dir":"Reference","previous_headings":"","what":"The von Mises Distribution — vonmises","title":"The von Mises Distribution — vonmises","text":"Density, probability distribution function, quantiles, random generation circular normal distribution mean kappa.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The von Mises Distribution — vonmises","text":"","code":"rvm(n, mean, kappa)  dvm(theta, mean, kappa, log = FALSE, axial = FALSE)  pvm(theta, mean, kappa, from = NULL, tol = 1e-20)  qvm(p, mean = 0, kappa, from = NULL, tol = .Machine$double.eps^(0.6), ...)"},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"The von Mises Distribution — vonmises","text":"n integer. Number observations degrees mean numeric. Mean angle degrees kappa numeric. Concentration parameter range (0, Inf] theta numeric. Angular value degrees log logical. TRUE, probabilities p given log(p). axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). NULL set \\(\\mu-\\pi\\). value pvm qvm evaluated. degrees. tol numeric. precision evaluating distribution function quantile. p numeric. Vector probabilities values \\([0,1]\\). ... parameters passed stats::integrate().","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"The von Mises Distribution — vonmises","text":"dvm gives density, pvm gives probability von Mises distribution function, rvm generates random deviates (degrees), qvm provides quantiles (degrees).","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/vonmises.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"The von Mises Distribution — vonmises","text":"","code":"x <- rvm(100, mean = 90, kappa = 2)  dvm(x, mean = 90, kappa = 2) #>   [1] 0.509479911 0.094523734 0.401135165 0.015150245 0.515056867 0.504234831 #>   [7] 0.510477840 0.417917149 0.482935548 0.494885825 0.505735970 0.009583728 #>  [13] 0.411485278 0.252392989 0.489937889 0.359115776 0.368594044 0.046043060 #>  [19] 0.439255354 0.416447381 0.501441564 0.503179719 0.170856590 0.431869095 #>  [25] 0.246142225 0.498646417 0.501278266 0.014255796 0.488788161 0.140656755 #>  [31] 0.511103710 0.482409721 0.467849398 0.242310057 0.333004834 0.013662820 #>  [37] 0.384791300 0.490177362 0.035168128 0.511722334 0.492856360 0.188095562 #>  [43] 0.226244762 0.072881804 0.012763882 0.422627248 0.203571299 0.515204302 #>  [49] 0.298873287 0.497040593 0.359998578 0.315576284 0.515366912 0.372728343 #>  [55] 0.487896919 0.066609092 0.499256709 0.508277953 0.171786330 0.506481068 #>  [61] 0.455796664 0.185742899 0.441850442 0.410420283 0.148953393 0.385571101 #>  [67] 0.347809109 0.515859172 0.403001514 0.500054877 0.507372960 0.513706351 #>  [73] 0.449611203 0.474620240 0.032438880 0.069935148 0.513354661 0.514193617 #>  [79] 0.480083493 0.176627398 0.515312282 0.478703207 0.513678425 0.283611625 #>  [85] 0.485716302 0.218614066 0.010216541 0.515870312 0.223709206 0.456517077 #>  [91] 0.199515458 0.234582553 0.311868557 0.407001160 0.277497437 0.479684441 #>  [97] 0.412586480 0.098842778 0.174616618 0.202228053 dvm(x, mean = 90, kappa = 2, axial = TRUE) #>   [1] 0.98162658 0.02071422 0.40181129 0.19508051 1.02516106 0.94216774 #>   [7] 0.98929554 0.46450808 0.79582728 0.87526659 0.95331646 0.97506592 #>  [13] 0.43953287 0.09854573 0.84157140 0.27624556 0.30105700 0.02247366 #>  [19] 0.55650418 0.45869383 0.92172591 0.93440003 0.04209585 0.52300061 #>  [25] 0.09245245 0.90165987 0.92054296 0.23581946 0.83390635 0.03086569 #>  [31] 0.99413198 0.79248180 0.70460101 0.08888982 0.21696297 0.27039021 #>  [37] 0.34801800 0.84317566 0.03024338 0.99893276 0.86130590 0.05046311 #>  [43] 0.07529241 0.01893244 0.33918104 0.48357842 0.05939521 1.02633451 #>  [49] 0.15657584 0.89030559 0.27847783 0.18394774 1.02763012 0.31247992 #>  [55] 0.82800670 0.01893941 0.90600816 0.97245877 0.04250799 0.95889293 #>  [61] 0.63843264 0.04922751 0.56871368 0.43551318 0.03355598 0.35043289 #>  [67] 0.24901828 1.03156093 0.40839546 0.91172273 0.96560555 1.01446665 #>  [73] 0.60663827 0.74434425 0.03400799 0.01889760 1.01169778 1.01831388 #>  [79] 0.77782880 0.04472393 1.02719469 0.76924689 1.01424654 0.13480832 #>  [85] 0.81372566 0.06953838 0.75948561 1.03165003 0.07333254 0.64222888 #>  [91] 0.05691430 0.08208776 0.17752903 0.42282520 0.12687856 0.77533913 #>  [97] 0.44372341 0.02132520 0.04378913 0.05856213  pvm(x, mean = 90, kappa = 2) #>   [1] 0.442544954 0.950072041 0.741008210 0.007857925 0.479326901 0.422546553 #>   [7] 0.552794403 0.723003860 0.369971170 0.396093635 0.427699560 0.001131250 #>  [13] 0.730083300 0.139463525 0.615454125 0.219307839 0.772295762 0.025557679 #>  [19] 0.697580927 0.275357325 0.413779628 0.580877726 0.909659616 0.706756641 #>  [25] 0.135412002 0.405827150 0.413294757 0.992855709 0.617973196 0.073849581 #>  [31] 0.549647800 0.368943394 0.656804363 0.867045356 0.802486011 0.006644475 #>  [37] 0.757243420 0.614922368 0.980099386 0.546327379 0.608793502 0.899880931 #>  [43] 0.122862054 0.039055713 0.005832365 0.282336852 0.890848700 0.481256035 #>  [49] 0.828529715 0.401551529 0.220078056 0.183906846 0.516354327 0.231458000 #>  [55] 0.619888867 0.964080908 0.592495475 0.437392098 0.909139405 0.569600178 #>  [61] 0.324798078 0.901232462 0.305751447 0.731233114 0.078304976 0.243505794 #>  [67] 0.790355533 0.503679211 0.739077976 0.590254174 0.433777613 0.466477622 #>  [73] 0.316095716 0.645414746 0.018436052 0.037582266 0.463874614 0.470461315 #>  [79] 0.635507867 0.093582234 0.482805752 0.638079679 0.533736427 0.160567496 #>  [85] 0.375550565 0.881819070 0.997279506 0.497208998 0.121298807 0.674158882 #>  [91] 0.106759757 0.128058756 0.181097705 0.734883686 0.843686942 0.636256509 #>  [97] 0.728887871 0.947883292 0.907550879 0.891642717 qvm(c(.25, .5, .75), mean = 90, kappa = 2) #> [1]  59.65254  90.00000 120.34746"},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":null,"dir":"Reference","previous_headings":"","what":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"Watson's test statistic rotation-invariant Cramer - von Mises test","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"","code":"watson_test(   x,   alpha = 0,   dist = c(\"uniform\", \"vonmises\"),   axial = TRUE,   mu = NULL,   quiet = FALSE )"},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"x numeric vector. Values degrees alpha Significance level test. Valid levels 0.01, 0.05, 0.1. argument may omitted (NULL, default), case, range p-value returned. dist Distribution test . default, \"uniform\", uniform distribution. \"vonmises\" tests von Mises distribution. axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) circular, .e. \\(2 \\pi\\)-periodical (FALSE). mu (optional) specified mean direction (degrees) alternative hypothesis quiet logical. Prints test's decision.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"list containing test statistic statistic significance level p.value.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"statistic > p.value, null hypothesis rejected. , randomness (uniform distribution) excluded.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"Mardia Jupp (2000). Directional Statistics. John Wiley Sons.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/watson_test.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Watson's \\(U^2\\) Test of Circular Uniformity — watson_test","text":"","code":"# Example data from Mardia and Jupp (2001), pp. 93 pidgeon_homing <- c(55, 60, 65, 95, 100, 110, 260, 275, 285, 295) watson_test(pidgeon_homing, alpha = .05) #> Do Not Reject Null Hypothesis #> $statistic #> [1] 0.1153633 #>  #> $p.value #> [1] 0.187 #>   # San Andreas Fault Data: data(san_andreas) data(\"nuvel1\") PoR <- subset(nuvel1, nuvel1$plate.rot == \"na\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") watson_test(sa.por$azi.PoR, alpha = .05) #> Reject Null Hypothesis #> $statistic #> [1] 52.14744 #>  #> $p.value #> [1] 0.187 #>  watson_test(sa.por$azi.PoR, alpha = .05, dist = \"vonmises\") #> Reject Null Hypothesis #> $statistic #> [1] 5.386914 #>  #> $p.value #> [1] 0.113 #>"},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"Weighted version Rayleigh test (V0-test) uniformity distribution priori expected von Mises concentration.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"","code":"weighted_rayleigh(x, mu = NULL, w = NULL, axial = TRUE, quiet = FALSE)"},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"x numeric vector. Values degrees mu priori expected direction (degrees) alternative hypothesis. w numeric vector weights length length(x). NULL, non-weighted Rayleigh test performed. axial logical. Whether data axial, .e. \\(\\pi\\)-periodical (TRUE, default) directional, .e. \\(2 \\pi\\)-periodical (FALSE). quiet logical. Prints test's decision.","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"list components: R C mean resultant length dispersion (mu specified). Small values R (large values C) reject uniformity. Negative values C indicate vectors point opposite directions (also lead rejection). statistic Test statistic p.value significance level test statistic","code":""},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"Null hypothesis uniformity (randomness). alternative distribution (specified) mean direction (mu). statistic >= p.value, null hypothesis randomness rejected angles derive distribution (specified) mean direction.","code":""},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/reference/weighted_rayleigh.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Weighted Goodness-of-fit Test for Circular Data — weighted_rayleigh","text":"","code":"# Load data data(\"cpm_models\") data(san_andreas) PoR <- equivalent_rotation(cpm_models[[\"NNR-MORVEL56\"]], \"na\", \"pa\") sa.por <- PoR_shmax(san_andreas, PoR, \"right\") data(\"iceland\") PoR.ice <- equivalent_rotation(cpm_models[[\"NNR-MORVEL56\"]], \"eu\", \"na\") ice.por <- PoR_shmax(iceland, PoR.ice, \"out\") data(\"tibet\") PoR.tib <- equivalent_rotation(cpm_models[[\"NNR-MORVEL56\"]], \"eu\", \"in\") tibet.por <- PoR_shmax(tibet, PoR.tib, \"in\")  # GOF test: weighted_rayleigh(tibet.por$azi.PoR, mu = 90, w = 1 / tibet$unc) #> Reject Null Hypothesis #> $C #> [1] 0.5321474 #>  #> $statistic #> [1] 25.68679 #>  #> $p.value #> [1] 2.004315e-143 #>  weighted_rayleigh(ice.por$azi.PoR, mu = 0, w = 1 / iceland$unc) #> Reject Null Hypothesis #> $C #> [1] 0.3728874 #>  #> $statistic #> [1] 11.67322 #>  #> $p.value #> [1] 1.826316e-32 #>  weighted_rayleigh(sa.por$azi.PoR, mu = 135, w = 1 / san_andreas$unc) #> Reject Null Hypothesis #> $C #> [1] 0.8042366 #>  #> $statistic #> [1] 38.16524 #>  #> $p.value #> [1] 3.589557e-315 #>"},{"path":[]},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-044","dir":"Changelog","previous_headings":"","what":"tectonicr 0.4.4","title":"tectonicr 0.4.4","text":"CRAN release: 2024-12-11","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-04392","dir":"Changelog","previous_headings":"","what":"tectonicr 0.4.3.92","title":"tectonicr 0.4.3.92","text":"PoR_distance(): function calculate distance PoR","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-043","dir":"Changelog","previous_headings":"","what":"tectonicr 0.4.3","title":"tectonicr 0.4.3","text":"performance upgrade spatial interpolation spatial interpolation summary statistics new vignette spatial analysis optional grid lines added rose","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0409001-2024-09-12","dir":"Changelog","previous_headings":"","what":"tectonicr 0.4.0.9001 2024-09-12","title":"tectonicr 0.4.0.9001 2024-09-12","text":"bug fix load_wsm() CI now double axial data","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-040-2024-08-08","dir":"Changelog","previous_headings":"","what":"tectonicr 0.4.0 2024-08-08","title":"tectonicr 0.4.0 2024-08-08","text":"CRAN release: 2024-08-21 minor performance upgrade CRAN submission","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0311-2024-07-26","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.11 2024-07-26","title":"tectonicr 0.3.11 2024-07-26","text":"bug fixes minor performance upgrade QQ plot circular data","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0310-2024-07-13","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.10 2024-07-13","title":"tectonicr 0.3.10 2024-07-13","text":"statistical estimators jittered circular dot plot","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-039-2024-06-20","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.9 2024-06-20","title":"tectonicr 0.3.9 2024-06-20","text":"stacked dots rose() diagram density multiples von Mises distribution added circular plots","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-038-2024-06-17","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.8 2024-06-17","title":"tectonicr 0.3.8 2024-06-17","text":"superimposed_shmax() superimposed_shmax_PB() model stress orientation using multiple plate boundaries","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-037-2024-06-09","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.7 2024-06-09","title":"tectonicr 0.3.7 2024-06-09","text":"download WSM2016 data GFZ server using download_WSM2016()","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-036","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.6","title":"tectonicr 0.3.6","text":"bug fixes weighted_rayleigh()","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-032-2024-05-27","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.2 2024-05-27","title":"tectonicr 0.3.2 2024-05-27","text":"CRAN release: 2024-05-27 adjusted due functions’ move spatstat.geom spatstat.univar","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-030-2024-05-14","dir":"Changelog","previous_headings":"","what":"tectonicr 0.3.0 2024-05-14","title":"tectonicr 0.3.0 2024-05-14","text":"weighting powers added spatial interpolation stress2grid() deviation_norm() accepts two arguments","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0298-2024-04-07","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.98 2024-04-07","title":"tectonicr 0.2.98 2024-04-07","text":"minor fixes","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0297-2024-04-07","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.97 2024-04-07","title":"tectonicr 0.2.97 2024-04-07","text":"dispersion_grid() deprecated replaced kernel_dispersion() (details vignette E)","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0296-2023-10-15","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.96 2023-10-15","title":"tectonicr 0.2.96 2023-10-15","text":"cran update","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0295-2023-10-15","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.95 2023-10-15","title":"tectonicr 0.2.95 2023-10-15","text":"CRAN release: 2023-11-02 bug fixes rose() (e.g. symmetrical fans axial data plotted) weighted rose diagram enabled add single line fans rose() add mean confidence interval rose() corrected typos manual estimate kappa von Mises distribution:est.kapp() doubling angles testing Watson distribution watson_test()","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0294-2023-09-25","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.94 2023-09-25","title":"tectonicr 0.2.94 2023-09-25","text":"mean direction spread rose() diagram","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0293-2023-09-10","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.93 2023-09-10","title":"tectonicr 0.2.93 2023-09-10","text":"CRAN release: 2023-09-22 prepared CRAN submission bootstrap statistics circular dispersion multiple angles input circular dispersion daughter functions spatial distribution dispersion","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-0292-2023-05-16","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.92 2023-05-16","title":"tectonicr 0.2.92 2023-05-16","text":"statistical tests circular uniformity goodness--fit, e.g.  rayleigh_test() bug fixes","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-028-2023-03-01","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.8 2023-03-01","title":"tectonicr 0.2.8 2023-03-01","text":"estimator error predictions: prd_err() area-weighted rose() diagrams","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-027-2023-01-25","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.7 2023-01-25","title":"tectonicr 0.2.7 2023-01-25","text":"optimized functions better performance bug fixes","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-026-2023-01-06","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.6 2023-01-06","title":"tectonicr 0.2.6 2023-01-06","text":"distance plate boundary km coordinate transformation using quaternions plot transformed azimuth vs. distance plate boundary quick plotting: quick_plot()","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-025","dir":"Changelog","previous_headings":"","what":"tectonicr 0.2.5","title":"tectonicr 0.2.5","text":"Calculation rotation replaced quaternions boost performance sp class output small circles, great circles loxodromes deprecated new functions added calculate mean/median stress direction, e.g.  circular_mean(), circular_median()","code":""},{"path":"https://tobiste.github.io/tectonicr/news/index.html","id":"tectonicr-01","dir":"Changelog","previous_headings":"","what":"tectonicr 0.1","title":"tectonicr 0.1","text":"new functions rotate stress directions data points PoR coordinate system calculate distance data point plate boundaries Added functions calculate relative plate motions set absolute plate motions different relative plate motions","code":""}]
